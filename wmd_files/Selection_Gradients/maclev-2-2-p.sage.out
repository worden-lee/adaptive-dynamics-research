set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= -{\left(\frac{{\left(X_{0} {c}_{00} + X_{1} {c}_{10} + X_{2} {c}_{20} - K_{0} r_{0}\right)} {c}_{20} w_{0}}{r_{0}} + \frac{{\left(X_{0} {c}_{01} + X_{1} {c}_{11} + X_{2} {c}_{21} - K_{1} r_{1}\right)} {c}_{21} w_{1}}{r_{1}} + m_{2}\right)} b_{2} 
\end{align*}

limit as {c_2_1: c_0_1, b_2: b_0, m_2: m_0, c_2_0: c_0_0}
after those limits:
   (K_0*c_0_0*r_0*r_1*w_0 + K_1*c_0_1*r_0*r_1*w_1 - m_0*r_0*r_1 - (c_0_0^2*r_1*w_0 + c_0_1^2*r_0*w_1)*X_0 - (c_0_0*c_1_0*r_1*w_0 + c_0_1*c_1_1*r_0*w_1)*X_1 - (c_0_0^2*r_1*w_0 + c_0_1^2*r_0*w_1)*X_2)/(r_0*r_1)
  -b_0
  -(X_0*b_0*c_0_0*w_0 + 2*X_2*b_0*c_0_0*w_0 + X_1*b_0*c_1_0*w_0 - K_0*b_0*r_0*w_0)/r_0
  K_1*b_0*w_1 - X_0*b_0*c_0_1*w_1/r_1 - 2*X_2*b_0*c_0_1*w_1/r_1 - X_1*b_0*c_1_1*w_1/r_1
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= -{\left(\frac{{\left(X_{0} {c}_{00} + X_{1} {c}_{10} + X_{2} {c}_{20} - K_{0} r_{0}\right)} {c}_{20} w_{0}}{r_{0}} + \frac{{\left(X_{0} {c}_{01} + X_{1} {c}_{11} + X_{2} {c}_{21} - K_{1} r_{1}\right)} {c}_{21} w_{1}}{r_{1}} + m_{2}\right)} b_{2} 
\end{align*}

limit as {c_2_1: c_1_1, b_2: b_1, m_2: m_1, c_2_0: c_1_0}
after those limits:
   (K_0*c_1_0*r_0*r_1*w_0 + K_1*c_1_1*r_0*r_1*w_1 - m_1*r_0*r_1 - (c_0_0*c_1_0*r_1*w_0 + c_0_1*c_1_1*r_0*w_1)*X_0 - (c_1_0^2*r_1*w_0 + c_1_1^2*r_0*w_1)*X_1 - (c_1_0^2*r_1*w_0 + c_1_1^2*r_0*w_1)*X_2)/(r_0*r_1)
  -b_1
  -(X_0*b_1*c_0_0*w_0 + X_1*b_1*c_1_0*w_0 + 2*X_2*b_1*c_1_0*w_0 - K_0*b_1*r_0*w_0)/r_0
  K_1*b_1*w_1 - X_0*b_1*c_0_1*w_1/r_1 - X_1*b_1*c_1_1*w_1/r_1 - 2*X_2*b_1*c_1_1*w_1/r_1
adaptive dynamics of b, m, c: b_0 -> -(2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*((2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*(c_0_0^2 + c_0_1^2)/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*(c_0_0*c_1_0 + c_0_1*c_1_1)/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - 2*c_0_0 - 2*c_0_1 + m_0)*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
c_1_0 -> ((2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*b_1*c_0_0/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*b_1*c_1_0/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - 2*b_1)*(2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
c_0_1 -> -(2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*((2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*b_0*c_0_1/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*b_0*c_1_1/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - 2*b_0)*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
b_1 -> (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*((2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*(c_0_0*c_1_0 + c_0_1*c_1_1)/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*(c_1_0^2 + c_1_1^2)/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - 2*c_1_0 - 2*c_1_1 + m_1)*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
m_1 -> (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*b_1*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
m_0 -> -(2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*b_0*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
c_0_0 -> -(2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*((2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*b_0*c_0_0/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*b_0*c_1_0/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - 2*b_0)*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
c_1_1 -> ((2*c_0_1*c_1_0^2 - 2*(c_0_0 + c_0_1)*c_1_0*c_1_1 + 2*c_0_0*c_1_1^2 - (c_1_0^2 + c_1_1^2)*m_0 + (c_0_0*c_1_0 + c_0_1*c_1_1)*m_1)*b_1*c_0_1/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - (2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*b_1*c_1_1/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2) - 2*b_1)*(2*(c_0_0*c_0_1 - c_0_1^2)*c_1_0 - 2*(c_0_0^2 - c_0_0*c_0_1)*c_1_1 - (c_0_0*c_1_0 + c_0_1*c_1_1)*m_0 + (c_0_0^2 + c_0_1^2)*m_1)*gamma/(c_0_1^2*c_1_0^2 - 2*c_0_0*c_0_1*c_1_0*c_1_1 + c_0_0^2*c_1_1^2)
plot c vs t
plot c vs c
plot total c vs u
