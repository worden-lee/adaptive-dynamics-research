set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right)\right)} w_{0} c_{0}\left(u_{2}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right)\right)} w_{1} c_{1}\left(u_{2}\right)}{r_{1}} - m\left(u_{2}\right)\right)} b\left(u_{2}\right) 
\end{align*}

limit as {u_2: u_0}
after those limits:
   limit(-(X_2*w_0*c_0(u_0)*D[0](c_0)(u_0)/r_0 + X_2*w_1*c_1(u_0)*D[0](c_1)(u_0)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_2*c_0(u_0) - X_1*c_0(u_1))*w_0*D[0](c_0)(u_0)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_2*c_1(u_0) - X_1*c_1(u_1))*w_1*D[0](c_1)(u_0)/r_1 + D[0](m)(u_0))*b(u_0) + ((K_0*r_0 - X_0*c_0(u_0) - X_2*c_0(u_0) - X_1*c_0(u_1))*w_0*c_0(u_0)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_2*c_1(u_0) - X_1*c_1(u_1))*w_1*c_1(u_0)/r_1 - m(u_0))*D[0](b)(u_0), u_0, u_0)
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right)\right)} w_{0} c_{0}\left(u_{2}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right)\right)} w_{1} c_{1}\left(u_{2}\right)}{r_{1}} - m\left(u_{2}\right)\right)} b\left(u_{2}\right) 
\end{align*}

limit as {u_2: u_1}
after those limits:
   limit(-(X_2*w_0*c_0(u_1)*D[0](c_0)(u_1)/r_0 + X_2*w_1*c_1(u_1)*D[0](c_1)(u_1)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_1))*w_0*D[0](c_0)(u_1)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_1))*w_1*D[0](c_1)(u_1)/r_1 + D[0](m)(u_1))*b(u_1) + ((K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_1))*w_0*c_0(u_1)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_1))*w_1*c_1(u_1)/r_1 - m(u_1))*D[0](b)(u_1), u_1, u_1)
ad flow: {u_1: -Xhat_1*gamma*limit(r_0*r_1*b(u_1)*D[0](m)(u_1) - (K_0*r_0*r_1*w_0*c_0(u_1) + K_1*r_0*r_1*w_1*c_1(u_1) - r_0*r_1*m(u_1) - (r_1*w_0*c_0(u_0)*c_0(u_1) + r_0*w_1*c_1(u_0)*c_1(u_1))*Xhat_0 - (r_1*w_0*c_0(u_1)^2 + r_0*w_1*c_1(u_1)^2)*Xhat_1)*D[0](b)(u_1) - (K_0*r_0*r_1*w_0*b(u_1) - Xhat_0*r_1*w_0*b(u_1)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_1)*c_0(u_1))*D[0](c_0)(u_1) - (K_1*r_0*r_1*w_1*b(u_1) - Xhat_0*r_0*w_1*b(u_1)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_1)*c_1(u_1))*D[0](c_1)(u_1), u_1, u_1)/(r_0*r_1), u_0: -Xhat_0*gamma*limit(r_0*r_1*b(u_0)*D[0](m)(u_0) - (K_0*r_0*r_1*w_0*c_0(u_0) + K_1*r_0*r_1*w_1*c_1(u_0) - r_0*r_1*m(u_0) - (r_1*w_0*c_0(u_0)^2 + r_0*w_1*c_1(u_0)^2)*Xhat_0 - (r_1*w_0*c_0(u_0)*c_0(u_1) + r_0*w_1*c_1(u_0)*c_1(u_1))*Xhat_1)*D[0](b)(u_0) - (K_0*r_0*r_1*w_0*b(u_0) - Xhat_0*r_1*w_0*b(u_0)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_0)*c_0(u_1))*D[0](c_0)(u_0) - (K_1*r_0*r_1*w_1*b(u_0) - Xhat_0*r_0*w_1*b(u_0)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_0)*c_1(u_1))*D[0](c_1)(u_0), u_0, u_0)/(r_0*r_1)}
+ bindings: {gamma -> 1, K_0 -> 2, b_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) - Xhat_1*e^(-3*(u_1 - 1)^2) + 2, c_0_1 -> e^(-3*(u_0 - 1)^2), b_2 -> 1, r_1 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), m_1 -> 1, m_3 -> 1, c_0_0 -> e^(-3*u_0^2), c_2_1 -> e^(-3*(u_2 - 1)^2), w_1 -> 1, b_3 -> 1, K_1 -> 2, c_1_0 -> e^(-3*u_1^2), R_0 -> -X_0*e^(-3*u_0^2) - X_1*e^(-3*u_1^2) + 2, r_0 -> 1, m_2 -> 1, Rhat_0 -> -Xhat_0*e^(-3*u_0^2) - Xhat_1*e^(-3*u_1^2) + 2, w_0 -> 1, c_3_1 -> e^(-3*(u_3 - 1)^2), m_0 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_3_0 -> e^(-3*u_3^2), R_1 -> -X_0*e^(-3*(u_0 - 1)^2) - X_1*e^(-3*(u_1 - 1)^2) + 2, c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
--> flow: {u_1: 6*(Xhat_1*u_1*e^(3*u_0^2 + 6) + ((Xhat_0*e^6 - 2*e^(3*u_0^2 + 6))*u_1 + ((Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*u_1 - Xhat_0*e^(6*u_0) + 2*e^(3*u_0^2 + 3))*e^(6*u_1))*e^(3*u_1^2) + (Xhat_1*u_1*e^(3*u_0^2) - Xhat_1*e^(3*u_0^2))*e^(12*u_1))*Xhat_1*e^(-3*u_0^2 - 6*u_1^2 - 6), u_0: 6*(Xhat_1*u_0*e^(3*u_0^2 + 6) + (Xhat_1*u_0 - Xhat_1)*e^(3*u_0^2 + 6*u_0 + 6*u_1) + (Xhat_0*u_0*e^6 - 2*(u_0*e^6 + (u_0*e^3 - e^3)*e^(6*u_0))*e^(3*u_0^2) + (Xhat_0*u_0 - Xhat_0)*e^(12*u_0))*e^(3*u_1^2))*Xhat_0*e^(-6*u_0^2 - 3*u_1^2 - 6)}
find adaptive dynamics equilibria
construct u vector field plot
solve
NumericalODESystem.solve
Integration of dynamics interrupted : Equilibrium detected
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2, 3]
set_population_indices: [0, 1, 2, 3]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{3}}\frac{dX_{3}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right) - X_{3} c_{0}\left(u_{3}\right)\right)} w_{0} c_{0}\left(u_{3}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right) - X_{3} c_{1}\left(u_{3}\right)\right)} w_{1} c_{1}\left(u_{3}\right)}{r_{1}} - m\left(u_{3}\right)\right)} b\left(u_{3}\right) 
\end{align*}

limit as {u_3: u_0}
after those limits:
   limit(-(X_3*w_0*c_0(u_0)*D[0](c_0)(u_0)/r_0 + X_3*w_1*c_1(u_0)*D[0](c_1)(u_0)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_3*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2))*w_0*D[0](c_0)(u_0)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_3*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2))*w_1*D[0](c_1)(u_0)/r_1 + D[0](m)(u_0))*b(u_0) + ((K_0*r_0 - X_0*c_0(u_0) - X_3*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2))*w_0*c_0(u_0)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_3*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2))*w_1*c_1(u_0)/r_1 - m(u_0))*D[0](b)(u_0), u_0, u_0)
set_population_indices: [0, 1, 2, 3]
set_population_indices: [0, 1, 2, 3]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{3}}\frac{dX_{3}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right) - X_{3} c_{0}\left(u_{3}\right)\right)} w_{0} c_{0}\left(u_{3}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right) - X_{3} c_{1}\left(u_{3}\right)\right)} w_{1} c_{1}\left(u_{3}\right)}{r_{1}} - m\left(u_{3}\right)\right)} b\left(u_{3}\right) 
\end{align*}

limit as {u_3: u_1}
after those limits:
   limit(-(X_3*w_0*c_0(u_1)*D[0](c_0)(u_1)/r_0 + X_3*w_1*c_1(u_1)*D[0](c_1)(u_1)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_3*c_0(u_1) - X_2*c_0(u_2))*w_0*D[0](c_0)(u_1)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_3*c_1(u_1) - X_2*c_1(u_2))*w_1*D[0](c_1)(u_1)/r_1 + D[0](m)(u_1))*b(u_1) + ((K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_3*c_0(u_1) - X_2*c_0(u_2))*w_0*c_0(u_1)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_3*c_1(u_1) - X_2*c_1(u_2))*w_1*c_1(u_1)/r_1 - m(u_1))*D[0](b)(u_1), u_1, u_1)
set_population_indices: [0, 1, 2, 3]
set_population_indices: [0, 1, 2, 3]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{3}}\frac{dX_{3}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right) - X_{3} c_{0}\left(u_{3}\right)\right)} w_{0} c_{0}\left(u_{3}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right) - X_{3} c_{1}\left(u_{3}\right)\right)} w_{1} c_{1}\left(u_{3}\right)}{r_{1}} - m\left(u_{3}\right)\right)} b\left(u_{3}\right) 
\end{align*}

limit as {u_3: u_2}
after those limits:
   limit(-(X_3*w_0*c_0(u_2)*D[0](c_0)(u_2)/r_0 + X_3*w_1*c_1(u_2)*D[0](c_1)(u_2)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2) - X_3*c_0(u_2))*w_0*D[0](c_0)(u_2)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2) - X_3*c_1(u_2))*w_1*D[0](c_1)(u_2)/r_1 + D[0](m)(u_2))*b(u_2) + ((K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2) - X_3*c_0(u_2))*w_0*c_0(u_2)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2) - X_3*c_1(u_2))*w_1*c_1(u_2)/r_1 - m(u_2))*D[0](b)(u_2), u_2, u_2)
ad flow: {u_1: -Xhat_1*gamma*limit(r_0*r_1*b(u_1)*D[0](m)(u_1) - (K_0*r_0*r_1*w_0*c_0(u_1) + K_1*r_0*r_1*w_1*c_1(u_1) - r_0*r_1*m(u_1) - (r_1*w_0*c_0(u_0)*c_0(u_1) + r_0*w_1*c_1(u_0)*c_1(u_1))*Xhat_0 - (r_1*w_0*c_0(u_1)^2 + r_0*w_1*c_1(u_1)^2)*Xhat_1 - (r_1*w_0*c_0(u_1)*c_0(u_2) + r_0*w_1*c_1(u_1)*c_1(u_2))*Xhat_2)*D[0](b)(u_1) - (K_0*r_0*r_1*w_0*b(u_1) - Xhat_0*r_1*w_0*b(u_1)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_1)*c_0(u_1) - Xhat_2*r_1*w_0*b(u_1)*c_0(u_2))*D[0](c_0)(u_1) - (K_1*r_0*r_1*w_1*b(u_1) - Xhat_0*r_0*w_1*b(u_1)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_1)*c_1(u_1) - Xhat_2*r_0*w_1*b(u_1)*c_1(u_2))*D[0](c_1)(u_1), u_1, u_1)/(r_0*r_1), u_0: -Xhat_0*gamma*limit(r_0*r_1*b(u_0)*D[0](m)(u_0) - (K_0*r_0*r_1*w_0*c_0(u_0) + K_1*r_0*r_1*w_1*c_1(u_0) - r_0*r_1*m(u_0) - (r_1*w_0*c_0(u_0)^2 + r_0*w_1*c_1(u_0)^2)*Xhat_0 - (r_1*w_0*c_0(u_0)*c_0(u_1) + r_0*w_1*c_1(u_0)*c_1(u_1))*Xhat_1 - (r_1*w_0*c_0(u_0)*c_0(u_2) + r_0*w_1*c_1(u_0)*c_1(u_2))*Xhat_2)*D[0](b)(u_0) - (K_0*r_0*r_1*w_0*b(u_0) - Xhat_0*r_1*w_0*b(u_0)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_0)*c_0(u_1) - Xhat_2*r_1*w_0*b(u_0)*c_0(u_2))*D[0](c_0)(u_0) - (K_1*r_0*r_1*w_1*b(u_0) - Xhat_0*r_0*w_1*b(u_0)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_0)*c_1(u_1) - Xhat_2*r_0*w_1*b(u_0)*c_1(u_2))*D[0](c_1)(u_0), u_0, u_0)/(r_0*r_1), u_2: -Xhat_2*gamma*limit(r_0*r_1*b(u_2)*D[0](m)(u_2) - (K_0*r_0*r_1*w_0*c_0(u_2) + K_1*r_0*r_1*w_1*c_1(u_2) - r_0*r_1*m(u_2) - (r_1*w_0*c_0(u_0)*c_0(u_2) + r_0*w_1*c_1(u_0)*c_1(u_2))*Xhat_0 - (r_1*w_0*c_0(u_1)*c_0(u_2) + r_0*w_1*c_1(u_1)*c_1(u_2))*Xhat_1 - (r_1*w_0*c_0(u_2)^2 + r_0*w_1*c_1(u_2)^2)*Xhat_2)*D[0](b)(u_2) - (K_0*r_0*r_1*w_0*b(u_2) - Xhat_0*r_1*w_0*b(u_2)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_2)*c_0(u_1) - Xhat_2*r_1*w_0*b(u_2)*c_0(u_2))*D[0](c_0)(u_2) - (K_1*r_0*r_1*w_1*b(u_2) - Xhat_0*r_0*w_1*b(u_2)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_2)*c_1(u_1) - Xhat_2*r_0*w_1*b(u_2)*c_1(u_2))*D[0](c_1)(u_2), u_2, u_2)/(r_0*r_1)}
+ bindings: {gamma -> 1, K_0 -> 2, b_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) - Xhat_1*e^(-3*(u_1 - 1)^2) - Xhat_2*e^(-3*(u_2 - 1)^2) + 2, c_0_1 -> e^(-3*(u_0 - 1)^2), b_2 -> 1, r_1 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), m_1 -> 1, m_3 -> 1, c_0_0 -> e^(-3*u_0^2), c_2_1 -> e^(-3*(u_2 - 1)^2), w_1 -> 1, b_3 -> 1, K_1 -> 2, c_1_0 -> e^(-3*u_1^2), R_0 -> -X_0*e^(-3*u_0^2) - X_1*e^(-3*u_1^2) - X_2*e^(-3*u_2^2) + 2, r_0 -> 1, m_2 -> 1, Rhat_0 -> -Xhat_0*e^(-3*u_0^2) - Xhat_1*e^(-3*u_1^2) - Xhat_2*e^(-3*u_2^2) + 2, w_0 -> 1, c_3_1 -> e^(-3*(u_3 - 1)^2), m_0 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_3_0 -> e^(-3*u_3^2), R_1 -> -X_0*e^(-3*(u_0 - 1)^2) - X_1*e^(-3*(u_1 - 1)^2) - X_2*e^(-3*(u_2 - 1)^2) + 2, c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
--> flow: {u_1: 6*(Xhat_2*u_1*e^(3*u_0^2 + 3*u_1^2 + 6) + (Xhat_2*u_1*e^(3*u_0^2) - Xhat_2*e^(3*u_0^2))*e^(3*u_1^2 + 6*u_1 + 6*u_2) + (Xhat_1*u_1*e^(3*u_0^2 + 6) + ((Xhat_0*e^6 - 2*e^(3*u_0^2 + 6))*u_1 + ((Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*u_1 - Xhat_0*e^(6*u_0) + 2*e^(3*u_0^2 + 3))*e^(6*u_1))*e^(3*u_1^2) + (Xhat_1*u_1*e^(3*u_0^2) - Xhat_1*e^(3*u_0^2))*e^(12*u_1))*e^(3*u_2^2))*Xhat_1*e^(-3*u_0^2 - 6*u_1^2 - 3*u_2^2 - 6), u_0: 6*(Xhat_2*u_0*e^(3*u_0^2 + 3*u_1^2 + 6) + (Xhat_2*u_0 - Xhat_2)*e^(3*u_0^2 + 3*u_1^2 + 6*u_0 + 6*u_2) + (Xhat_1*u_0*e^(3*u_0^2 + 6) + (Xhat_1*u_0 - Xhat_1)*e^(3*u_0^2 + 6*u_0 + 6*u_1) + (Xhat_0*u_0*e^6 - 2*(u_0*e^6 + (u_0*e^3 - e^3)*e^(6*u_0))*e^(3*u_0^2) + (Xhat_0*u_0 - Xhat_0)*e^(12*u_0))*e^(3*u_1^2))*e^(3*u_2^2))*Xhat_0*e^(-6*u_0^2 - 3*u_1^2 - 3*u_2^2 - 6), u_2: 6*(Xhat_2*u_2*e^(3*u_0^2 + 3*u_1^2 + 6) + ((Xhat_1*e^(3*u_0^2 + 6) + (Xhat_0*e^6 - 2*e^(3*u_0^2 + 6))*e^(3*u_1^2))*u_2 + ((Xhat_1*e^(3*u_0^2 + 6*u_1) + (Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*e^(3*u_1^2))*u_2 - Xhat_1*e^(3*u_0^2 + 6*u_1) - (Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*e^(3*u_1^2))*e^(6*u_2))*e^(3*u_2^2) + (Xhat_2*u_2*e^(3*u_0^2 + 3*u_1^2) - Xhat_2*e^(3*u_0^2 + 3*u_1^2))*e^(12*u_2))*Xhat_2*e^(-3*u_0^2 - 3*u_1^2 - 6*u_2^2 - 6)}
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2, 3]
set_population_indices: [0, 1, 2, 3]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{3}}\frac{dX_{3}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right) - X_{3} c_{0}\left(u_{3}\right)\right)} w_{0} c_{0}\left(u_{3}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right) - X_{3} c_{1}\left(u_{3}\right)\right)} w_{1} c_{1}\left(u_{3}\right)}{r_{1}} - m\left(u_{3}\right)\right)} b\left(u_{3}\right) 
\end{align*}

limit as {u_3: u_0}
after those limits:
   limit(-(X_3*w_0*c_0(u_0)*D[0](c_0)(u_0)/r_0 + X_3*w_1*c_1(u_0)*D[0](c_1)(u_0)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_3*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2))*w_0*D[0](c_0)(u_0)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_3*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2))*w_1*D[0](c_1)(u_0)/r_1 + D[0](m)(u_0))*b(u_0) + ((K_0*r_0 - X_0*c_0(u_0) - X_3*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2))*w_0*c_0(u_0)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_3*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2))*w_1*c_1(u_0)/r_1 - m(u_0))*D[0](b)(u_0), u_0, u_0)
set_population_indices: [0, 1, 2, 3]
set_population_indices: [0, 1, 2, 3]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{3}}\frac{dX_{3}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right) - X_{3} c_{0}\left(u_{3}\right)\right)} w_{0} c_{0}\left(u_{3}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right) - X_{3} c_{1}\left(u_{3}\right)\right)} w_{1} c_{1}\left(u_{3}\right)}{r_{1}} - m\left(u_{3}\right)\right)} b\left(u_{3}\right) 
\end{align*}

limit as {u_3: u_1}
after those limits:
   limit(-(X_3*w_0*c_0(u_1)*D[0](c_0)(u_1)/r_0 + X_3*w_1*c_1(u_1)*D[0](c_1)(u_1)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_3*c_0(u_1) - X_2*c_0(u_2))*w_0*D[0](c_0)(u_1)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_3*c_1(u_1) - X_2*c_1(u_2))*w_1*D[0](c_1)(u_1)/r_1 + D[0](m)(u_1))*b(u_1) + ((K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_3*c_0(u_1) - X_2*c_0(u_2))*w_0*c_0(u_1)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_3*c_1(u_1) - X_2*c_1(u_2))*w_1*c_1(u_1)/r_1 - m(u_1))*D[0](b)(u_1), u_1, u_1)
set_population_indices: [0, 1, 2, 3]
set_population_indices: [0, 1, 2, 3]
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{3}}\frac{dX_{3}}{dt} &= {\left(\frac{{\left(K_{0} r_{0} - X_{0} c_{0}\left(u_{0}\right) - X_{1} c_{0}\left(u_{1}\right) - X_{2} c_{0}\left(u_{2}\right) - X_{3} c_{0}\left(u_{3}\right)\right)} w_{0} c_{0}\left(u_{3}\right)}{r_{0}} + \frac{{\left(K_{1} r_{1} - X_{0} c_{1}\left(u_{0}\right) - X_{1} c_{1}\left(u_{1}\right) - X_{2} c_{1}\left(u_{2}\right) - X_{3} c_{1}\left(u_{3}\right)\right)} w_{1} c_{1}\left(u_{3}\right)}{r_{1}} - m\left(u_{3}\right)\right)} b\left(u_{3}\right) 
\end{align*}

limit as {u_3: u_2}
after those limits:
   limit(-(X_3*w_0*c_0(u_2)*D[0](c_0)(u_2)/r_0 + X_3*w_1*c_1(u_2)*D[0](c_1)(u_2)/r_1 - (K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2) - X_3*c_0(u_2))*w_0*D[0](c_0)(u_2)/r_0 - (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2) - X_3*c_1(u_2))*w_1*D[0](c_1)(u_2)/r_1 + D[0](m)(u_2))*b(u_2) + ((K_0*r_0 - X_0*c_0(u_0) - X_1*c_0(u_1) - X_2*c_0(u_2) - X_3*c_0(u_2))*w_0*c_0(u_2)/r_0 + (K_1*r_1 - X_0*c_1(u_0) - X_1*c_1(u_1) - X_2*c_1(u_2) - X_3*c_1(u_2))*w_1*c_1(u_2)/r_1 - m(u_2))*D[0](b)(u_2), u_2, u_2)
ad flow: {u_1: -Xhat_1*gamma*limit(r_0*r_1*b(u_1)*D[0](m)(u_1) - (K_0*r_0*r_1*w_0*c_0(u_1) + K_1*r_0*r_1*w_1*c_1(u_1) - r_0*r_1*m(u_1) - (r_1*w_0*c_0(u_0)*c_0(u_1) + r_0*w_1*c_1(u_0)*c_1(u_1))*Xhat_0 - (r_1*w_0*c_0(u_1)^2 + r_0*w_1*c_1(u_1)^2)*Xhat_1 - (r_1*w_0*c_0(u_1)*c_0(u_2) + r_0*w_1*c_1(u_1)*c_1(u_2))*Xhat_2)*D[0](b)(u_1) - (K_0*r_0*r_1*w_0*b(u_1) - Xhat_0*r_1*w_0*b(u_1)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_1)*c_0(u_1) - Xhat_2*r_1*w_0*b(u_1)*c_0(u_2))*D[0](c_0)(u_1) - (K_1*r_0*r_1*w_1*b(u_1) - Xhat_0*r_0*w_1*b(u_1)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_1)*c_1(u_1) - Xhat_2*r_0*w_1*b(u_1)*c_1(u_2))*D[0](c_1)(u_1), u_1, u_1)/(r_0*r_1), u_0: -Xhat_0*gamma*limit(r_0*r_1*b(u_0)*D[0](m)(u_0) - (K_0*r_0*r_1*w_0*c_0(u_0) + K_1*r_0*r_1*w_1*c_1(u_0) - r_0*r_1*m(u_0) - (r_1*w_0*c_0(u_0)^2 + r_0*w_1*c_1(u_0)^2)*Xhat_0 - (r_1*w_0*c_0(u_0)*c_0(u_1) + r_0*w_1*c_1(u_0)*c_1(u_1))*Xhat_1 - (r_1*w_0*c_0(u_0)*c_0(u_2) + r_0*w_1*c_1(u_0)*c_1(u_2))*Xhat_2)*D[0](b)(u_0) - (K_0*r_0*r_1*w_0*b(u_0) - Xhat_0*r_1*w_0*b(u_0)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_0)*c_0(u_1) - Xhat_2*r_1*w_0*b(u_0)*c_0(u_2))*D[0](c_0)(u_0) - (K_1*r_0*r_1*w_1*b(u_0) - Xhat_0*r_0*w_1*b(u_0)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_0)*c_1(u_1) - Xhat_2*r_0*w_1*b(u_0)*c_1(u_2))*D[0](c_1)(u_0), u_0, u_0)/(r_0*r_1), u_2: -Xhat_2*gamma*limit(r_0*r_1*b(u_2)*D[0](m)(u_2) - (K_0*r_0*r_1*w_0*c_0(u_2) + K_1*r_0*r_1*w_1*c_1(u_2) - r_0*r_1*m(u_2) - (r_1*w_0*c_0(u_0)*c_0(u_2) + r_0*w_1*c_1(u_0)*c_1(u_2))*Xhat_0 - (r_1*w_0*c_0(u_1)*c_0(u_2) + r_0*w_1*c_1(u_1)*c_1(u_2))*Xhat_1 - (r_1*w_0*c_0(u_2)^2 + r_0*w_1*c_1(u_2)^2)*Xhat_2)*D[0](b)(u_2) - (K_0*r_0*r_1*w_0*b(u_2) - Xhat_0*r_1*w_0*b(u_2)*c_0(u_0) - Xhat_1*r_1*w_0*b(u_2)*c_0(u_1) - Xhat_2*r_1*w_0*b(u_2)*c_0(u_2))*D[0](c_0)(u_2) - (K_1*r_0*r_1*w_1*b(u_2) - Xhat_0*r_0*w_1*b(u_2)*c_1(u_0) - Xhat_1*r_0*w_1*b(u_2)*c_1(u_1) - Xhat_2*r_0*w_1*b(u_2)*c_1(u_2))*D[0](c_1)(u_2), u_2, u_2)/(r_0*r_1)}
+ bindings: {gamma -> 1, K_0 -> 2, b_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) - Xhat_1*e^(-3*(u_1 - 1)^2) - Xhat_2*e^(-3*(u_2 - 1)^2) + 2, c_0_1 -> e^(-3*(u_0 - 1)^2), b_2 -> 1, r_1 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), m_1 -> 1, m_3 -> 1, c_0_0 -> e^(-3*u_0^2), c_2_1 -> e^(-3*(u_2 - 1)^2), w_1 -> 1, b_3 -> 1, K_1 -> 2, c_1_0 -> e^(-3*u_1^2), R_0 -> -X_0*e^(-3*u_0^2) - X_1*e^(-3*u_1^2) - X_2*e^(-3*u_2^2) + 2, r_0 -> 1, m_2 -> 1, Rhat_0 -> -Xhat_0*e^(-3*u_0^2) - Xhat_1*e^(-3*u_1^2) - Xhat_2*e^(-3*u_2^2) + 2, w_0 -> 1, c_3_1 -> e^(-3*(u_3 - 1)^2), m_0 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_3_0 -> e^(-3*u_3^2), R_1 -> -X_0*e^(-3*(u_0 - 1)^2) - X_1*e^(-3*(u_1 - 1)^2) - X_2*e^(-3*(u_2 - 1)^2) + 2, c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
--> flow: {u_1: 6*(Xhat_2*u_1*e^(3*u_0^2 + 3*u_1^2 + 6) + (Xhat_2*u_1*e^(3*u_0^2) - Xhat_2*e^(3*u_0^2))*e^(3*u_1^2 + 6*u_1 + 6*u_2) + (Xhat_1*u_1*e^(3*u_0^2 + 6) + ((Xhat_0*e^6 - 2*e^(3*u_0^2 + 6))*u_1 + ((Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*u_1 - Xhat_0*e^(6*u_0) + 2*e^(3*u_0^2 + 3))*e^(6*u_1))*e^(3*u_1^2) + (Xhat_1*u_1*e^(3*u_0^2) - Xhat_1*e^(3*u_0^2))*e^(12*u_1))*e^(3*u_2^2))*Xhat_1*e^(-3*u_0^2 - 6*u_1^2 - 3*u_2^2 - 6), u_0: 6*(Xhat_2*u_0*e^(3*u_0^2 + 3*u_1^2 + 6) + (Xhat_2*u_0 - Xhat_2)*e^(3*u_0^2 + 3*u_1^2 + 6*u_0 + 6*u_2) + (Xhat_1*u_0*e^(3*u_0^2 + 6) + (Xhat_1*u_0 - Xhat_1)*e^(3*u_0^2 + 6*u_0 + 6*u_1) + (Xhat_0*u_0*e^6 - 2*(u_0*e^6 + (u_0*e^3 - e^3)*e^(6*u_0))*e^(3*u_0^2) + (Xhat_0*u_0 - Xhat_0)*e^(12*u_0))*e^(3*u_1^2))*e^(3*u_2^2))*Xhat_0*e^(-6*u_0^2 - 3*u_1^2 - 3*u_2^2 - 6), u_2: 6*(Xhat_2*u_2*e^(3*u_0^2 + 3*u_1^2 + 6) + ((Xhat_1*e^(3*u_0^2 + 6) + (Xhat_0*e^6 - 2*e^(3*u_0^2 + 6))*e^(3*u_1^2))*u_2 + ((Xhat_1*e^(3*u_0^2 + 6*u_1) + (Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*e^(3*u_1^2))*u_2 - Xhat_1*e^(3*u_0^2 + 6*u_1) - (Xhat_0*e^(6*u_0) - 2*e^(3*u_0^2 + 3))*e^(3*u_1^2))*e^(6*u_2))*e^(3*u_2^2) + (Xhat_2*u_2*e^(3*u_0^2 + 3*u_1^2) - Xhat_2*e^(3*u_0^2 + 3*u_1^2))*e^(12*u_2))*Xhat_2*e^(-3*u_0^2 - 3*u_1^2 - 6*u_2^2 - 6)}
plot u vs t
plot u vs u
done
