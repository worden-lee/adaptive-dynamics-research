# This file was *autogenerated* from the file logistic-S-A-curves.sage
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_5 = Integer(5); _sage_const_0p1 = RealNumber('0.1'); _sage_const_0p25 = RealNumber('0.25'); _sage_const_0p5 = RealNumber('0.5')# produces: logistic-S-A-curves.png S-A-vf.sobj
var('a k')
outer = _sage_const_3 
SA = vector( [ _sage_const_1 , -a/k ] )
SAvf = plot_vector_field( [_sage_const_1 , -a/k], [k,_sage_const_0 ,outer], [a,-outer,_sage_const_0 ], color='red', figsize=(_sage_const_5 ,_sage_const_5 ), frame=false );
# invasion-neutral curves are perpendicular to the gradient:
# (slope) da/dk = k/a
# a da = k dk
# a^2 = k^2 + C
# a = \pm \sqrt(k^2 + C)
var('s')
from numpy import arange
for k,a in sum( ( [ (s,_sage_const_0 ), (_sage_const_0 ,-s) ] for s in arange(_sage_const_0p5 ,_sage_const_3 ,_sage_const_0p25 ) ), [ (_sage_const_0 ,_sage_const_0 ) ] ):
    C = a**_sage_const_2  - k**_sage_const_2 
    SAvf += plot( (s, -sqrt(s**_sage_const_2 +C)), (s, _sage_const_0 , outer), parametric=True, color='gray', thickness=_sage_const_0p1 , ymin=-outer )
SAvf.axes_labels( [ '$k$', '$a$' ] );
SAvf.save( 'logistic-S-A-curves.png' );
save_session( 'S-A-vf' )
