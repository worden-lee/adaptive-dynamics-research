Thu Jun 18 22:18:08 2015
/usr/bin/make -C /usr/local/src/jekyll-research/wmd_files/Selection_Gradients \
    maclev-2-2-Rhat-vs-t.png
Including .mk files: sage.mk sage-inline.mk 
Including .mk files from .step files: foodweb.py.mk foodweb.sage.mk foodweb.plot.sage.mk foodweb-2-2.sage.mk foodweb-2-2.plot.sage.mk maclev-1-1.sage.mk maclev-1-1-adap.sage.mk maclev-1-1-mc-adap-geom.sage.mk maclev-1-1-ak-adap-geom.sage.mk S-A-vector-field.sage.mk maclev-1-1-d1A-vector-field.sage.mk maclev-1-1-S-and-d1A-on-curve.sage.mk maclev-1-1-S-and-D-on-curve.sage.mk maclev_1_2_defs.py.mk maclev-1-2-popdyn.sage.mk maclev-1-2-adap.sage.mk maclev-1-2-p.sage.mk maclev-1-2-zngi.sage.mk maclev-1-2-geom.sage.mk maclev_unconstrained_c.py.mk maclev-2-2-c-popdyn.sage.mk maclev-2-2-c-adap.sage.mk maclev-2-2-c-p.sage.mk maclev-2-2-c-zngi.sage.mk maclev-2-2-c-geom.sage.mk maclev_2_2_defs.py.mk maclev-2-2-popdyn.sage.mk maclev-2-2-adap.sage.mk maclev-2-2-p.sage.mk maclev-2-2-zngi.sage.mk maclev-2-2-geom.sage.mk maclev_a_only_defs.py.mk maclev-a-only-popdyn.sage.mk maclev-a-only-adap.sage.mk maclev-a-only-p.sage.mk maclev-a-only-zngi.sage.mk maclev-a-only-geom.sage.mk maclev_a_c.py.mk maclev-2-2-a-c-popdyn.sage.mk maclev-2-2-a-c-adap.sage.mk maclev-2-2-a-c-p.sage.mk maclev-2-2-a-c-zngi.sage.mk maclev-2-2-a-c-geom.sage.mk maclevmodels.py.mk statmech.py.mk statmech-assemble.sage.mk statmech-assemble-plot.sage.mk statmech-evol.sage.mk statmech-evol-plot.sage.mk toc.sage.mk maclev-2-2-zngi-invasion.sage.mk lotkavolterra.py.mk
Including .mk files from .sage-inline files: avec.sage.mk a-careful.sage.mk
Including .tex.d files: foodweb-2-2.tikz.tex.d foodweb.tikz.tex.d
make: Entering directory `/usr/local/src/jekyll-research/wmd_files/Selection_Gradients'
/usr/bin/make --no-print-directory -C /usr/local/src/jekyll-research/wmd_files/SageDynamicsRepo/SageDynamics dynamicalsystems.py
Including .mk files:  
Including .tex.d files: 
make[1]: Nothing to be done for `dynamicalsystems.py'.
/usr/bin/make --no-print-directory -C /usr/local/src/jekyll-research/wmd_files/SageDynamicsRepo/SageAdaptiveDynamics adaptivedynamics.py
Including .mk files:  
Including .tex.d files: 
make[1]: Nothing to be done for `adaptivedynamics.py'.
rm -f maclev-2-2-geom.sage.out maclev-2-2-geom.sage.status maclev-2-2-geom.sage.out.tex maclev-2-2-k-vs-t.png maclev-2-2-a-vs-t.png maclev-2-2-Xhat-vs-t.png maclev-2-2-Rhat-vs-t.png maclev-2-2-a-vs-a.png maclev-2-2-a-vs-k.png maclev-2-2-a-arrows.png
(sage maclev-2-2-geom.sage && touch maclev-2-2-geom.sage.status) | tee maclev-2-2-geom.sage.dmp
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
ad bindings: {K_0 -> 2, m_3 -> 1, c_0_1 -> e^(-3*(u_0 - 1)^2), r_1 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), c_2_1 -> e^(-3*(u_2 - 1)^2), K_1 -> 2, c_1_0 -> e^(-3*u_1^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) - Xhat_1*e^(-3*u_1^2) + 2, c_3_1 -> e^(-3*(u_3 - 1)^2), c_1_1 -> e^(-3*(u_1 - 1)^2), gamma -> 1, b_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) - Xhat_1*e^(-3*(u_1 - 1)^2) + 2, b_2 -> 1, m_1 -> 1, c_0_0 -> e^(-3*u_0^2), w_1 -> 1, b_3 -> 1, R_0 -> -X_0*e^(-3*u_0^2) - X_1*e^(-3*u_1^2) + 2, r_0 -> 1, m_2 -> 1, w_0 -> 1, m_0 -> 1, c_3_0 -> e^(-3*u_3^2), R_1 -> -X_0*e^(-3*(u_0 - 1)^2) - X_1*e^(-3*(u_1 - 1)^2) + 2, c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
model bindings: {R_0 -> -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1 -> -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0 -> -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1 -> -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}
_early_bindings: {b_3 -> b(u_3), b_0 -> b(u_0), c_1_0 -> c_0(u_1), c_0_1 -> c_1(u_0), b_2 -> b(u_2), m_2 -> m(u_2), b_1 -> b(u_1), c_2_0 -> c_0(u_2), m_1 -> m(u_1), c_3_1 -> c_1(u_3), m_0 -> m(u_0), m_3 -> m(u_3), c_0_0 -> c_0(u_0), c_1_1 -> c_1(u_1), c_3_0 -> c_0(u_3), c_2_1 -> c_1(u_2)}
_late_bindings: {K_0 -> 2, m_3 -> 1, c_0_1 -> e^(-3*(u_0 - 1)^2), r_1 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), c_2_1 -> e^(-3*(u_2 - 1)^2), K_1 -> 2, c_1_0 -> e^(-3*u_1^2), c_3_1 -> e^(-3*(u_3 - 1)^2), c_1_1 -> e^(-3*(u_1 - 1)^2), gamma -> 1, b_0 -> 1, b_2 -> 1, m_1 -> 1, c_0_0 -> e^(-3*u_0^2), w_1 -> 1, b_3 -> 1, r_0 -> 1, m_2 -> 1, w_0 -> 1, m_0 -> 1, c_3_0 -> e^(-3*u_3^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
make LV model
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
aij_dict: {a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1}
set_population_indices: [0, 1]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
aij_dict: {a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1}
_A_bindings: {k_0 -> K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_0_1 -> -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_0_0 -> -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1 -> -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_1_0 -> -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, k_1 -> K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1}
make LV adaptive dynamics
population vars [X_0, X_1]
population vars [X_0, X_1]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_0_1, a_2_0: a_0_0, k_2: k_0}
after those limits:
   1
  X_0
  X_1
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_1_1, a_2_0: a_1_0, k_2: k_1}
after those limits:
   1
  X_0
  X_1
Original pop-dyn system: 
\[\iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{dmath*}
\end{dgroup*}
\fi
\]
Extended pop-dyn system: 
\[\iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\end{dmath*}
\begin{dmath*}
\frac{dX_{2}}{dt} = {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{dmath*}
\end{dgroup*}
\fi
\]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{2}\to k_{0},{a}_{20}\to {a}_{00},{a}_{21}\to {a}_{01},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial {a}_{00}} = \lim_{k_{2}\to k_{0},{a}_{20}\to {a}_{00},{a}_{21}\to {a}_{01},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{01}} = \lim_{k_{2}\to k_{0},{a}_{20}\to {a}_{00},{a}_{21}\to {a}_{01},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial {a}_{00}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{01}} = X_{1} .
\end{align*}
 Original pop-dyn system: 
\[ \iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{dmath*}
\end{dgroup*}
\fi
 \]
 Extended pop-dyn system: 
\[ \iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\end{dmath*}
\begin{dmath*}
\frac{dX_{2}}{dt} = {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{dmath*}
\end{dgroup*}
\fi
 \]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{2}\to k_{1},{a}_{20}\to {a}_{10},{a}_{21}\to {a}_{11},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial {a}_{10}} = \lim_{k_{2}\to k_{1},{a}_{20}\to {a}_{10},{a}_{21}\to {a}_{11},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{11}} = \lim_{k_{2}\to k_{1},{a}_{20}\to {a}_{10},{a}_{21}\to {a}_{11},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial {a}_{10}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{11}} = X_{1} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  {a}_{00}\\
  {a}_{01}\\
  k_{0}\\
  k_{1}\\
  {a}_{10}\\
  {a}_{11}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  1\\
  1\\
  \hat{X}_{0}\\
  \hat{X}_{1}
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{1} &\to \hat{X}_{1} \\
  X_{0} &\to \hat{X}_{0}
\end{align*} \]
 The adaptive dynamics comes out to 
\[ \iflatexml
\begin{align*}
\frac{d{a}_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{d{a}_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma\\
\frac{d{a}_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{d{a}_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{d{a}_{00}}{dt} = \hat{X}_{0}^{2} \gamma\end{dmath*}
\begin{dmath*}
\frac{d{a}_{10}}{dt} = \hat{X}_{0} \hat{X}_{1} \gamma\end{dmath*}
\begin{dmath*}
\frac{dk_{0}}{dt} = \hat{X}_{0} \gamma\end{dmath*}
\begin{dmath*}
\frac{d{a}_{01}}{dt} = \hat{X}_{0} \hat{X}_{1} \gamma\end{dmath*}
\begin{dmath*}
\frac{d{a}_{11}}{dt} = \hat{X}_{1}^{2} \gamma\end{dmath*}
\begin{dmath*}
\frac{dk_{1}}{dt} = \hat{X}_{1} \gamma
\end{dmath*}
\end{dgroup*}
\fi
 \]

make LV evolution bindings
printing things in LaTeX
plot k vs. t
plot a vs. t
plot X vs. t
plot R vs. t
plot a vs. a
plot a vs. a with arrows
[ -e maclev-2-2-geom.sage.status ] && (rm -f maclev-2-2-geom.sage.status && mv maclev-2-2-geom.sage.dmp maclev-2-2-geom.sage.out) || exit 1
make: Leaving directory `/usr/local/src/jekyll-research/wmd_files/Selection_Gradients'
Make succeeded.
Thu Jun 18 22:19:00 2015
