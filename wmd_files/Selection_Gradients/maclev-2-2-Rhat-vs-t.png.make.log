Tue Jan  6 17:00:10 2015
/usr/bin/make -C /usr/local/src/jekyll-research/wmd_files/Selection_Gradients \
    maclev-2-2-Rhat-vs-t.png
Including .mk files: sage.mk sage-inline.mk 
Including .mk files from .step files: maclev-1-1.sage.mk maclev-1-1-adap.sage.mk maclev-1-1-mc-adap-geom.sage.mk maclev-1-1-ak-adap-geom.sage.mk S-A-vector-field.sage.mk maclev-1-1-d1A-vector-field.sage.mk maclev-1-1-S-and-d1A-on-curve.sage.mk maclev-1-1-S-and-D-on-curve.sage.mk maclev-2-2-c-popdyn.sage.mk maclev-2-2-c-adap.sage.mk maclev-2-2-c-p.sage.mk maclev-2-2-c-zngi.sage.mk maclev-2-2-c-geom.sage.mk maclev_2_2_defs.py.mk maclev-2-2-popdyn.sage.mk maclev-2-2-adap.sage.mk maclev-2-2-p.sage.mk maclev-2-2-zngi.sage.mk maclev-2-2-geom.sage.mk maclevmodels.py.mk lotkavolterra.py.mk maclev-2-2-zngi-invasion.sage.mk
Including .mk files from .sage-inline files: avec.sage.mk a-careful.sage.mk
Including .tex.d files: 
make: Entering directory `/usr/local/src/jekyll-research/wmd_files/Selection_Gradients'
/usr/bin/make --no-print-directory -C /usr/local/src/jekyll-research/wmd_files/SageDynamicsRepo/SageDynamics dynamicalsystems.py
Including .mk files:  
Including .tex.d files: 
make[1]: Nothing to be done for `dynamicalsystems.py'.
/usr/bin/make --no-print-directory -C /usr/local/src/jekyll-research/wmd_files/SageDynamicsRepo/SageAdaptiveDynamics adaptivedynamics.py
Including .mk files:  
Including .tex.d files: 
make[1]: Nothing to be done for `adaptivedynamics.py'.
touch maclev-2-2-geom.sage.tried
rm -f maclev-2-2-geom.sage.out maclev-2-2-geom.sage.status maclev-2-2-geom.sage.out.tex maclev-2-2-k-vs-t.png maclev-2-2-a-vs-t.png maclev-2-2-Xhat-vs-t.png maclev-2-2-Rhat-vs-t.png maclev-2-2-a-vs-a.png maclev-2-2-a-vs-k.png maclev-2-2-a-arrows.png
(sage maclev-2-2-geom.sage && touch maclev-2-2-geom.sage.status) | tee maclev-2-2-geom.sage.dmp
ad bindings: {r_1: 1, c_1_0: 1/(5*u_1^2 + 1), R_0: -X_0/(5*u_0^2 + 1) - X_1/(5*u_1^2 + 1) + 2, c_0_1: 1/(5*(u_0 - 1)^2 + 1), Rhat_1: -Xhat_0/(5*(u_0 - 1)^2 + 1) - Xhat_1/(5*(u_1 - 1)^2 + 1) + 2, K_1: 2, R_1: -X_0/(5*(u_0 - 1)^2 + 1) - X_1/(5*(u_1 - 1)^2 + 1) + 2, gamma: 1, c_i_1: 1/(5*(u_i - 1)^2 + 1), b_i: 1, c_1_1: 1/(5*(u_1 - 1)^2 + 1), K_0: 2, w_1: 1, c_i_0: 1/(5*u_i^2 + 1), m_1: 1, c_0_0: 1/(5*u_0^2 + 1), b_1: 1, w_0: 1, Rhat_0: -Xhat_0/(5*u_0^2 + 1) - Xhat_1/(5*u_1^2 + 1) + 2, m_i: 1, m_0: 1, r_0: 1, b_0: 1}, {('c_1', (u_0,)): 1/(5*(u_0 - 1)^2 + 1), ('c_0', (u_0,)): 1/(5*u_0^2 + 1), ('m', ()): 1, ('b', ()): 1}
model bindings: {R_0: -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1: -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0: -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1: -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}, {}
_early_bindings: {c_1_0: c_0(u_1), c_i_0: c_0(u_i), m_1: m(u_1), c_0_0: c_0(u_0), m_i: m(u_i), m_0: m(u_0), c_0_1: c_1(u_0), b_i: b(u_i), c_1_1: c_1(u_1), b_1: b(u_1), c_i_1: c_1(u_i), b_0: b(u_0)}, {}
_late_bindings: {w_1: 1, w_0: 1, r_1: 1, c_1_0: 1/(5*u_1^2 + 1), c_i_1: 1/(5*(u_i - 1)^2 + 1), c_i_0: 1/(5*u_i^2 + 1), m_1: 1, c_0_0: 1/(5*u_0^2 + 1), m_0: 1, m_i: 1, gamma: 1, c_0_1: 1/(5*(u_0 - 1)^2 + 1), b_i: 1, c_1_1: 1/(5*(u_1 - 1)^2 + 1), b_1: 1, K_0: 2, r_0: 1, K_1: 2, b_0: 1}, {('c_1', (u_0,)): 1/(5*(u_0 - 1)^2 + 1), ('c_0', (u_0,)): 1/(5*u_0^2 + 1), ('m', ()): 1, ('b', ()): 1}
make LV model
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
_A_bindings: {a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1}, {}
Inferring LV coefficients from X_0 equation: K_0*X_0*w_0*b(u_0)*c_0(u_0) - X_0^2*w_0*b(u_0)*c_0(u_0)^2/r_0 - X_0*X_1*w_0*b(u_0)*c_0(u_0)*c_0(u_1)/r_0 - X_0*X_i*w_0*b(u_0)*c_0(u_0)*c_0(u_i)/r_0 + K_1*X_0*w_1*b(u_0)*c_1(u_0) - X_0^2*w_1*b(u_0)*c_1(u_0)^2/r_1 - X_0*X_1*w_1*b(u_0)*c_1(u_0)*c_1(u_1)/r_1 - X_0*X_i*w_1*b(u_0)*c_1(u_0)*c_1(u_i)/r_1 - X_0*b(u_0)*m(u_0)
a_0_1 : -w_0*b(u_0)*c_0(u_0)*c_0(u_1)/r_0 - w_1*b(u_0)*c_1(u_0)*c_1(u_1)/r_1
a_0_i : -w_0*b(u_0)*c_0(u_0)*c_0(u_i)/r_0 - w_1*b(u_0)*c_1(u_0)*c_1(u_i)/r_1
k_0 : K_0*w_0*b(u_0)*c_0(u_0) + K_1*w_1*b(u_0)*c_1(u_0) - b(u_0)*m(u_0)
Inferring LV coefficients from X_1 equation: K_0*X_1*w_0*b(u_1)*c_0(u_1) - X_0*X_1*w_0*b(u_1)*c_0(u_0)*c_0(u_1)/r_0 - X_1^2*w_0*b(u_1)*c_0(u_1)^2/r_0 - X_1*X_i*w_0*b(u_1)*c_0(u_1)*c_0(u_i)/r_0 + K_1*X_1*w_1*b(u_1)*c_1(u_1) - X_0*X_1*w_1*b(u_1)*c_1(u_0)*c_1(u_1)/r_1 - X_1^2*w_1*b(u_1)*c_1(u_1)^2/r_1 - X_1*X_i*w_1*b(u_1)*c_1(u_1)*c_1(u_i)/r_1 - X_1*b(u_1)*m(u_1)
a_1_0 : -w_0*b(u_1)*c_0(u_0)*c_0(u_1)/r_0 - w_1*b(u_1)*c_1(u_0)*c_1(u_1)/r_1
a_1_i : -w_0*b(u_1)*c_0(u_1)*c_0(u_i)/r_0 - w_1*b(u_1)*c_1(u_1)*c_1(u_i)/r_1
k_1 : K_0*w_0*b(u_1)*c_0(u_1) + K_1*w_1*b(u_1)*c_1(u_1) - b(u_1)*m(u_1)
Inferring LV coefficients from X_i equation: K_0*X_i*w_0*b(u_i)*c_0(u_i) - X_0*X_i*w_0*b(u_i)*c_0(u_0)*c_0(u_i)/r_0 - X_1*X_i*w_0*b(u_i)*c_0(u_1)*c_0(u_i)/r_0 - X_i^2*w_0*b(u_i)*c_0(u_i)^2/r_0 + K_1*X_i*w_1*b(u_i)*c_1(u_i) - X_0*X_i*w_1*b(u_i)*c_1(u_0)*c_1(u_i)/r_1 - X_1*X_i*w_1*b(u_i)*c_1(u_1)*c_1(u_i)/r_1 - X_i^2*w_1*b(u_i)*c_1(u_i)^2/r_1 - X_i*b(u_i)*m(u_i)
a_i_0 : -w_0*b(u_i)*c_0(u_0)*c_0(u_i)/r_0 - w_1*b(u_i)*c_1(u_0)*c_1(u_i)/r_1
a_i_1 : -w_0*b(u_i)*c_0(u_1)*c_0(u_i)/r_0 - w_1*b(u_i)*c_1(u_1)*c_1(u_i)/r_1
k_i : K_0*w_0*b(u_i)*c_0(u_i) + K_1*w_1*b(u_i)*c_1(u_i) - b(u_i)*m(u_i)
a_to_u_bindings: {w_1: 1, a_1_i: -1/((5*(u_1 - 1)^2 + 1)*(5*(u_i - 1)^2 + 1)) - 1/((5*u_1^2 + 1)*(5*u_i^2 + 1)), r_1: 1, c_1_0: 1/(5*u_1^2 + 1), a_0_1: -1/((5*(u_0 - 1)^2 + 1)*(5*(u_1 - 1)^2 + 1)) - 1/((5*u_0^2 + 1)*(5*u_1^2 + 1)), R_0: -X_0/(5*u_0^2 + 1) - X_1/(5*u_1^2 + 1) + 2, K_0: 2, m_1: 1, c_0_0: 1/(5*u_0^2 + 1), k_1: 2/(5*(u_1 - 1)^2 + 1) + 2/(5*u_1^2 + 1) - 1, c_0_1: 1/(5*(u_0 - 1)^2 + 1), Rhat_1: -Xhat_0/(5*(u_0 - 1)^2 + 1) - Xhat_1/(5*(u_1 - 1)^2 + 1) + 2, b_1: 1, a_0_i: -1/((5*(u_0 - 1)^2 + 1)*(5*(u_i - 1)^2 + 1)) - 1/((5*u_0^2 + 1)*(5*u_i^2 + 1)), K_1: 2, R_1: -X_0/(5*(u_0 - 1)^2 + 1) - X_1/(5*(u_1 - 1)^2 + 1) + 2, gamma: 1, w_0: 1, a_0_0: -1/(5*(u_0 - 1)^2 + 1)^2 - 1/(5*u_0^2 + 1)^2, a_1_0: -1/((5*(u_0 - 1)^2 + 1)*(5*(u_1 - 1)^2 + 1)) - 1/((5*u_0^2 + 1)*(5*u_1^2 + 1)), Rhat_0: -Xhat_0/(5*u_0^2 + 1) - Xhat_1/(5*u_1^2 + 1) + 2, k_i: 2/(5*(u_i - 1)^2 + 1) + 2/(5*u_i^2 + 1) - 1, c_i_1: 1/(5*(u_i - 1)^2 + 1), m_i: 1, m_0: 1, k_0: 2/(5*(u_0 - 1)^2 + 1) + 2/(5*u_0^2 + 1) - 1, a_i_1: -1/((5*(u_1 - 1)^2 + 1)*(5*(u_i - 1)^2 + 1)) - 1/((5*u_1^2 + 1)*(5*u_i^2 + 1)), b_i: 1, c_1_1: 1/(5*(u_1 - 1)^2 + 1), c_i_0: 1/(5*u_i^2 + 1), a_i_i: -1/(5*(u_i - 1)^2 + 1)^2 - 1/(5*u_i^2 + 1)^2, r_0: 1, a_i_0: -1/((5*(u_0 - 1)^2 + 1)*(5*(u_i - 1)^2 + 1)) - 1/((5*u_0^2 + 1)*(5*u_i^2 + 1)), b_0: 1, a_1_1: -1/(5*(u_1 - 1)^2 + 1)^2 - 1/(5*u_1^2 + 1)^2}, {('c_1', (u_0,)): 1/(5*(u_0 - 1)^2 + 1), ('c_0', (u_0,)): 1/(5*u_0^2 + 1), ('m', ()): 1, ('b', ()): 1}
a_func: (u_0, u_i) |--> -1/((5*(u_0 - 1)^2 + 1)*(5*(u_i - 1)^2 + 1)) - 1/((5*u_0^2 + 1)*(5*u_i^2 + 1))
r_func: u_0 |--> 2/(5*(u_0 - 1)^2 + 1) + 2/(5*u_0^2 + 1) - 1
make LV adaptive dynamics
Original pop-dyn system: 
\[ \begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}
\end{align*} \
 \]
 Extended pop-dyn system: 
\[ \begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{i} a_{0i} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{i} a_{1i} + k_{1}\right)} X_{1}\\
\frac{dX_{i}}{dt} &= {\left(X_{0} a_{i0} + X_{1} a_{i1} + X_{i} a_{ii} + k_{i}\right)} X_{i}
\end{align*} \
 \]
 The invasion rate for population $i$ is:
\begin{align*}
  \mathscr I = \frac{1}{X_{i}}\frac{dX_{i}}{dt} &= X_{0} a_{i0} + X_{1} a_{i1} + X_{i} a_{ii} + k_{i} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{i}\to k_{0},a_{i0}\to a_{00},a_{i1}\to a_{01},X_{i}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{00}} = \lim_{k_{i}\to k_{0},a_{i0}\to a_{00},a_{i1}\to a_{01},X_{i}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{01}} = \lim_{k_{i}\to k_{0},a_{i0}\to a_{00},a_{i1}\to a_{01},X_{i}\to0}X_{1}\\
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{i}\to k_{1},a_{i0}\to a_{10},a_{i1}\to a_{11},X_{i}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{10}} = \lim_{k_{i}\to k_{1},a_{i0}\to a_{10},a_{i1}\to a_{11},X_{i}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{11}} = \lim_{k_{i}\to k_{1},a_{i0}\to a_{10},a_{i1}\to a_{11},X_{i}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{00}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{01}} = X_{1}\\
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{10}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{11}} = X_{1} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  a_{00}\\
  a_{10}\\
  a_{01}\\
  k_{0}\\
  a_{11}\\
  k_{1}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{0}\\
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  1\\
  \hat{X}_{1}\\
  1
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{0} &\to \hat{X}_{0} \\
  X_{1} &\to \hat{X}_{1}
\end{align*} \
 \]
 The adaptive dynamics comes out to 
\[ \begin{align*}
\frac{da_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{da_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma\\
\frac{da_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma
\end{align*} \
 \]

make LV evolution bindings
dudts: {0: (10*Xhat_0^2*gamma*((u_0 - 1)/(5*(u_0 - 1)^2 + 1)^3 + u_0/(5*u_0^2 + 1)^3) + 10*Xhat_0*Xhat_1*gamma*((u_0 - 1)/((5*(u_0 - 1)^2 + 1)^2*(5*(u_1 - 1)^2 + 1)) + u_0/((5*u_0^2 + 1)^2*(5*u_1^2 + 1))) - 20*Xhat_0*gamma*((u_0 - 1)/(5*(u_0 - 1)^2 + 1)^2 + u_0/(5*u_0^2 + 1)^2)), 1: (10*Xhat_1^2*gamma*((u_1 - 1)/(5*(u_1 - 1)^2 + 1)^3 + u_1/(5*u_1^2 + 1)^3) + 10*Xhat_0*Xhat_1*gamma*((u_1 - 1)/((5*(u_0 - 1)^2 + 1)*(5*(u_1 - 1)^2 + 1)^2) + u_1/((5*u_0^2 + 1)*(5*u_1^2 + 1)^2)) - 20*Xhat_1*gamma*((u_1 - 1)/(5*(u_1 - 1)^2 + 1)^2 + u_1/(5*u_1^2 + 1)^2))}
printing things in LaTeX
plot k vs. t
plot a vs. t
plot X vs. t
plot R vs. t
plot a vs. a
plot a vs. a with arrows
[ -e maclev-2-2-geom.sage.status ] && (rm -f maclev-2-2-geom.sage.status && mv maclev-2-2-geom.sage.dmp maclev-2-2-geom.sage.out) || exit 1
make: Leaving directory `/usr/local/src/jekyll-research/wmd_files/Selection_Gradients'
Make succeeded.
Tue Jan  6 17:00:49 2015
