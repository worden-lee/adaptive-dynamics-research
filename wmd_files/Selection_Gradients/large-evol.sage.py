# This file was *autogenerated* from the file large-evol.sage
from sage.all_cmdline import *   # import sage library
_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_0p01 = RealNumber('0.01'); _sage_const_10 = Integer(10)# requires: large.py
# requires: $(SageUtils)/latex_output.py
# requires: $(SageDynamics)/dynamicalsystems.py
# requires: $(SageAdaptiveDynamics)/adaptivedynamics.py
# requires: lotkavolterra.py
# requires: large-assemble.sobj
# produces: large-evol.sobj
from sage.all import *
from sage.misc.latex import _latex_file_

import large
import latex_output
import dynamicalsystems
import adaptivedynamics
import lotkavolterra

load_session( 'large-assemble' )

ltx = latex_output.latex_output( 'large-evol.sage.out.tex' )

def lv_interior_equilibrium( popdyn ):
    import sympy
    eqns = [ sympy.sympify( popdyn.add_hats()( (popdyn._flow[x]/x).simplify_rational() ) ) for x in popdyn._vars ]
    print eqns; sys.stdout.flush()
    #eqs = solve( eqns, *popdyn.equilibrium_vars(), solution_dict=True )
    eqs = sympy.solve( eqns, *popdyn.equilibrium_vars() )
    return dynamicalsystems.Bindings( { x: eqs[ sympy.sympify(x) ] for x in popdyn.equilibrium_vars() } )

u_init = dynamicalsystems.Bindings( { smr._u_indexer[i]:_sage_const_0  for i in smr._population_indices } )

equil = lv_interior_equilibrium( smr )
eq0 = dynamicalsystems.Bindings( equil )
#equil = smr.interior_equilibria()
print 'equil:', eq0
print 'equil at u=0:', u_init( eq0 )

sm_adap = adaptivedynamics.AdaptiveDynamicsModel( 
    smr,
    [ smr._u_indexer ],
    #early_bindings=fb,
    equilibrium = eq0
).bind( { 'gamma':_sage_const_1  } )

ltx.write( 'Adaptive dynamics of model:\n', sm_adap )

ad_init = dynamicalsystems.Bindings( { u:_sage_const_0  for u in sm_adap._vars } )
ad_init_state = [ ad_init(u) for u in sm_adap._vars ]

sm_traj = sm_adap.solve( ad_init_state, end_time=_sage_const_10 , step=_sage_const_0p01  )

slv = lotkavolterra.LotkaVolterraAdaptiveDynamics( sm_adap,
	r_name_indexer=large.vertex_indexer('r'),
        a_name_indexer=large.vertex_indexer_2d('a') )

ltx.close()

save_session('large-evol')
