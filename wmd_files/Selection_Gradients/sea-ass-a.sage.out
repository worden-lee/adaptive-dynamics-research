3 =becomes=> 3
1 =becomes=> 1
N_0 -> -(K*N_0 - ((B(x_t_0, X_t_0) - C_t(X_t_0))*p(x_a_0, X_a_0) - C_a(X_a_0))*n_0 + C_g(X_a_0) - R(X_a_0, X_t_0))*N_0
n_0 -> (((b(x_t_0, X_t_0) - c_t(x_t_0))*p(x_a_0, X_a_0) - c_a(x_a_0))*N_0 - k*n_0 - c_g(x_a_0) + r(x_a_0, x_t_0))*n_0 =becomes=> N_0 -> -(K*N_0 - ((B(x_t_0, X_t_0) - C_t(X_t_0))*p(x_a_0, X_a_0) - C_a(X_a_0))*n_0 + C_g(X_a_0) - R(X_a_0, X_t_0))*N_0
n_0 -> (((b(x_t_0, X_t_0) - c_t(x_t_0))*p(x_a_0, X_a_0) - c_a(x_a_0))*N_0 - k*n_0 - c_g(x_a_0) + r(x_a_0, x_t_0))*n_0
N_0 -> -(K_0*N_0 - ((B_0_0 - C_t_0)*p_0_0 - C_a_0)*n_0 + C_g_0 - R_0)*N_0
n_0 -> (((b_0_0 - c_t_0)*p_0_0 - c_a_0)*N_0 - k_0*n_0 - c_g_0 + r_0)*n_0 =becomes=> N_0 -> -(K_0*N_0 - ((B_0_0 - C_t_0)*p_0_0 - C_a_0)*n_0 + C_g_0 - R_0)*N_0
n_0 -> (((b_0_0 - c_t_0)*p_0_0 - c_a_0)*N_0 - k_0*n_0 - c_g_0 + r_0)*n_0
{, c_t(x) -> 0, B(x,y) -> 0, C_t(x) -> 0, b(x,y) -> 0} =becomes=> {, b(x,y) -> 0, c_t(x) -> 0, C_t(x) -> 0, B(x,y) -> 0}
{, c_a(x) -> 0, p(x,y) -> p, C_a(x) -> 0, c_g(x) -> 0, C_g(x) -> 0} =becomes=> {, C_a(x) -> 0, p(x,y) -> p, c_a(x) -> 0, C_g(x) -> 0, c_g(x) -> 0}
{k -> 1, K -> 1, C_g(x) -> 0, c_g(x) -> 0, B(x,y) -> -x - y, c_a(x) -> x^2, r(x,y) -> 1, c_t(x) -> x^2, C_t(x) -> x^2, R(x,y) -> 1, p(x,y) -> 1/(e^(-x - y) + 1), C_a(x) -> x^2, b(x,y) -> x + y} =becomes=> {k -> 1, K -> 1, c_g(x) -> 0, C_g(x) -> 0, c_a(x) -> x^2, r(x,y) -> 1, c_t(x) -> x^2, C_t(x) -> x^2, b(x,y) -> x + y, R(x,y) -> 1, p(x,y) -> 1/(e^(-x - y) + 1), C_a(x) -> x^2, B(x,y) -> -x - y}
0.0800000000000000 =becomes=> 0.0800000000000000
0 =becomes=> 0
{, C_a(x) -> x^2, p(x,y) -> 1/4*x + 1/4*y + 1/2, c_a(x) -> x^2, c_g(x) -> 0, C_g(x) -> 0} =becomes=> {, c_a(x) -> x^2, p(x,y) -> 1/4*x + 1/4*y + 1/2, C_a(x) -> x^2, C_g(x) -> 0, c_g(x) -> 0}
__main__ =becomes=> __main__
0.0400000000000000 =becomes=> 0.0400000000000000
0 =becomes=> 0
{, c_a(x) -> x^2, C_a(x) -> x^2, C_g(x) -> 0, c_g(x) -> 0} =becomes=> {, C_a(x) -> x^2, c_a(x) -> x^2, c_g(x) -> 0, C_g(x) -> 0}
{, c_g(x) -> 0, C_g(x) -> 0} =becomes=> {, C_g(x) -> 0, c_g(x) -> 0}
{k -> 1, K -> 1, r(x,y) -> 1, R(x,y) -> 1} =becomes=> {k -> 1, K -> 1, r(x,y) -> 1, R(x,y) -> 1}
4 =becomes=> 4
X_a_0 -> -(X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_a_0/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1) - (x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)
X_t_0 -> 0
x_a_0 -> -(x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_a_0/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1) - (X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)
x_t_0 -> 0 =becomes=> X_a_0 -> -(X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_a_0/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1) - (x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)
X_t_0 -> 0
x_a_0 -> -(x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_a_0/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1) - (X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1)
x_t_0 -> 0
{x_t_0 -> 0, X_a_0 -> 0, x_a_0 -> 0.0400000000000000, X_t_0 -> -0.0800000000000000} =becomes=> {x_t_0 -> 0, X_a_0 -> 0, x_a_0 -> 0.0400000000000000, X_t_0 -> -0.0800000000000000}
N_0 -> -((X_a_0^2 + (X_t_0^2 + X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1))*n_0 + N_0 - 1)*N_0
n_0 -> -((x_a_0^2 + (x_t_0^2 - X_t_0 - x_t_0)/(e^(-X_a_0 - x_a_0) + 1))*N_0 + n_0 - 1)*n_0 =becomes=> N_0 -> -((X_a_0^2 + (X_t_0^2 + X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1))*n_0 + N_0 - 1)*N_0
n_0 -> -((x_a_0^2 + (x_t_0^2 - X_t_0 - x_t_0)/(e^(-X_a_0 - x_a_0) + 1))*N_0 + n_0 - 1)*n_0
{, c_a(x) -> 0, p(x,y) -> 0, C_a(x) -> 0, c_g(x) -> 0, C_g(x) -> 0} =becomes=> {, C_a(x) -> 0, p(x,y) -> 0, c_a(x) -> 0, C_g(x) -> 0, c_g(x) -> 0}
1 =becomes=> 1
X_a_0 -> -(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_a_0/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1) + (x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_t_0^2*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2) + (x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(X_t_0 + x_t_0)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
X_t_0 -> -(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_t_0/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)) + (x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
x_a_0 -> -(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_a_0/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1) + (X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_t_0^2*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2) - (X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(X_t_0 + x_t_0)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
x_t_0 -> -(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_t_0/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)) - (X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1) =becomes=> X_a_0 -> -(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_a_0/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1) + (x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_t_0^2*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2) + (x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(X_t_0 + x_t_0)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
X_t_0 -> -(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*X_t_0/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)) + (x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
x_a_0 -> -(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_a_0/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1) + (X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_t_0^2*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2) - (X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(X_t_0 + x_t_0)*e^(-X_a_0 - x_a_0)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)^2))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
x_t_0 -> -(x_a_0^2 + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*(2*(X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)*x_t_0/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)) - (X_a_0^2 + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1) + (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1) - 1)/((X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)*(e^(-X_a_0 - x_a_0) + 1)))/(X_a_0^2*x_a_0^2 + x_t_0^2*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + X_t_0^2*x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - (X_t_0 + x_t_0)*(X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + X_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2) + (X_t_0 + x_t_0)*(x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + x_t_0^2/(e^(-X_a_0 - x_a_0) + 1)^2 - (X_t_0 + x_t_0)/(e^(-X_a_0 - x_a_0) + 1)^2) - 1)
{, B(x,y) -> -x - y, c_t(x) -> x^2, C_t(x) -> x^2, b(x,y) -> x + y} =becomes=> {, b(x,y) -> x + y, B(x,y) -> -x - y, C_t(x) -> x^2, c_t(x) -> x^2}
H =becomes=> H
{, B(x,y) -> V*x + W*y, c_t(x) -> x^2, C_t(x) -> x^2, b(x,y) -> v*x + w*y} =becomes=> {, b(x,y) -> v*x + w*y, B(x,y) -> V*x + W*y, C_t(x) -> x^2, c_t(x) -> x^2}
{, c_t(x) -> x^2, C_t(x) -> x^2} =becomes=> {, c_t(x) -> x^2, C_t(x) -> x^2}
y =becomes=> y
R_0 -> Nhat_0*gamma
C_g_0 -> -Nhat_0*gamma
C_a_0 -> -Nhat_0*gamma*nhat_0
C_t_0 -> -Nhat_0*gamma*nhat_0*p_0_0
B_0_0 -> Nhat_0*gamma*nhat_0*p_0_0
p_0_0 -> (B_0_0*nhat_0 - C_t_0*nhat_0)*Nhat_0*gamma + (Nhat_0*b_0_0 - Nhat_0*c_t_0)*gamma*nhat_0
r_0 -> gamma*nhat_0
c_g_0 -> -gamma*nhat_0
c_a_0 -> -Nhat_0*gamma*nhat_0
c_t_0 -> -Nhat_0*gamma*nhat_0*p_0_0
b_0_0 -> Nhat_0*gamma*nhat_0*p_0_0 =becomes=> R_0 -> Nhat_0*gamma
C_g_0 -> -Nhat_0*gamma
C_a_0 -> -Nhat_0*gamma*nhat_0
C_t_0 -> -Nhat_0*gamma*nhat_0*p_0_0
B_0_0 -> Nhat_0*gamma*nhat_0*p_0_0
p_0_0 -> (B_0_0*nhat_0 - C_t_0*nhat_0)*Nhat_0*gamma + (Nhat_0*b_0_0 - Nhat_0*c_t_0)*gamma*nhat_0
r_0 -> gamma*nhat_0
c_g_0 -> -gamma*nhat_0
c_a_0 -> -Nhat_0*gamma*nhat_0
c_t_0 -> -Nhat_0*gamma*nhat_0*p_0_0
b_0_0 -> Nhat_0*gamma*nhat_0*p_0_0
{, c_t(x) -> 0, B(x,y) -> 1, C_t(x) -> 0, b(x,y) -> 1} =becomes=> {, b(x,y) -> 1, c_t(x) -> 0, C_t(x) -> 0, B(x,y) -> 1}
X_a_0 -> (nhat_0*B(x_t_0, X_t_0)*D[1](p)(x_a_0, X_a_0) - nhat_0*C_t(X_t_0)*D[1](p)(x_a_0, X_a_0) - nhat_0*D[0](C_a)(X_a_0) - D[0](C_g)(X_a_0) + D[0](R)(X_a_0, X_t_0))*Nhat_0
X_t_0 -> (nhat_0*p(x_a_0, X_a_0)*D[1](B)(x_t_0, X_t_0) - nhat_0*p(x_a_0, X_a_0)*D[0](C_t)(X_t_0) + D[1](R)(X_a_0, X_t_0))*Nhat_0
x_a_0 -> (Nhat_0*b(x_t_0, X_t_0)*D[0](p)(x_a_0, X_a_0) - Nhat_0*c_t(x_t_0)*D[0](p)(x_a_0, X_a_0) - Nhat_0*D[0](c_a)(x_a_0) - D[0](c_g)(x_a_0) + D[0](r)(x_a_0, x_t_0))*nhat_0
x_t_0 -> (Nhat_0*p(x_a_0, X_a_0)*D[0](b)(x_t_0, X_t_0) - Nhat_0*p(x_a_0, X_a_0)*D[0](c_t)(x_t_0) + D[1](r)(x_a_0, x_t_0))*nhat_0 =becomes=> X_a_0 -> (nhat_0*B(x_t_0, X_t_0)*D[1](p)(x_a_0, X_a_0) - nhat_0*C_t(X_t_0)*D[1](p)(x_a_0, X_a_0) - nhat_0*D[0](C_a)(X_a_0) - D[0](C_g)(X_a_0) + D[0](R)(X_a_0, X_t_0))*Nhat_0
X_t_0 -> (nhat_0*p(x_a_0, X_a_0)*D[1](B)(x_t_0, X_t_0) - nhat_0*p(x_a_0, X_a_0)*D[0](C_t)(X_t_0) + D[1](R)(X_a_0, X_t_0))*Nhat_0
x_a_0 -> (Nhat_0*b(x_t_0, X_t_0)*D[0](p)(x_a_0, X_a_0) - Nhat_0*c_t(x_t_0)*D[0](p)(x_a_0, X_a_0) - Nhat_0*D[0](c_a)(x_a_0) - D[0](c_g)(x_a_0) + D[0](r)(x_a_0, x_t_0))*nhat_0
x_t_0 -> (Nhat_0*p(x_a_0, X_a_0)*D[0](b)(x_t_0, X_t_0) - Nhat_0*p(x_a_0, X_a_0)*D[0](c_t)(x_t_0) + D[1](r)(x_a_0, x_t_0))*nhat_0
a =becomes=> a
N_0 -> -((X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1))*n_0 + N_0 - 1)*N_0
n_0 -> -((x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1))*N_0 + n_0 - 1)*n_0 =becomes=> N_0 -> -((X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1))*n_0 + N_0 - 1)*N_0
n_0 -> -((x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1))*N_0 + n_0 - 1)*n_0
g =becomes=> g
gamma =becomes=> gamma
x_t_0 =becomes=> x_t_0
{n_0 -> 0.2, N_0 -> 0.1} =becomes=> {n_0 -> 0.2, N_0 -> 0.1}
c_t =becomes=> c_t
t =becomes=> t
{, C_a(x) -> x^2, p(x,y) -> 1/(e^(-x - y) + 1), c_a(x) -> x^2, c_g(x) -> 0, C_g(x) -> 0} =becomes=> {, c_a(x) -> x^2, p(x,y) -> 1/(e^(-x - y) + 1), C_a(x) -> x^2, C_g(x) -> 0, c_g(x) -> 0}
2 =becomes=> 2
X_a_0 -> -(nhat_0*D[0](C_a)(X_a_0) - nhat_0*D[1](p)(x_a_0, X_a_0))*Nhat_0
X_t_0 -> 0
x_a_0 -> -(Nhat_0*D[0](c_a)(x_a_0) - Nhat_0*D[0](p)(x_a_0, X_a_0))*nhat_0
x_t_0 -> 0 =becomes=> X_a_0 -> -(nhat_0*D[0](C_a)(X_a_0) - nhat_0*D[1](p)(x_a_0, X_a_0))*Nhat_0
X_t_0 -> 0
x_a_0 -> -(Nhat_0*D[0](c_a)(x_a_0) - Nhat_0*D[0](p)(x_a_0, X_a_0))*nhat_0
x_t_0 -> 0
ad bindings: {N_0 -> Nhat_0, n_0 -> nhat_0, gamma -> 1, k -> 1, K -> 1, b(x,y) -> 1, c_g(x) -> 0, C_g(x) -> 0, B(x,y) -> 1, R(x,y) -> 1, r(x,y) -> 1, C_t(x) -> 0, c_t(x) -> 0}
model bindings: {k -> 1, K -> 1, b(x,y) -> 1, c_g(x) -> 0, C_g(x) -> 0, B(x,y) -> 1, R(x,y) -> 1, r(x,y) -> 1, C_t(x) -> 0, c_t(x) -> 0}
_early_bindings: {}
_late_bindings: {gamma -> 1}
make LV model
Inferring LV coefficients from N_0 equation: -N_0*n_0*C_a(X_a_0) + N_0*n_0*p(x_a_0, X_a_0) - N_0^2 + N_0
a_H_0_g_0 : -C_a(X_a_0) + p(x_a_0, X_a_0)
r_H_0 : 1
Inferring LV coefficients from n_0 equation: -N_0*n_0*c_a(x_a_0) + N_0*n_0*p(x_a_0, X_a_0) - n_0^2 + n_0
a_g_0_H_0 : -c_a(x_a_0) + p(x_a_0, X_a_0)
r_g_0 : 1
aij_dict: {a_H_0_H_0: -1, r_g_0: 1, a_H_0_g_0: -C_a(X_a_0) + p(x_a_0, X_a_0), r_H_0: 1, a_g_0_g_0: -1, a_g_0_H_0: -c_a(x_a_0) + p(x_a_0, X_a_0)}
set_population_indices: [(0, 0), (1, 0)]
Inferring LV coefficients from N_0 equation: -N_0*n_0*C_a(X_a_0) + N_0*n_0*p(x_a_0, X_a_0) - N_0^2 + N_0
a_H_0_g_0 : -C_a(X_a_0) + p(x_a_0, X_a_0)
r_H_0 : 1
Inferring LV coefficients from n_0 equation: -N_0*n_0*c_a(x_a_0) + N_0*n_0*p(x_a_0, X_a_0) - n_0^2 + n_0
a_g_0_H_0 : -c_a(x_a_0) + p(x_a_0, X_a_0)
r_g_0 : 1
aij_dict: {a_H_0_H_0: -1, r_g_0: 1, a_H_0_g_0: -C_a(X_a_0) + p(x_a_0, X_a_0), r_H_0: 1, a_g_0_g_0: -1, a_g_0_H_0: -c_a(x_a_0) + p(x_a_0, X_a_0)}
_A_bindings: {a_H_0_H_0 -> -1, r_g_0 -> 1, a_g_0_g_0 -> -1, a_H_0_g_0 -> -C_a(X_a_0) + p(x_a_0, X_a_0), a_g_0_H_0 -> -c_a(x_a_0) + p(x_a_0, X_a_0), r_H_0 -> 1}
make LV adaptive dynamics
population vars [N_0, n_0]
population vars [N_0, n_0]
set_population_indices: [(0, 0), (1, 0), (0, 1)]
set_population_indices: [(0, 0), (1, 0), (0, 1)]
Inferring LV coefficients from N_0 equation: N_0*n_0*B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*C_t(X_t_0)*p(x_a_0, X_a_0) - K*N_0^2 - K*N_0*N_1 - N_0*n_0*C_a(X_a_0) - N_0*C_g(X_a_0) + N_0*R(X_a_0, X_t_0)
a_H_0_g_0 : B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0)
a_H_0_H_1 : -K
r_H_0 : -C_g(X_a_0) + R(X_a_0, X_t_0)
Inferring LV coefficients from n_0 equation: N_0*n_0*b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*c_t(x_t_0)*p(x_a_0, X_a_0) + N_1*n_0*b(x_t_0, X_t_1)*p(x_a_0, X_a_1) - N_1*n_0*c_t(x_t_0)*p(x_a_0, X_a_1) - k*n_0^2 - N_0*n_0*c_a(x_a_0) - N_1*n_0*c_a(x_a_0) - n_0*c_g(x_a_0) + n_0*r(x_a_0, x_t_0)
a_g_0_H_0 : b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0)
a_g_0_H_1 : b(x_t_0, X_t_1)*p(x_a_0, X_a_1) - c_t(x_t_0)*p(x_a_0, X_a_1) - c_a(x_a_0)
r_g_0 : -c_g(x_a_0) + r(x_a_0, x_t_0)
Inferring LV coefficients from N_1 equation: N_1*n_0*B(x_t_0, X_t_1)*p(x_a_0, X_a_1) - N_1*n_0*C_t(X_t_1)*p(x_a_0, X_a_1) - K*N_0*N_1 - K*N_1^2 - N_1*n_0*C_a(X_a_1) - N_1*C_g(X_a_1) + N_1*R(X_a_1, X_t_1)
a_H_1_H_0 : -K
a_H_1_g_0 : B(x_t_0, X_t_1)*p(x_a_0, X_a_1) - C_t(X_t_1)*p(x_a_0, X_a_1) - C_a(X_a_1)
r_H_1 : -C_g(X_a_1) + R(X_a_1, X_t_1)
aij_dict: {a_H_0_H_0: -K, r_g_0: -c_g(x_a_0) + r(x_a_0, x_t_0), r_H_1: -C_g(X_a_1) + R(X_a_1, X_t_1), a_H_0_H_1: -K, a_H_0_g_0: B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0), r_H_0: -C_g(X_a_0) + R(X_a_0, X_t_0), a_g_0_g_0: -k, a_H_1_H_0: -K, a_g_0_H_1: b(x_t_0, X_t_1)*p(x_a_0, X_a_1) - c_t(x_t_0)*p(x_a_0, X_a_1) - c_a(x_a_0), a_H_1_g_0: B(x_t_0, X_t_1)*p(x_a_0, X_a_1) - C_t(X_t_1)*p(x_a_0, X_a_1) - C_a(X_a_1), a_g_0_H_0: b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0), a_H_1_H_1: -K}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{{N}_{1}}\frac{d{N}_{1}}{dt} &= {N}_{0} {a}_{{H}{1}{H}{0}} + {N}_{1} {a}_{{H}{1}{H}{1}} + {a}_{{H}{1}{g}{0}} {n}_{0} + {r}_{{H}{1}} 
\end{align*}

limit as {a_H_1_g_0: a_H_0_g_0, r_H_1: r_H_0, a_H_1_H_0: a_H_0_H_0}
simplify to 1
simplify to N_0
simplify to n_0
after those limits:
   1
  N_0
  n_0
simplify to 1
simplify to N_0
simplify to n_0
set_population_indices: [(0, 0), (1, 0), (1, 1)]
set_population_indices: [(0, 0), (1, 0), (1, 1)]
Inferring LV coefficients from N_0 equation: N_0*n_0*B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*C_t(X_t_0)*p(x_a_0, X_a_0) + N_0*n_1*B(x_t_1, X_t_0)*p(x_a_1, X_a_0) - N_0*n_1*C_t(X_t_0)*p(x_a_1, X_a_0) - K*N_0^2 - N_0*n_0*C_a(X_a_0) - N_0*n_1*C_a(X_a_0) - N_0*C_g(X_a_0) + N_0*R(X_a_0, X_t_0)
a_H_0_g_0 : B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0)
a_H_0_g_1 : B(x_t_1, X_t_0)*p(x_a_1, X_a_0) - C_t(X_t_0)*p(x_a_1, X_a_0) - C_a(X_a_0)
r_H_0 : -C_g(X_a_0) + R(X_a_0, X_t_0)
Inferring LV coefficients from n_0 equation: N_0*n_0*b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*c_t(x_t_0)*p(x_a_0, X_a_0) - k*n_0^2 - k*n_0*n_1 - N_0*n_0*c_a(x_a_0) - n_0*c_g(x_a_0) + n_0*r(x_a_0, x_t_0)
a_g_0_H_0 : b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0)
a_g_0_g_1 : -k
r_g_0 : -c_g(x_a_0) + r(x_a_0, x_t_0)
Inferring LV coefficients from n_1 equation: N_0*n_1*b(x_t_1, X_t_0)*p(x_a_1, X_a_0) - N_0*n_1*c_t(x_t_1)*p(x_a_1, X_a_0) - k*n_0*n_1 - k*n_1^2 - N_0*n_1*c_a(x_a_1) - n_1*c_g(x_a_1) + n_1*r(x_a_1, x_t_1)
a_g_1_H_0 : b(x_t_1, X_t_0)*p(x_a_1, X_a_0) - c_t(x_t_1)*p(x_a_1, X_a_0) - c_a(x_a_1)
a_g_1_g_0 : -k
r_g_1 : -c_g(x_a_1) + r(x_a_1, x_t_1)
aij_dict: {a_H_0_H_0: -K, r_g_0: -c_g(x_a_0) + r(x_a_0, x_t_0), r_g_1: -c_g(x_a_1) + r(x_a_1, x_t_1), a_H_0_g_1: B(x_t_1, X_t_0)*p(x_a_1, X_a_0) - C_t(X_t_0)*p(x_a_1, X_a_0) - C_a(X_a_0), a_H_0_g_0: B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0), r_H_0: -C_g(X_a_0) + R(X_a_0, X_t_0), a_g_0_g_0: -k, a_g_1_H_0: b(x_t_1, X_t_0)*p(x_a_1, X_a_0) - c_t(x_t_1)*p(x_a_1, X_a_0) - c_a(x_a_1), a_g_0_g_1: -k, a_g_1_g_0: -k, a_g_0_H_0: b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0), a_g_1_g_1: -k}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{{n}_{1}}\frac{d{n}_{1}}{dt} &= {N}_{0} {a}_{{g}{1}{H}{0}} + {a}_{{g}{1}{g}{0}} {n}_{0} + {a}_{{g}{1}{g}{1}} {n}_{1} + {r}_{{g}{1}} 
\end{align*}

limit as {a_g_1_g_0: a_g_0_g_0, r_g_1: r_g_0, a_g_1_H_0: a_g_0_H_0}
simplify to 1
simplify to N_0
simplify to n_0
after those limits:
   1
  N_0
  n_0
simplify to 1
simplify to N_0
simplify to n_0
make LV evolution bindings
ad bindings: {nhat_0 -> (x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1), n_0 -> (x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1), k -> 1, K -> 1, gamma -> 1, Nhat_0 -> (X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1), N_0 -> (X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1), c_g(x) -> 0, C_g(x) -> 0, B(x,y) -> 1, C_a(x) -> x^2, r(x,y) -> 1, C_t(x) -> 0, c_t(x) -> 0, R(x,y) -> 1, p(x,y) -> 1/(e^(-x - y) + 1), c_a(x) -> x^2, b(x,y) -> 1}
model bindings: {nhat_0 -> (x_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1), Nhat_0 -> (X_a_0^2 - 1/(e^(-X_a_0 - x_a_0) + 1) - 1)/(X_a_0^2*x_a_0^2 - X_a_0^2/(e^(-X_a_0 - x_a_0) + 1) - x_a_0^2/(e^(-X_a_0 - x_a_0) + 1) + 1/(e^(-X_a_0 - x_a_0) + 1)^2 - 1), k -> 1, K -> 1, c_g(x) -> 0, C_g(x) -> 0, B(x,y) -> 1, C_a(x) -> x^2, r(x,y) -> 1, C_t(x) -> 0, c_t(x) -> 0, R(x,y) -> 1, p(x,y) -> 1/(e^(-x - y) + 1), c_a(x) -> x^2, b(x,y) -> 1}
_early_bindings: {}
_late_bindings: {gamma -> 1}
make LV model
Inferring LV coefficients from N_0 equation: -N_0*X_a_0^2*n_0 - N_0^2 + N_0 + N_0*n_0/(e^(-X_a_0 - x_a_0) + 1)
a_H_0_g_0 : -X_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1)
r_H_0 : 1
Inferring LV coefficients from n_0 equation: -N_0*n_0*x_a_0^2 - n_0^2 + n_0 + N_0*n_0/(e^(-X_a_0 - x_a_0) + 1)
a_g_0_H_0 : -x_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1)
r_g_0 : 1
aij_dict: {a_H_0_H_0: -1, r_g_0: 1, a_H_0_g_0: -X_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1), r_H_0: 1, a_g_0_g_0: -1, a_g_0_H_0: -x_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1)}
set_population_indices: [(0, 0), (1, 0)]
Inferring LV coefficients from N_0 equation: -N_0*X_a_0^2*n_0 - N_0^2 + N_0 + N_0*n_0/(e^(-X_a_0 - x_a_0) + 1)
a_H_0_g_0 : -X_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1)
r_H_0 : 1
Inferring LV coefficients from n_0 equation: -N_0*n_0*x_a_0^2 - n_0^2 + n_0 + N_0*n_0/(e^(-X_a_0 - x_a_0) + 1)
a_g_0_H_0 : -x_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1)
r_g_0 : 1
aij_dict: {a_H_0_H_0: -1, r_g_0: 1, a_H_0_g_0: -X_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1), r_H_0: 1, a_g_0_g_0: -1, a_g_0_H_0: -x_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1)}
_A_bindings: {a_H_0_H_0 -> -1, r_g_0 -> 1, a_g_0_g_0 -> -1, a_H_0_g_0 -> -X_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1), a_g_0_H_0 -> -x_a_0^2 + 1/(e^(-X_a_0 - x_a_0) + 1), r_H_0 -> 1}
make LV adaptive dynamics
population vars [N_0, n_0]
population vars [N_0, n_0]
set_population_indices: [(0, 0), (1, 0), (0, 1)]
set_population_indices: [(0, 0), (1, 0), (0, 1)]
Inferring LV coefficients from N_0 equation: N_0*n_0*B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*C_t(X_t_0)*p(x_a_0, X_a_0) - K*N_0^2 - K*N_0*N_1 - N_0*n_0*C_a(X_a_0) - N_0*C_g(X_a_0) + N_0*R(X_a_0, X_t_0)
a_H_0_g_0 : B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0)
a_H_0_H_1 : -K
r_H_0 : -C_g(X_a_0) + R(X_a_0, X_t_0)
Inferring LV coefficients from n_0 equation: N_0*n_0*b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*c_t(x_t_0)*p(x_a_0, X_a_0) + N_1*n_0*b(x_t_0, X_t_1)*p(x_a_0, X_a_1) - N_1*n_0*c_t(x_t_0)*p(x_a_0, X_a_1) - k*n_0^2 - N_0*n_0*c_a(x_a_0) - N_1*n_0*c_a(x_a_0) - n_0*c_g(x_a_0) + n_0*r(x_a_0, x_t_0)
a_g_0_H_0 : b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0)
a_g_0_H_1 : b(x_t_0, X_t_1)*p(x_a_0, X_a_1) - c_t(x_t_0)*p(x_a_0, X_a_1) - c_a(x_a_0)
r_g_0 : -c_g(x_a_0) + r(x_a_0, x_t_0)
Inferring LV coefficients from N_1 equation: N_1*n_0*B(x_t_0, X_t_1)*p(x_a_0, X_a_1) - N_1*n_0*C_t(X_t_1)*p(x_a_0, X_a_1) - K*N_0*N_1 - K*N_1^2 - N_1*n_0*C_a(X_a_1) - N_1*C_g(X_a_1) + N_1*R(X_a_1, X_t_1)
a_H_1_H_0 : -K
a_H_1_g_0 : B(x_t_0, X_t_1)*p(x_a_0, X_a_1) - C_t(X_t_1)*p(x_a_0, X_a_1) - C_a(X_a_1)
r_H_1 : -C_g(X_a_1) + R(X_a_1, X_t_1)
aij_dict: {a_H_0_H_0: -K, r_g_0: -c_g(x_a_0) + r(x_a_0, x_t_0), r_H_1: -C_g(X_a_1) + R(X_a_1, X_t_1), a_H_0_H_1: -K, a_H_0_g_0: B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0), r_H_0: -C_g(X_a_0) + R(X_a_0, X_t_0), a_g_0_g_0: -k, a_H_1_H_0: -K, a_g_0_H_1: b(x_t_0, X_t_1)*p(x_a_0, X_a_1) - c_t(x_t_0)*p(x_a_0, X_a_1) - c_a(x_a_0), a_H_1_g_0: B(x_t_0, X_t_1)*p(x_a_0, X_a_1) - C_t(X_t_1)*p(x_a_0, X_a_1) - C_a(X_a_1), a_g_0_H_0: b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0), a_H_1_H_1: -K}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{{N}_{1}}\frac{d{N}_{1}}{dt} &= {N}_{0} {a}_{{H}{1}{H}{0}} + {N}_{1} {a}_{{H}{1}{H}{1}} + {a}_{{H}{1}{g}{0}} {n}_{0} + {r}_{{H}{1}} 
\end{align*}

limit as {a_H_1_g_0: a_H_0_g_0, r_H_1: r_H_0, a_H_1_H_0: a_H_0_H_0}
simplify to 1
simplify to N_0
simplify to n_0
after those limits:
   1
  N_0
  n_0
simplify to 1
simplify to N_0
simplify to n_0
set_population_indices: [(0, 0), (1, 0), (1, 1)]
set_population_indices: [(0, 0), (1, 0), (1, 1)]
Inferring LV coefficients from N_0 equation: N_0*n_0*B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*C_t(X_t_0)*p(x_a_0, X_a_0) + N_0*n_1*B(x_t_1, X_t_0)*p(x_a_1, X_a_0) - N_0*n_1*C_t(X_t_0)*p(x_a_1, X_a_0) - K*N_0^2 - N_0*n_0*C_a(X_a_0) - N_0*n_1*C_a(X_a_0) - N_0*C_g(X_a_0) + N_0*R(X_a_0, X_t_0)
a_H_0_g_0 : B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0)
a_H_0_g_1 : B(x_t_1, X_t_0)*p(x_a_1, X_a_0) - C_t(X_t_0)*p(x_a_1, X_a_0) - C_a(X_a_0)
r_H_0 : -C_g(X_a_0) + R(X_a_0, X_t_0)
Inferring LV coefficients from n_0 equation: N_0*n_0*b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - N_0*n_0*c_t(x_t_0)*p(x_a_0, X_a_0) - k*n_0^2 - k*n_0*n_1 - N_0*n_0*c_a(x_a_0) - n_0*c_g(x_a_0) + n_0*r(x_a_0, x_t_0)
a_g_0_H_0 : b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0)
a_g_0_g_1 : -k
r_g_0 : -c_g(x_a_0) + r(x_a_0, x_t_0)
Inferring LV coefficients from n_1 equation: N_0*n_1*b(x_t_1, X_t_0)*p(x_a_1, X_a_0) - N_0*n_1*c_t(x_t_1)*p(x_a_1, X_a_0) - k*n_0*n_1 - k*n_1^2 - N_0*n_1*c_a(x_a_1) - n_1*c_g(x_a_1) + n_1*r(x_a_1, x_t_1)
a_g_1_H_0 : b(x_t_1, X_t_0)*p(x_a_1, X_a_0) - c_t(x_t_1)*p(x_a_1, X_a_0) - c_a(x_a_1)
a_g_1_g_0 : -k
r_g_1 : -c_g(x_a_1) + r(x_a_1, x_t_1)
aij_dict: {a_H_0_H_0: -K, r_g_0: -c_g(x_a_0) + r(x_a_0, x_t_0), r_g_1: -c_g(x_a_1) + r(x_a_1, x_t_1), a_H_0_g_1: B(x_t_1, X_t_0)*p(x_a_1, X_a_0) - C_t(X_t_0)*p(x_a_1, X_a_0) - C_a(X_a_0), a_H_0_g_0: B(x_t_0, X_t_0)*p(x_a_0, X_a_0) - C_t(X_t_0)*p(x_a_0, X_a_0) - C_a(X_a_0), r_H_0: -C_g(X_a_0) + R(X_a_0, X_t_0), a_g_0_g_0: -k, a_g_1_H_0: b(x_t_1, X_t_0)*p(x_a_1, X_a_0) - c_t(x_t_1)*p(x_a_1, X_a_0) - c_a(x_a_1), a_g_0_g_1: -k, a_g_1_g_0: -k, a_g_0_H_0: b(x_t_0, X_t_0)*p(x_a_0, X_a_0) - c_t(x_t_0)*p(x_a_0, X_a_0) - c_a(x_a_0), a_g_1_g_1: -k}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{{n}_{1}}\frac{d{n}_{1}}{dt} &= {N}_{0} {a}_{{g}{1}{H}{0}} + {a}_{{g}{1}{g}{0}} {n}_{0} + {a}_{{g}{1}{g}{1}} {n}_{1} + {r}_{{g}{1}} 
\end{align*}

limit as {a_g_1_g_0: a_g_0_g_0, r_g_1: r_g_0, a_g_1_H_0: a_g_0_H_0}
simplify to 1
simplify to N_0
simplify to n_0
after those limits:
   1
  N_0
  n_0
simplify to 1
simplify to N_0
simplify to n_0
make LV evolution bindings
A: (0.508398666879965, 0.509998666879966)
S: (2.03856255195011, 2.03640248376285)
D: (Nhat_0*gamma*nhat_0*(2*x_a_0 - e^(-X_a_0 - x_a_0)/(e^(-X_a_0 - x_a_0) + 1)^2)^2, Nhat_0*(2*X_a_0 - e^(-X_a_0 - x_a_0)/(e^(-X_a_0 - x_a_0) + 1)^2)^2*gamma*nhat_0)
D: (0.119832481865145, 0.259250895393647)
I: (-Nhat_0*(2*X_a_0 - e^(-X_a_0 - x_a_0)/(e^(-X_a_0 - x_a_0) + 1)^2)*gamma*nhat_0*e^(-X_a_0 - x_a_0)/(e^(-X_a_0 - x_a_0) + 1)^2, -Nhat_0*gamma*nhat_0*(2*x_a_0 - e^(-X_a_0 - x_a_0)/(e^(-X_a_0 - x_a_0) + 1)^2)*e^(-X_a_0 - x_a_0)/(e^(-X_a_0 - x_a_0) + 1)^2)
I: (0.259250895393647, 0.176257420328285)
dAdt: (0.379083377258791, 0.435508315721931)
{x_a_0 -> symbol19963, X_t_0 -> -0.0800000000000000, t -> 0.000000000000000, gamma -> 1, Nhat_0 -> 2.03856255195011, N_0 -> 2.03856255195011, nhat_0 -> 2.03640248376285, n_0 -> 2.03640248376285, x_t_0 -> 0.000000000000000, X_a_0 -> 0.000000000000000, k -> 1, K -> 1, c_t(x) -> 0, c_g(x) -> 0, C_g(x) -> 0, B(x,y) -> 1, C_a(x) -> x^2, r(x,y) -> 1, C_t(x) -> 0, R(x,y) -> 1, p(x,y) -> 1/(e^(-x - y) + 1), c_a(x) -> x^2, b(x,y) -> 1}
curve: (-symbol19963^2 + 1/(e^(-symbol19963) + 1), 1/(e^(-symbol19963) + 1))
