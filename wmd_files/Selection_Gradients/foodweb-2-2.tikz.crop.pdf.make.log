Sat Feb  6 15:23:53 2016
/usr/bin/make -C /usr/local/src/adaptive-dynamics-research/wmd_files/Selection_Gradients \
    foodweb-2-2.tikz.crop.pdf
Including .mk files: sage-inline.mk 
Including .mk files from .sage-inline files: avec.sage.mk a-careful.sage.mk
Including .mk files from .step files: aij.py.mk aij-assemble.sage.mk aij-assemble-plot.sage.mk aij-evol.sage.mk aij-evol-plot.sage.mk direct.py.mk direct-assemble.sage.mk direct-assemble-plot.sage.mk direct-evol.sage.mk direct-evol-plot.sage.mk foodweb.py.mk foodweb.sage.mk foodweb-adap.sage.mk foodweb.plot.sage.mk foodweb-2-2.sage.mk foodweb-2-2.plot.sage.mk large.py.mk large-assemble.sage.mk large-assemble-plot.sage.mk large-evol.sage.mk large-evol-plot.sage.mk logistic-S-A-curves.sage.mk maclev-S-A-curve.sage.mk logistic-S-A-curve.sage.mk maclev-1-1.sage.mk maclev-1-1-adap.sage.mk maclev-1-1-mc-adap-geom.sage.mk maclev-1-1-ak-adap-geom.sage.mk S-A-vector-field.sage.mk maclev-1-1-d1A-vector-field.sage.mk maclev-1-1-S-and-d1A-on-curve.sage.mk maclev-1-1-S-and-D-on-curve.sage.mk maclev_1_2_defs.py.mk maclev-1-2-popdyn.sage.mk maclev-1-2-adap.sage.mk maclev-1-2-p.sage.mk maclev-1-2-zngi.sage.mk maclev-1-2-geom.sage.mk maclev_unconstrained_c.py.mk maclev-2-2-c-popdyn.sage.mk maclev-2-2-c-adap.sage.mk maclev-2-2-c-p.sage.mk maclev-2-2-c-zngi.sage.mk maclev-2-2-c-geom.sage.mk maclev_2_2_defs.py.mk maclev-2-2-popdyn.sage.mk maclev-2-2-adap.sage.mk maclev-2-2-p.sage.mk maclev-2-2-zngi.sage.mk maclev-2-2-geom.sage.mk maclev_a_only_defs.py.mk maclev-a-only-popdyn.sage.mk maclev-a-only-adap.sage.mk maclev-a-only-p.sage.mk maclev-a-only-zngi.sage.mk maclev-a-only-geom.sage.mk maclev_a_c.py.mk maclev-2-2-a-c-popdyn.sage.mk maclev-2-2-a-c-adap.sage.mk maclev-2-2-a-c-p.sage.mk maclev-2-2-a-c-zngi.sage.mk maclev-2-2-a-c-geom.sage.mk maclevmodels.py.mk masel_model.py.mk masel.sage.mk masel-adap.sage.mk masel-2-adap.sage.mk statmech.py.mk statmech-assemble.sage.mk statmech-assemble-plot.sage.mk statmech-evol.sage.mk statmech-evol-plot.sage.mk sea.sage.mk toc.sage.mk maclev-2-2-zngi-invasion.sage.mk lotkavolterra.py.mk r_selection.py.mk r-selection.sage.mk
Including .tex.d files: foodweb-2-2.tikz.tex.d foodweb.tikz.tex.d
make[1]: Entering directory `/usr/local/src/adaptive-dynamics-research/wmd_files/Selection_Gradients'
rm -f foodweb-2-2.sage.out foodweb-2-2.sage.status foodweb-2-2.sobj foodweb-2-2.sage.out.tex foodweb-2-2.tikz.tex
(sage foodweb-2-2.sage && touch foodweb-2-2.sage.status) | tee foodweb-2-2.sage.dmp
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0)]
basal: [R_0, R_1]
merge bindings: {, f(u,v) -> cos(u - v) + 1} , [k] ,  {}
merge bindings: {m -> 1, r -> 1} , [k] ,  {}
[{Xhat_0_R_1: -10/9*(cos(-u_0_P_0 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0))/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)), Xhat_0_P_0: 1/9*((9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_1)^2 + (9*cos(-u_0_P_1 + u_0_R_0)^2 - cos(-u_0_P_1 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 - ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) + (9*cos(-u_0_P_0 + u_0_R_0) - 2)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)), Xhat_0_P_1: 1/9*((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1)^2 - cos(-u_0_P_0 + u_0_R_0)^2 - ((9*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) - 2*cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + (9*cos(-u_0_P_0 + u_0_R_0)^2 - (9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)), Xhat_0_R_0: 10/9*(cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0))}]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_0, 1)]
basal: [R_0, R_1]
merge bindings: {m -> 1, r -> 1} , [] ,  {}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1R_{0}}}\frac{dX_{1R_{0}}}{dt} &= -\frac{X_{0P_{0}} X_{1R_{0}} f\left(u_{0P_{0}}, u_{1R_{0}}\right) + X_{0P_{1}} X_{1R_{0}} f\left(u_{0P_{1}}, u_{1R_{0}}\right) + X_{0R_{0}} X_{1R_{0}} + X_{0R_{1}} X_{1R_{0}} + X_{1R_{0}}^{2} - X_{1R_{0}}}{X_{1R_{0}}} 
\end{align*}

limit as {u_1_R_0: u_0_R_0}
simplify to -limit(X_0_P_0*X_1_R_0*D[1](f)(u_0_P_0, u_1_R_0) + X_0_P_1*X_1_R_0*D[1](f)(u_0_P_1, u_1_R_0), u_1_R_0, u_0_R_0)/X_1_R_0
after those limits:
   -limit(X_0_P_0*X_1_R_0*D[1](f)(u_0_P_0, u_1_R_0) + X_0_P_1*X_1_R_0*D[1](f)(u_0_P_1, u_1_R_0), u_1_R_0, u_0_R_0)/X_1_R_0
simplify to -X_0_P_0*D[1](f)(u_0_P_0, u_1_R_0) - X_0_P_1*D[1](f)(u_0_P_1, u_1_R_0)
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_1, 1)]
basal: [R_0, R_1]
merge bindings: {m -> 1, r -> 1} , [] ,  {}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1P_{1}}}\frac{dX_{1P_{1}}}{dt} &= \frac{X_{0R_{0}} X_{1P_{1}} k f\left(u_{1P_{1}}, u_{0R_{0}}\right) + X_{0R_{1}} X_{1P_{1}} k f\left(u_{1P_{1}}, u_{0R_{1}}\right) - X_{1P_{1}}}{X_{1P_{1}}} 
\end{align*}

limit as {u_1_P_1: u_0_P_1}
simplify to limit(X_0_R_0*X_1_P_1*k*D[0](f)(u_1_P_1, u_0_R_0) + X_0_R_1*X_1_P_1*k*D[0](f)(u_1_P_1, u_0_R_1), u_1_P_1, u_0_P_1)/X_1_P_1
after those limits:
   limit(X_0_R_0*X_1_P_1*k*D[0](f)(u_1_P_1, u_0_R_0) + X_0_R_1*X_1_P_1*k*D[0](f)(u_1_P_1, u_0_R_1), u_1_P_1, u_0_P_1)/X_1_P_1
simplify to X_0_R_0*k*D[0](f)(u_1_P_1, u_0_R_0) + X_0_R_1*k*D[0](f)(u_1_P_1, u_0_R_1)
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_0, 1)]
basal: [R_0, R_1]
merge bindings: {m -> 1, r -> 1} , [] ,  {}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1P_{0}}}\frac{dX_{1P_{0}}}{dt} &= \frac{X_{0R_{0}} X_{1P_{0}} k f\left(u_{1P_{0}}, u_{0R_{0}}\right) + X_{0R_{1}} X_{1P_{0}} k f\left(u_{1P_{0}}, u_{0R_{1}}\right) - X_{1P_{0}}}{X_{1P_{0}}} 
\end{align*}

limit as {u_1_P_0: u_0_P_0}
simplify to limit(X_0_R_0*X_1_P_0*k*D[0](f)(u_1_P_0, u_0_R_0) + X_0_R_1*X_1_P_0*k*D[0](f)(u_1_P_0, u_0_R_1), u_1_P_0, u_0_P_0)/X_1_P_0
after those limits:
   limit(X_0_R_0*X_1_P_0*k*D[0](f)(u_1_P_0, u_0_R_0) + X_0_R_1*X_1_P_0*k*D[0](f)(u_1_P_0, u_0_R_1), u_1_P_0, u_0_P_0)/X_1_P_0
simplify to X_0_R_0*k*D[0](f)(u_1_P_0, u_0_R_0) + X_0_R_1*k*D[0](f)(u_1_P_0, u_0_R_1)
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_1, 1)]
basal: [R_0, R_1]
merge bindings: {m -> 1, r -> 1} , [] ,  {}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1R_{1}}}\frac{dX_{1R_{1}}}{dt} &= -\frac{X_{0P_{0}} X_{1R_{1}} f\left(u_{0P_{0}}, u_{1R_{1}}\right) + X_{0P_{1}} X_{1R_{1}} f\left(u_{0P_{1}}, u_{1R_{1}}\right) + X_{0R_{0}} X_{1R_{1}} + X_{0R_{1}} X_{1R_{1}} + X_{1R_{1}}^{2} - X_{1R_{1}}}{X_{1R_{1}}} 
\end{align*}

limit as {u_1_R_1: u_0_R_1}
simplify to -limit(X_0_P_0*X_1_R_1*D[1](f)(u_0_P_0, u_1_R_1) + X_0_P_1*X_1_R_1*D[1](f)(u_0_P_1, u_1_R_1), u_1_R_1, u_0_R_1)/X_1_R_1
after those limits:
   -limit(X_0_P_0*X_1_R_1*D[1](f)(u_0_P_0, u_1_R_1) + X_0_P_1*X_1_R_1*D[1](f)(u_0_P_1, u_1_R_1), u_1_R_1, u_0_R_1)/X_1_R_1
simplify to -X_0_P_0*D[1](f)(u_0_P_0, u_1_R_1) - X_0_P_1*D[1](f)(u_0_P_1, u_1_R_1)
merge bindings: {} , [] ,  {}
merge bindings: {} , [m, r] ,  {}
merge bindings: {m -> 1, r -> 1} , [] ,  {}
merge bindings: {m -> 1, r -> 1} , [gamma] ,  {}
merge bindings: {k -> 9/10, f(u,v) -> cos(u - v) + 1} , [Xhat_0_R_1, Xhat_0_P_0, Xhat_0_P_1, Xhat_0_R_0] ,  {}
merge bindings: {m -> 1, gamma -> 1, r -> 1} , [Xhat_0_R_1, Xhat_0_P_0, Xhat_0_P_1, k, Xhat_0_R_0] ,  {}
desolve: [-10/81*(((9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_1)^2 + (9*cos(-u_0_P_1 + u_0_R_0)^2 - cos(-u_0_P_1 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 - ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) + (9*cos(-u_0_P_0 + u_0_R_0) - 2)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))*sin(u_0_P_0 - u_1_R_0)/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)) + ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1)^2 - cos(-u_0_P_0 + u_0_R_0)^2 - ((9*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) - 2*cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + (9*cos(-u_0_P_0 + u_0_R_0)^2 - (9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))*sin(u_0_P_1 - u_1_R_0)/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)))*(cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)), -1/9*((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1)^2 - cos(-u_0_P_0 + u_0_R_0)^2 - ((9*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) - 2*cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + (9*cos(-u_0_P_0 + u_0_R_0)^2 - (9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))*((cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_1 + u_0_R_1))*sin(-u_0_R_0 + u_1_P_1)/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)) - (cos(-u_0_P_0 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0))*sin(-u_0_R_1 + u_1_P_1)/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)))/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)), -1/9*((9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_1)^2 + (9*cos(-u_0_P_1 + u_0_R_0)^2 - cos(-u_0_P_1 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 - ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) + (9*cos(-u_0_P_0 + u_0_R_0) - 2)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))*((cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_1 + u_0_R_1))*sin(-u_0_R_0 + u_1_P_0)/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)) - (cos(-u_0_P_0 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0))*sin(-u_0_R_1 + u_1_P_0)/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)))/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)), 10/81*(((9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_1)^2 + (9*cos(-u_0_P_1 + u_0_R_0)^2 - cos(-u_0_P_1 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 - ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) + (9*cos(-u_0_P_0 + u_0_R_0) - 2)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))*sin(u_0_P_0 - u_1_R_1)/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)) + ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1)^2 - cos(-u_0_P_0 + u_0_R_0)^2 - ((9*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) - 2*cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + (9*cos(-u_0_P_0 + u_0_R_0)^2 - (9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))*sin(u_0_P_1 - u_1_R_1)/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)))*(cos(-u_0_P_0 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0))/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0))], [u_0_R_0, u_0_P_1, u_0_P_0, u_0_R_1], [0, -0.100000000000000, 0.0200000000000000, -0.0700000000000000, 0], ivar=t, end_points=30, step=0.1
initial flow: [-0.00687201782686400*sin(-u_1_R_0 + 0.0200000000000000) - 0.0240340269244001*sin(-u_1_R_0 - 0.0700000000000000), -0.00618481604417760*sin(u_1_P_1 + 0.100000000000000) - 0.0185389893134126*sin(u_1_P_1), -0.0216306242319601*sin(u_1_P_0 + 0.100000000000000) - 0.0648378074003130*sin(u_1_P_0), -0.0205988770149029*sin(-u_1_R_1 + 0.0200000000000000) - 0.0720420082225700*sin(-u_1_R_1 - 0.0700000000000000)]
timeseries: [{u_0_P_1 -> 0.0200000000000000, t -> 0.000000000000000, u_0_P_0 -> -0.0700000000000000, u_0_R_1 -> 0.000000000000000, u_0_R_0 -> -0.100000000000000}]
X at first pt of timeseries: [0.139111289632134, 0.0493994257765590, 0.172768342439753, 0.416986163120088]
[{u_0_P_1 -> 0.0200000000000000, t -> 0.000000000000000, u_0_P_0 -> -0.0700000000000000, u_0_R_1 -> 0.000000000000000, u_0_R_0 -> -0.100000000000000}]
[ -e foodweb-2-2.sage.status ] && (rm -f foodweb-2-2.sage.status && mv foodweb-2-2.sage.dmp foodweb-2-2.sage.out) || exit 1
if [ -r foodweb-2-2.tikz.pdf ]; then mv foodweb-2-2.tikz.pdf foodweb-2-2.tikz.tmp.pdf; fi
Updating .workingwiki/foodweb-2-2.tikz.tex.d
rm -f foodweb-2-2.tikz.latex.pdf
if [ -r foodweb-2-2.tikz.toc ]; then cp foodweb-2-2.tikz.toc foodweb-2-2.tikz.toc.bak; fi ;
if [ -r foodweb-2-2.tikz.aux ]; then cp foodweb-2-2.tikz.aux foodweb-2-2.tikz.aux.bak; fi ;
latex -interaction=nonstopmode -output-directory ./ foodweb-2-2.tikz.tex
This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Debian)
 restricted \write18 enabled.
entering extended mode
(.//foodweb-2-2.tikz.tex
LaTeX2e <2011/06/27>
Babel <3.9h> and hyphenation patterns for 2 languages loaded.
(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty))
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty))
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/dvips.def)))
(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/mathrsfs.sty)
(/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
(/usr/share/texlive/texmf-dist/tex/latex/base/utf8.def
(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.dfu)
(/usr/share/texlive/texmf-dist/tex/latex/base/ot1enc.dfu)
(/usr/share/texlive/texmf-dist/tex/latex/base/omsenc.dfu)))
(/usr/share/texlive/texmf-dist/tex/latex/base/fontenc.sty
(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.def))
(/usr/share/texmf/tex/latex/pgf/frontendlayer/tikz.sty
(/usr/share/texmf/tex/latex/pgf/basiclayer/pgf.sty
(/usr/share/texmf/tex/latex/pgf/utilities/pgfrcs.sty
(/usr/share/texmf/tex/generic/pgf/utilities/pgfutil-common.tex)
(/usr/share/texmf/tex/generic/pgf/utilities/pgfutil-latex.def
(/usr/share/texlive/texmf-dist/tex/latex/ms/everyshi.sty))
(/usr/share/texmf/tex/generic/pgf/utilities/pgfrcs.code.tex))
(/usr/share/texmf/tex/latex/pgf/basiclayer/pgfcore.sty
(/usr/share/texmf/tex/latex/pgf/systemlayer/pgfsys.sty
(/usr/share/texmf/tex/generic/pgf/systemlayer/pgfsys.code.tex
(/usr/share/texmf/tex/generic/pgf/utilities/pgfkeys.code.tex
(/usr/share/texmf/tex/generic/pgf/utilities/pgfkeysfiltered.code.tex))
(/usr/share/texmf/tex/generic/pgf/systemlayer/pgf.cfg)
(/usr/share/texmf/tex/generic/pgf/systemlayer/pgfsys-dvips.def
(/usr/share/texmf/tex/generic/pgf/systemlayer/pgfsys-common-postscript.def)))
(/usr/share/texmf/tex/generic/pgf/systemlayer/pgfsyssoftpath.code.tex)
(/usr/share/texmf/tex/generic/pgf/systemlayer/pgfsysprotocol.code.tex))
(/usr/share/texmf/tex/latex/xcolor/xcolor.sty
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg))
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcore.code.tex
(/usr/share/texmf/tex/generic/pgf/math/pgfmath.code.tex
(/usr/share/texmf/tex/generic/pgf/math/pgfmathcalc.code.tex
(/usr/share/texmf/tex/generic/pgf/math/pgfmathutil.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathparser.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.code.tex
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.basic.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.trigonometric.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.random.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.comparison.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.base.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.round.code.tex)
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfunctions.misc.code.tex)))
(/usr/share/texmf/tex/generic/pgf/math/pgfmathfloat.code.tex))
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorepoints.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorepathconstruct.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorepathusage.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorescopes.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoregraphicstate.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoretransformations.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorequick.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoreobjects.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorepathprocessing.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorearrows.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoreshade.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoreimage.code.tex
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoreexternal.code.tex))
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorelayers.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcoretransparency.code.tex)
(/usr/share/texmf/tex/generic/pgf/basiclayer/pgfcorepatterns.code.tex)))
(/usr/share/texmf/tex/generic/pgf/modules/pgfmoduleshapes.code.tex)
(/usr/share/texmf/tex/generic/pgf/modules/pgfmoduleplot.code.tex)
(/usr/share/texmf/tex/latex/pgf/compatibility/pgfcomp-version-0-65.sty)
(/usr/share/texmf/tex/latex/pgf/compatibility/pgfcomp-version-1-18.sty))
(/usr/share/texmf/tex/latex/pgf/utilities/pgffor.sty
(/usr/share/texmf/tex/latex/pgf/utilities/pgfkeys.sty
(/usr/share/texmf/tex/generic/pgf/utilities/pgfkeys.code.tex))
(/usr/share/texmf/tex/generic/pgf/utilities/pgffor.code.tex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/tikz.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/pgflibraryplothandlers.code.tex)
(/usr/share/texmf/tex/generic/pgf/modules/pgfmodulematrix.code.tex)
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibrarytopat
hs.code.tex))) (/usr/share/texlive/texmf-dist/tex/latex/tkz-graph/tkz-graph.sty
(/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty)
(/usr/share/texlive/texmf-dist/tex/latex/base/ifthen.sty)
(/usr/share/texlive/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(/usr/share/texlive/texmf-dist/tex/generic/xkeyval/xkeyval.tex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryarrow
s.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/pgflibraryarrows.code.tex)))
(/usr/share/texlive/texmf-dist/tex/latex/tkz-berge/tkz-berge.sty
(/usr/share/texlive/texmf-dist/tex/latex/tkz-berge/tkz-arith.sty
(/usr/share/texlive/texmf-dist/tex/latex/tkz-base/tkz-tools-arith.tex)))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.code.tex
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.geometric.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/shapes/pgflibraryshapes.geometric.c
ode.tex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.misc.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/shapes/pgflibraryshapes.misc.code.t
ex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.symbols.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/shapes/pgflibraryshapes.symbols.cod
e.tex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.arrows.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/shapes/pgflibraryshapes.arrows.code
.tex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.callouts.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/shapes/pgflibraryshapes.callouts.co
de.tex))
(/usr/share/texmf/tex/generic/pgf/frontendlayer/tikz/libraries/tikzlibraryshape
s.multipart.code.tex
(/usr/share/texmf/tex/generic/pgf/libraries/shapes/pgflibraryshapes.multipart.c
ode.tex))) (.//foodweb-2-2.tikz.aux) ABD: EveryShipout initializing macros
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd)
(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/ursfs.fd) [1]
(.//foodweb-2-2.tikz.aux) )
Output written on .//foodweb-2-2.tikz.dvi (1 page, 11260 bytes).
Transcript written on .//foodweb-2-2.tikz.log.
if egrep -q "No file.*\.bbl|Citation.*undefined" foodweb-2-2.tikz.log || (diff foodweb-2-2.tikz.aux foodweb-2-2.tikz.aux.bak | egrep -q '(bibstyle|citation)'); then rm -f foodweb-2-2.tikz.bbl; /usr/bin/make -f /usr/local/src/workingwiki-trunk/ProjectEngine/resources/makefile foodweb-2-2.tikz.bbl ; fi
if egrep -q "^[^%]*\\makeindex" foodweb-2-2.tikz.tex ; then makeindex foodweb-2-2.tikz; if [ -r foodweb-2-2.tikz.toc ]; then cp foodweb-2-2.tikz.toc foodweb-2-2.tikz.toc.bak; fi ; latex -interaction=nonstopmode -output-directory ./ foodweb-2-2.tikz.tex ; fi
if egrep -q "There were undefined|Rerun to get" foodweb-2-2.tikz.log || (diff foodweb-2-2.tikz.aux foodweb-2-2.tikz.aux.bak | egrep -q bibstyle); then if [ -r foodweb-2-2.tikz.toc ]; then cp foodweb-2-2.tikz.toc foodweb-2-2.tikz.toc.bak; fi ; latex -interaction=nonstopmode -output-directory ./ foodweb-2-2.tikz.tex ; fi
if egrep -q "There were undefined|Rerun to get" foodweb-2-2.tikz.log ; then if [ -r foodweb-2-2.tikz.toc ]; then cp foodweb-2-2.tikz.toc foodweb-2-2.tikz.toc.bak; fi ; latex -interaction=nonstopmode -output-directory ./ foodweb-2-2.tikz.tex ; fi
if [ ! -r foodweb-2-2.tikz.toc ] || cmp -s foodweb-2-2.tikz.toc foodweb-2-2.tikz.toc.bak; then true; else latex -interaction=nonstopmode -output-directory ./ foodweb-2-2.tikz.tex; fi
rm -f foodweb-2-2.tikz.toc.bak foodweb-2-2.tikz.aux.bak
if egrep -q "Output written on .*\.dvi " foodweb-2-2.tikz.log; then dvipdf foodweb-2-2.tikz.dvi foodweb-2-2.tikz.pdf; fi
if [ -r foodweb-2-2.tikz.pdf ]; then mv foodweb-2-2.tikz.pdf foodweb-2-2.tikz.latex.pdf; fi
if [ -r foodweb-2-2.tikz.tmp.pdf ]; then mv foodweb-2-2.tikz.tmp.pdf foodweb-2-2.tikz.pdf; fi
ln -f foodweb-2-2.tikz.latex.pdf foodweb-2-2.tikz.pdf
pdfcrop --margins 10 foodweb-2-2.tikz.pdf foodweb-2-2.tikz.crop.pdf
PDFCROP 1.38, 2012/11/02 - Copyright (c) 2002-2012 by Heiko Oberdiek.
==> 1 page written on `foodweb-2-2.tikz.crop.pdf'.
rm foodweb-2-2.tikz.pdf
make[1]: Leaving directory `/usr/local/src/adaptive-dynamics-research/wmd_files/Selection_Gradients'
Make succeeded.
Sat Feb  6 15:24:10 2016
