ad bindings: {r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, c_2_0 -> e^(-3*u_2^2), w_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, K_1 -> 2, m_2 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, gamma -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_0_1 -> e^(-3*(u_0 - 1)^2), K_0 -> 2, m_1 -> 1, b_0 -> 1, b_1 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, m_3 -> 1, w_1 -> 1, r_0 -> 1, c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
model bindings: {R_0 -> -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1 -> -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0 -> -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1 -> -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}
_early_bindings: {c_0_1 -> c_1(u_0), c_0_0 -> c_0(u_0), c_1_0 -> c_0(u_1), m_0 -> m(u_0), m_1 -> m(u_1), b_0 -> b(u_0), c_2_0 -> c_0(u_2), b_2 -> b(u_2), c_1_1 -> c_1(u_1), b_1 -> b(u_1), m_2 -> m(u_2), c_2_1 -> c_1(u_2)}
_late_bindings: {c_0_1 -> e^(-3*(u_0 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, m_3 -> 1, m_1 -> 1, b_0 -> 1, c_2_0 -> e^(-3*u_2^2), w_1 -> 1, gamma -> 1, w_0 -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), b_1 -> 1, K_0 -> 2, r_0 -> 1, K_1 -> 2, m_2 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
make LV model
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
_A_bindings: {a_0_1 -> -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_0 -> -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_0 -> -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1 -> -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_0 -> K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, k_1 -> K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1}
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
a_to_u_bindings: {c_0_1 -> e^(-3*(u_0 - 1)^2), r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, K_0 -> 2, k_2 -> 2*e^(-3*(u_2 - 1)^2) + 2*e^(-3*u_2^2) - 1, m_1 -> 1, b_0 -> 1, a_1_0 -> -e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) - e^(-3*u_0^2 - 3*u_1^2), c_2_0 -> e^(-3*u_2^2), a_2_2 -> -e^(-6*(u_2 - 1)^2) - e^(-6*u_2^2), w_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, b_1 -> 1, a_0_0 -> -e^(-6*(u_0 - 1)^2) - e^(-6*u_0^2), K_1 -> 2, a_0_2 -> -e^(-3*(u_0 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_0^2 - 3*u_2^2), m_2 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, w_1 -> 1, b_3 -> 1, c_0_0 -> e^(-3*u_0^2), a_1_1 -> -e^(-6*(u_1 - 1)^2) - e^(-6*u_1^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, k_1 -> 2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1, m_3 -> 1, a_2_0 -> -e^(-3*(u_0 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_0^2 - 3*u_2^2), gamma -> 1, a_1_2 -> -e^(-3*(u_1 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_1^2 - 3*u_2^2), b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), r_0 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), a_2_1 -> -e^(-3*(u_1 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_1^2 - 3*u_2^2), k_0 -> 2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1, a_0_1 -> -e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) - e^(-3*u_0^2 - 3*u_1^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
a_func: (u_0, u_2) |--> -e^(-3*(u_0 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_0^2 - 3*u_2^2)
r_func: u_0 |--> 2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1
make LV adaptive dynamics
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_0: a_1_0, k_2: k_1, a_2_1: a_1_1}
after those limits:
   1
  X_1
  X_0
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_0: a_0_0, k_2: k_0, a_2_1: a_0_1}
after those limits:
   1
  X_1
  X_0
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
Original pop-dyn system: 
\[\begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}
\end{align*}\]
Extended pop-dyn system: 
\[\begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*}\]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{2}\to k_{1},a_{21}\to a_{11},a_{20}\to a_{10},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{11}} = \lim_{k_{2}\to k_{1},a_{21}\to a_{11},a_{20}\to a_{10},X_{2}\to0}X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{10}} = \lim_{k_{2}\to k_{1},a_{21}\to a_{11},a_{20}\to a_{10},X_{2}\to0}X_{0} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{11}} = X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{10}} = X_{0} .
\end{align*}
 Original pop-dyn system: 
\[ \begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}
\end{align*} \]
 Extended pop-dyn system: 
\[ \begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*} \]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{2}\to k_{0},a_{21}\to a_{01},a_{20}\to a_{00},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{01}} = \lim_{k_{2}\to k_{0},a_{21}\to a_{01},a_{20}\to a_{00},X_{2}\to0}X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{00}} = \lim_{k_{2}\to k_{0},a_{21}\to a_{01},a_{20}\to a_{00},X_{2}\to0}X_{0} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{01}} = X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{00}} = X_{0} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  a_{01}\\
  a_{10}\\
  a_{00}\\
  a_{11}\\
  k_{0}\\
  k_{1}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{1}\\
  \hat{X}_{0}\\
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  1\\
  1
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{1} &\to \hat{X}_{1} \\
  X_{0} &\to \hat{X}_{0}
\end{align*} \]
 The adaptive dynamics comes out to 
\[ \begin{align*}
\frac{da_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{da_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma
\end{align*} \]

make LV evolution bindings
dudts: {0: (6*((u_0 - 1)*e^(-6*(u_0 - 1)^2) + u_0*e^(-6*u_0^2))*Xhat_0^2*gamma + 6*((u_0 - 1)*e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + u_0*e^(-3*u_0^2 - 3*u_1^2))*Xhat_0*Xhat_1*gamma - 12*((u_0 - 1)*e^(-3*(u_0 - 1)^2) + u_0*e^(-3*u_0^2))*Xhat_0*gamma), 1: (6*((u_1 - 1)*e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + u_1*e^(-3*u_0^2 - 3*u_1^2))*Xhat_0*Xhat_1*gamma + 6*((u_1 - 1)*e^(-6*(u_1 - 1)^2) + u_1*e^(-6*u_1^2))*Xhat_1^2*gamma - 12*((u_1 - 1)*e^(-3*(u_1 - 1)^2) + u_1*e^(-3*u_1^2))*Xhat_1*gamma)}
printing things in LaTeX
plot k vs. t
plot a vs. t
plot X vs. t
[{t -> 0.0, u_0 -> 0.25}, {t -> 0.025, u_0 -> 0.2656624191609684}, {t -> 0.05, u_0 -> 0.28226857468826594}, {t -> 0.07500000000000001, u_0 -> 0.2998724805839155}, {t -> 0.1, u_0 -> 0.31845546337303626}, {t -> 0.125, u_0 -> 0.33787831700975796}, {t -> 0.15000000000000002, u_0 -> 0.357827161151234}, {t -> 0.17500000000000002, u_0 -> 0.37778695912227045}, {t -> 0.2, u_0 -> 0.39707944684124785}, {t -> 0.225, u_0 -> 0.4149928971417997}, {t -> 0.25, u_0 -> 0.43095493656803474}, {t -> 0.275, u_0 -> 0.44465707248856895}, {t -> 0.30000000000000004, u_0 -> 0.45606814713203486}, {t -> 0.325, u_0 -> 0.4653585625029541}, {t -> 0.35000000000000003, u_0 -> 0.4728048107485903}, {t -> 0.375, u_0 -> 0.47871009661126473}, {t -> 0.4, u_0 -> 0.4833626970971368}, {t -> 0.42500000000000004, u_0 -> 0.4870127109134322}, {t -> 0.45, u_0 -> 0.48986878415428714}, {t -> 0.47500000000000003, u_0 -> 0.49210001887470933}, {t -> 0.5, u_0 -> 0.4938414096579211}, {t -> 0.525, u_0 -> 0.49519966268924676}, {t -> 0.55, u_0 -> 0.4962587022793948}, {t -> 0.5750000000000001, u_0 -> 0.497084269297981}, {t -> 0.6000000000000001, u_0 -> 0.4977277443658527}, {t -> 0.625, u_0 -> 0.4982292457690847}, {t -> 0.65, u_0 -> 0.49862007951586373}, {t -> 0.675, u_0 -> 0.498924622904051}, {t -> 0.7166324293392724, u_1 -> 0.499924622904051, u_0 -> 0.497924622904051}, {t -> 0.7416324293392724, u_1 -> 0.5000514524024637, u_0 -> 0.4978960322742347}, {t -> 0.7666324293392724, u_1 -> 0.5001820408449517, u_0 -> 0.4978591901160694}, {t -> 0.7916324293392725, u_1 -> 0.5003170601933038, u_0 -> 0.4978136566018542}, {t -> 0.8166324293392725, u_1 -> 0.5004569153949279, u_0 -> 0.4977591590030232}, {t -> 0.8416324293392725, u_1 -> 0.5006025213479005, u_0 -> 0.49769505628174077}, {t -> 0.8666324293392725, u_1 -> 0.5007541149194632, u_0 -> 0.49762114979692434}, {t -> 0.8916324293392726, u_1 -> 0.5009126565839319, u_0 -> 0.4975367251492439}, {t -> 0.9166324293392726, u_1 -> 0.5010790042746713, u_0 -> 0.49744115036578757}, {t -> 0.9416324293392726, u_1 -> 0.501253983161303, u_0 -> 0.4973337330463084}, {t -> 0.9666324293392726, u_1 -> 0.501438415313459, u_0 -> 0.49721377507313796}, {t -> 0.9916324293392726, u_1 -> 0.5016331434420368, u_0 -> 0.49708058495195867}, {t -> 1.0166324293392726, u_1 -> 0.5018392271856873, u_0 -> 0.4969332282933235}, {t -> 1.0416324293392727, u_1 -> 0.5020577160281835, u_0 -> 0.49677078207825487}, {t -> 1.0666324293392728, u_1 -> 0.5022897668514638, u_0 -> 0.4965922105150951}, {t -> 1.0916324293392727, u_1 -> 0.5025363172631816, u_0 -> 0.4963967130146736}, {t -> 1.1166324293392726, u_1 -> 0.5027989945051416, u_0 -> 0.4961827492582725}, {t -> 1.1416324293392728, u_1 -> 0.5030789680679526, u_0 -> 0.4959492705608151}, {t -> 1.166632429339273, u_1 -> 0.503377763718237, u_0 -> 0.4956948521132018}, {t -> 1.1916324293392728, u_1 -> 0.5036969923233331, u_0 -> 0.4954179780145553}, {t -> 1.2166324293392727, u_1 -> 0.504038370641387, u_0 -> 0.49511701941976394}, {t -> 1.2416324293392729, u_1 -> 0.5044037477275997, u_0 -> 0.49479021429429165}, {t -> 1.266632429339273, u_1 -> 0.5047951017560552, u_0 -> 0.4944356738365112}, {t -> 1.291632429339273, u_1 -> 0.5052145530622647, u_0 -> 0.49405135612180706}, {t -> 1.3166324293392728, u_1 -> 0.505664366995907, u_0 -> 0.4936350695453922}, {t -> 1.341632429339273, u_1 -> 0.5061470300968679, u_0 -> 0.49318440355204335}, {t -> 1.366632429339273, u_1 -> 0.5066651694975981, u_0 -> 0.4926968019576123}, {t -> 1.391632429339273, u_1 -> 0.5072215575240658, u_0 -> 0.49216955876343543}, {t -> 1.416632429339273, u_1 -> 0.5078192308824351, u_0 -> 0.4915997009592333}, {t -> 1.441632429339273, u_1 -> 0.5084615447776518, u_0 -> 0.49098393490926395}, {t -> 1.4666324293392732, u_1 -> 0.5091519787500725, u_0 -> 0.4903188387048202}, {t -> 1.491632429339273, u_1 -> 0.5098942003060941, u_0 -> 0.48960079913228394}, {t -> 1.516632429339273, u_1 -> 0.51069248733237, u_0 -> 0.4888255930596435}, {t -> 1.5416324293392731, u_1 -> 0.511551124212818, u_0 -> 0.4879889858862289}, {t -> 1.5666324293392733, u_1 -> 0.512474748446953, u_0 -> 0.4870863880429728}, {t -> 1.5916324293392732, u_1 -> 0.5134683751940535, u_0 -> 0.48611283022324164}, {t -> 1.616632429339273, u_1 -> 0.5145375142841011, u_0 -> 0.485062847088136}, {t -> 1.6416324293392732, u_1 -> 0.5156879597942174, u_0 -> 0.48393068655879673}, {t -> 1.6666324293392734, u_1 -> 0.5169259203151045, u_0 -> 0.48271018034099683}, {t -> 1.6916324293392733, u_1 -> 0.5182580686355828, u_0 -> 0.48139469401176227}, {t -> 1.7166324293392732, u_1 -> 0.5196915886355775, u_0 -> 0.4799770799424637}, {t -> 1.741632429339273, u_1 -> 0.521234175990999, u_0 -> 0.4784496777031472}, {t -> 1.7666324293392734, u_1 -> 0.5228940852520713, u_0 -> 0.4768042667950941}, {t -> 1.7916324293392734, u_1 -> 0.5246801099631955, u_0 -> 0.4750320859733535}, {t -> 1.8166324293392733, u_1 -> 0.5266015605132565, u_0 -> 0.4731238548161208}, {t -> 1.8416324293392732, u_1 -> 0.5286684065571702, u_0 -> 0.47106963295317367}, {t -> 1.8666324293392735, u_1 -> 0.5308912594758521, u_0 -> 0.46885883708805914}, {t -> 1.8916324293392734, u_1 -> 0.5332813559399389, u_0 -> 0.46648025740270715}, {t -> 1.9166324293392734, u_1 -> 0.5358505341564791, u_0 -> 0.4639220812708087}, {t -> 1.9416324293392733, u_1 -> 0.5386113534528643, u_0 -> 0.4611717739917706}, {t -> 1.9666324293392736, u_1 -> 0.5415770786342542, u_0 -> 0.45821609441360767}, {t -> 1.9916324293392735, u_1 -> 0.5447615603781774, u_0 -> 0.455041214521808}, {t -> 2.0166324293392734, u_1 -> 0.5481790217009076, u_0 -> 0.4516329329000023}, {t -> 2.0416324293392734, u_1 -> 0.5518443746316912, u_0 -> 0.4479763583117726}, {t -> 2.0666324293392737, u_1 -> 0.5557730166979233, u_0 -> 0.4440561131867982}, {t -> 2.0916324293392736, u_1 -> 0.5599802470984664, u_0 -> 0.43985691740951316}, {t -> 2.1166324293392735, u_1 -> 0.564481706044668, u_0 -> 0.4353631490998091}, {t -> 2.1416324293392734, u_1 -> 0.5692932316439862, u_0 -> 0.4305589877614314}, {t -> 2.166632429339274, u_1 -> 0.5744299417211673, u_0 -> 0.4254293323802697}, {t -> 2.1916324293392737, u_1 -> 0.579906061848884, u_0 -> 0.4199599734220743}, {t -> 2.2166324293392736, u_1 -> 0.5857348976779132, u_0 -> 0.4141376205549991}, {t -> 2.2416324293392735, u_1 -> 0.5919280650740827, u_0 -> 0.4079506724657478}, {t -> 2.266632429339274, u_1 -> 0.5984954279066173, u_0 -> 0.4013892791088198}, {t -> 2.291632429339274, u_1 -> 0.6054438995905129, u_0 -> 0.3944465400546631}, {t -> 2.3166324293392737, u_1 -> 0.6127771124736605, u_0 -> 0.38711883511042694}, {t -> 2.3416324293392736, u_1 -> 0.6204949649837647, u_0 -> 0.3794062771619686}, {t -> 2.366632429339274, u_1 -> 0.6285924831095704, u_0 -> 0.37131385058433813}, {t -> 2.391632429339274, u_1 -> 0.6370596495268209, u_0 -> 0.36285158214745883}, {t -> 2.416632429339274, u_1 -> 0.6458808174257492, u_0 -> 0.3540351271304564}, {t -> 2.4416324293392737, u_1 -> 0.6550340672431632, u_0 -> 0.34488641255683733}, {t -> 2.466632429339274, u_1 -> 0.6644910359881827, u_0 -> 0.3354338078760004}, {t -> 2.491632429339274, u_1 -> 0.6742175499435248, u_0 -> 0.3257114923337617}, {t -> 2.516632429339274, u_1 -> 0.6841732072796745, u_0 -> 0.31575987234584324}, {t -> 2.541632429339274, u_1 -> 0.6943124525302897, u_0 -> 0.3056245071519861}, {t -> 2.566632429339274, u_1 -> 0.7045849241719795, u_0 -> 0.29535576128682073}, {t -> 2.591632429339274, u_1 -> 0.7149373189982445, u_0 -> 0.28500694040906704}, {t -> 2.616632429339274, u_1 -> 0.7253139264024301, u_0 -> 0.2746337570888848}, {t -> 2.641632429339274, u_1 -> 0.7356587263642307, u_0 -> 0.2642922330407737}, {t -> 2.6666324293392742, u_1 -> 0.7459162598192518, u_0 -> 0.25403782885137804}, {t -> 2.691632429339274, u_1 -> 0.7560334688466595, u_0 -> 0.24392360397663945}, {t -> 2.716632429339274, u_1 -> 0.7659605803079496, u_0 -> 0.23399933319749933}, {t -> 2.741632429339274, u_1 -> 0.7756523707845575, u_0 -> 0.22431024180394182}, {t -> 2.766632429339274, u_1 -> 0.7850687894568359, u_0 -> 0.2148963827823748}, {t -> 2.7916324293392742, u_1 -> 0.7941755684815275, u_0 -> 0.20579202649452077}, {t -> 2.816632429339274, u_1 -> 0.8029445438535764, u_0 -> 0.1970253398517489}, {t -> 2.841632429339274, u_1 -> 0.8113532980430228, u_0 -> 0.1886187436418768}, {t -> 2.8666324293392744, u_1 -> 0.8193854126215058, u_0 -> 0.18058865993287376}, {t -> 2.8916324293392743, u_1 -> 0.827030079828249, u_0 -> 0.17294590047127403}, {t -> 2.9166324293392742, u_1 -> 0.8342814583101341, u_0 -> 0.16569631088371226}, {t -> 2.941632429339274, u_1 -> 0.8411382747141041, u_0 -> 0.15884116905019652}, {t -> 2.966632429339274, u_1 -> 0.8476032549074177, u_0 -> 0.15237775383264296}, {t -> 2.9916324293392744, u_1 -> 0.853682502170263, u_0 -> 0.1462999668256585}, {t -> 3.0166324293392743, u_1 -> 0.8593849697214305, u_0 -> 0.14059885978303402}, {t -> 3.0416324293392742, u_1 -> 0.8647219169432617, u_0 -> 0.13526317834292403}, {t -> 3.0666324293392746, u_1 -> 0.8697064515805736, u_0 -> 0.1302798197866156}, {t -> 3.0916324293392745, u_1 -> 0.8743528689426483, u_0 -> 0.12563449377722014}, {t -> 3.1166324293392744, u_1 -> 0.8786764435119165, u_0 -> 0.12131193073068061}, {t -> 3.1416324293392743, u_1 -> 0.882693266378305, u_0 -> 0.11729604436527645}, {t -> 3.1666324293392742, u_1 -> 0.8864196618702844, u_0 -> 0.11357051501991468}, {t -> 3.1916324293392746, u_1 -> 0.8898719808805479, u_0 -> 0.11011899631147311}, {t -> 3.2166324293392745, u_1 -> 0.8930664106081686, u_0 -> 0.10692530537550828}, {t -> 3.2416324293392744, u_1 -> 0.8960189402463183, u_0 -> 0.10397345717858382}, {t -> 3.266632429339275, u_1 -> 0.8987450689073513, u_0 -> 0.10124795656885403}, {t -> 3.2916324293392747, u_1 -> 0.9012598265443762, u_0 -> 0.09873377736133615}, {t -> 3.3166324293392746, u_1 -> 0.9035776005952068, u_0 -> 0.09641653568097593}, {t -> 3.3416324293392745, u_1 -> 0.9057121693853919, u_0 -> 0.09428245656921054}, {t -> 3.3666324293392744, u_1 -> 0.9076765937199718, u_0 -> 0.09231848238570328}, {t -> 3.391632429339275, u_1 -> 0.9094832741648368, u_0 -> 0.0905122155392011}, {t -> 3.4166324293392747, u_1 -> 0.9111438780242368, u_0 -> 0.08885199150784573}, {t -> 3.4416324293392746, u_1 -> 0.9126693974552775, u_0 -> 0.08732682073713283}, {t -> 3.466632429339275, u_1 -> 0.914070117775225, u_0 -> 0.08592642033470733}, {t -> 3.491632429339275, u_1 -> 0.9153556731998926, u_0 -> 0.08464115834393007}, {t -> 3.516632429339275, u_1 -> 0.9165350389666518, u_0 -> 0.08346206162558856}, {t -> 3.5416324293392747, u_1 -> 0.9176165827404862, u_0 -> 0.0823807644628199}, {t -> 3.5666324293392746, u_1 -> 0.9186080752167715, u_0 -> 0.08138949796489334}, {t -> 3.591632429339275, u_1 -> 0.9195167321702458, u_0 -> 0.08048104802773436}, {t -> 3.616632429339275, u_1 -> 0.920349225898341, u_0 -> 0.07964874389775688}, {t -> 3.641632429339275, u_1 -> 0.921111743089472, u_0 -> 0.07888640031257088}, {t -> 3.666632429339275, u_1 -> 0.921810000054937, u_0 -> 0.07818830227709604}, {t -> 3.691632429339275, u_1 -> 0.9224492717964905, u_0 -> 0.07754917600270164}, {t -> 3.716632429339275, u_1 -> 0.923034424126722, u_0 -> 0.07696415679341143}, {t -> 3.741632429339275, u_1 -> 0.9235699429087401, u_0 -> 0.07642875981540802}, {t -> 3.766632429339275, u_1 -> 0.9240599541308654, u_0 -> 0.07593886002531773}, {t -> 3.791632429339275, u_1 -> 0.9245082576121216, u_0 -> 0.07549065847395026}, {t -> 3.816632429339275, u_1 -> 0.9249183472668435, u_0 -> 0.07508066204620156}, {t -> 3.841632429339275, u_1 -> 0.9252934299499914, u_0 -> 0.07470566461970611}, {t -> 3.8666324293392753, u_1 -> 0.9256364585109618, u_0 -> 0.0743627140195865}, {t -> 3.8916324293392752, u_1 -> 0.9259501356439439, u_0 -> 0.07404910816841345}, {t -> 3.916632429339275, u_1 -> 0.926236946209786, u_0 -> 0.07376236277222074}, {t -> 3.941632429339275, u_1 -> 0.9264991673494424, u_0 -> 0.07350020120927445}, {t -> 3.966632429339275, u_1 -> 0.9267388819357004, u_0 -> 0.07326054108138642}, {t -> 3.9916324293392753, u_1 -> 0.9269580130091171, u_0 -> 0.07304145978629907}, {t -> 5, u_1 -> 0.9269580130091171, u_0 -> 0.07304145978629907}]
Xhat_1: ((2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2)) - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
Xhat_0: ((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1) - (2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
plot R vs. t
plot a vs. a
