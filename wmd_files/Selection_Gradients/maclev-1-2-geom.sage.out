ad bindings: {r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, c_2_0 -> e^(-3*u_2^2), w_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, K_1 -> 2, m_2 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, gamma -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_0_1 -> e^(-3*(u_0 - 1)^2), K_0 -> 2, m_1 -> 1, b_0 -> 1, b_1 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, m_3 -> 1, w_1 -> 1, r_0 -> 1, c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
model bindings: {R_0 -> -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1 -> -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0 -> -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1 -> -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}
_early_bindings: {c_0_1 -> c_1(u_0), c_0_0 -> c_0(u_0), c_1_0 -> c_0(u_1), m_0 -> m(u_0), m_1 -> m(u_1), b_0 -> b(u_0), c_2_0 -> c_0(u_2), b_2 -> b(u_2), c_1_1 -> c_1(u_1), b_1 -> b(u_1), m_2 -> m(u_2), c_2_1 -> c_1(u_2)}
_late_bindings: {c_0_1 -> e^(-3*(u_0 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, m_3 -> 1, m_1 -> 1, b_0 -> 1, c_2_0 -> e^(-3*u_2^2), w_1 -> 1, gamma -> 1, w_0 -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), b_1 -> 1, K_0 -> 2, r_0 -> 1, K_1 -> 2, m_2 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
make LV model
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
_A_bindings: {a_1_0 -> -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1 -> -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_1 -> -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_0 -> -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1 -> K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0 -> K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0}
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
a_to_u_bindings: {c_0_1 -> e^(-3*(u_0 - 1)^2), r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, K_0 -> 2, k_2 -> 2*e^(-3*(u_2 - 1)^2) + 2*e^(-3*u_2^2) - 1, m_1 -> 1, b_0 -> 1, a_0_1 -> -e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) - e^(-3*u_0^2 - 3*u_1^2), c_2_0 -> e^(-3*u_2^2), a_2_2 -> -e^(-6*(u_2 - 1)^2) - e^(-6*u_2^2), w_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, b_1 -> 1, K_1 -> 2, a_1_2 -> -e^(-3*(u_1 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_1^2 - 3*u_2^2), m_2 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, w_1 -> 1, b_3 -> 1, c_0_0 -> e^(-3*u_0^2), a_0_0 -> -e^(-6*(u_0 - 1)^2) - e^(-6*u_0^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, k_0 -> 2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1, m_3 -> 1, a_2_1 -> -e^(-3*(u_1 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_1^2 - 3*u_2^2), a_2_0 -> -e^(-3*(u_0 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_0^2 - 3*u_2^2), gamma -> 1, a_0_2 -> -e^(-3*(u_0 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_0^2 - 3*u_2^2), b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), a_1_1 -> -e^(-6*(u_1 - 1)^2) - e^(-6*u_1^2), r_0 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), k_1 -> 2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1, a_1_0 -> -e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) - e^(-3*u_0^2 - 3*u_1^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
a_func: (u_0, u_2) |--> -e^(-3*(u_0 - 1)^2 - 3*(u_2 - 1)^2) - e^(-3*u_0^2 - 3*u_2^2)
r_func: u_0 |--> 2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1
make LV adaptive dynamics
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_0_1, k_2: k_0, a_2_0: a_0_0}
after those limits:
   1
  X_0
  X_1
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_1_1, k_2: k_1, a_2_0: a_1_0}
after those limits:
   1
  X_0
  X_1
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
Original pop-dyn system: 
\[\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}
\end{align*}\]
Extended pop-dyn system: 
\[\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*}\]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{2}\to k_{0},a_{20}\to a_{00},a_{21}\to a_{01},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{00}} = \lim_{k_{2}\to k_{0},a_{20}\to a_{00},a_{21}\to a_{01},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{01}} = \lim_{k_{2}\to k_{0},a_{20}\to a_{00},a_{21}\to a_{01},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{00}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{01}} = X_{1} .
\end{align*}
 Original pop-dyn system: 
\[ \begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}
\end{align*} \]
 Extended pop-dyn system: 
\[ \begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*} \]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{2}\to k_{1},a_{20}\to a_{10},a_{21}\to a_{11},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{10}} = \lim_{k_{2}\to k_{1},a_{20}\to a_{10},a_{21}\to a_{11},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{11}} = \lim_{k_{2}\to k_{1},a_{20}\to a_{10},a_{21}\to a_{11},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{10}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{11}} = X_{1} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  a_{10}\\
  a_{01}\\
  a_{11}\\
  a_{00}\\
  k_{1}\\
  k_{0}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  \hat{X}_{1}\\
  \hat{X}_{0}\\
  1\\
  1
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{1} &\to \hat{X}_{1} \\
  X_{0} &\to \hat{X}_{0}
\end{align*} \]
 The adaptive dynamics comes out to 
\[ \begin{align*}
\frac{da_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{da_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma
\end{align*} \]

make LV evolution bindings
dudts: {0: (6*((u_0 - 1)*e^(-6*(u_0 - 1)^2) + u_0*e^(-6*u_0^2))*Xhat_0^2*gamma + 6*((u_0 - 1)*e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + u_0*e^(-3*u_0^2 - 3*u_1^2))*Xhat_0*Xhat_1*gamma - 12*((u_0 - 1)*e^(-3*(u_0 - 1)^2) + u_0*e^(-3*u_0^2))*Xhat_0*gamma), 1: (6*((u_1 - 1)*e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + u_1*e^(-3*u_0^2 - 3*u_1^2))*Xhat_0*Xhat_1*gamma + 6*((u_1 - 1)*e^(-6*(u_1 - 1)^2) + u_1*e^(-6*u_1^2))*Xhat_1^2*gamma - 12*((u_1 - 1)*e^(-3*(u_1 - 1)^2) + u_1*e^(-3*u_1^2))*Xhat_1*gamma)}
printing things in LaTeX
plot k vs. t
plot a vs. t
plot X vs. t
[{t -> 0.0, u_0 -> 0.25}, {t -> 0.025, u_0 -> 0.2656624191609684}, {t -> 0.05, u_0 -> 0.28226857468826594}, {t -> 0.07500000000000001, u_0 -> 0.2998724805839155}, {t -> 0.1, u_0 -> 0.31845546337303626}, {t -> 0.125, u_0 -> 0.33787831700975796}, {t -> 0.15000000000000002, u_0 -> 0.357827161151234}, {t -> 0.17500000000000002, u_0 -> 0.37778695912227045}, {t -> 0.2, u_0 -> 0.39707944684124785}, {t -> 0.225, u_0 -> 0.4149928971417997}, {t -> 0.25, u_0 -> 0.43095493656803474}, {t -> 0.275, u_0 -> 0.44465707248856895}, {t -> 0.30000000000000004, u_0 -> 0.45606814713203486}, {t -> 0.325, u_0 -> 0.4653585625029541}, {t -> 0.35000000000000003, u_0 -> 0.4728048107485903}, {t -> 0.375, u_0 -> 0.47871009661126473}, {t -> 0.4, u_0 -> 0.4833626970971368}, {t -> 0.42500000000000004, u_0 -> 0.4870127109134322}, {t -> 0.45, u_0 -> 0.48986878415428714}, {t -> 0.47500000000000003, u_0 -> 0.49210001887470933}, {t -> 0.5, u_0 -> 0.4938414096579211}, {t -> 0.525, u_0 -> 0.49519966268924676}, {t -> 0.55, u_0 -> 0.4962587022793948}, {t -> 0.5750000000000001, u_0 -> 0.497084269297981}, {t -> 0.6000000000000001, u_0 -> 0.4977277443658527}, {t -> 0.625, u_0 -> 0.4982292457690847}, {t -> 0.65, u_0 -> 0.49862007951586373}, {t -> 0.675, u_0 -> 0.498924622904051}, {t -> 0.7166324293392724, u_1 -> 0.499924622904051, u_0 -> 0.497924622904051}, {t -> 0.7416324293392724, u_1 -> 0.50005145240454, u_0 -> 0.497896032272895}, {t -> 0.7666324293392724, u_1 -> 0.5001820408492623, u_0 -> 0.49785919011326607}, {t -> 0.7916324293392725, u_1 -> 0.5003170602025234, u_0 -> 0.4978136565954384}, {t -> 0.8166324293392725, u_1 -> 0.5004569153911078, u_0 -> 0.49775915900561807}, {t -> 0.8416324293392725, u_1 -> 0.5006025213705108, u_0 -> 0.4976950562650967}, {t -> 0.8666324293392725, u_1 -> 0.5007541149467204, u_0 -> 0.49762114977762867}, {t -> 0.8916324293392726, u_1 -> 0.5009126566093863, u_0 -> 0.49753672513057423}, {t -> 0.9166324293392726, u_1 -> 0.5010790042962948, u_0 -> 0.49744115034788455}, {t -> 0.9416324293392726, u_1 -> 0.5012539831812282, u_0 -> 0.4973337330302621}, {t -> 0.9666324293392726, u_1 -> 0.5014384153347675, u_0 -> 0.4972137750554984}, {t -> 0.9916324293392726, u_1 -> 0.5016331434668461, u_0 -> 0.49708058493032187}, {t -> 1.0166324293392726, u_1 -> 0.501839227209008, u_0 -> 0.49693322827336034}, {t -> 1.0416324293392727, u_1 -> 0.5020577160543649, u_0 -> 0.4967707820552899}, {t -> 1.0666324293392728, u_1 -> 0.5022897668918318, u_0 -> 0.4965922104769726}, {t -> 1.0916324293392727, u_1 -> 0.5025363172941603, u_0 -> 0.4963967129865756}, {t -> 1.1166324293392726, u_1 -> 0.5027989945378307, u_0 -> 0.49618274922840844}, {t -> 1.1416324293392728, u_1 -> 0.503078968107478, u_0 -> 0.49594927052367277}, {t -> 1.166632429339273, u_1 -> 0.5033777637609471, u_0 -> 0.4956948520725966}, {t -> 1.1916324293392728, u_1 -> 0.5036969923694868, u_0 -> 0.49541797797032505}, {t -> 1.2166324293392727, u_1 -> 0.5040383706906505, u_0 -> 0.4951170193725394}, {t -> 1.2416324293392729, u_1 -> 0.5044037477801149, u_0 -> 0.4947902142436491}, {t -> 1.266632429339273, u_1 -> 0.5047951018117841, u_0 -> 0.49443567378250003}, {t -> 1.291632429339273, u_1 -> 0.5052145531218162, u_0 -> 0.49405135606393613}, {t -> 1.3166324293392728, u_1 -> 0.5056643670594946, u_0 -> 0.4936350694835104}, {t -> 1.341632429339273, u_1 -> 0.5061470301635469, u_0 -> 0.4931844034869794}, {t -> 1.366632429339273, u_1 -> 0.5066651695689495, u_0 -> 0.4926968018877942}, {t -> 1.391632429339273, u_1 -> 0.5072215576033796, u_0 -> 0.49216955868560147}, {t -> 1.416632429339273, u_1 -> 0.5078192309663679, u_0 -> 0.49159970087669574}, {t -> 1.441632429339273, u_1 -> 0.508461544866624, u_0 -> 0.4909839348216053}, {t -> 1.4666324293392732, u_1 -> 0.5091519788466378, u_0 -> 0.4903188386095109}, {t -> 1.491632429339273, u_1 -> 0.509894200409676, u_0 -> 0.4896007990299008}, {t -> 1.516632429339273, u_1 -> 0.51069248744328, u_0 -> 0.4888255929498743}, {t -> 1.5416324293392731, u_1 -> 0.5115511243318769, u_0 -> 0.48798898576825467}, {t -> 1.5666324293392733, u_1 -> 0.512474748577854, u_0 -> 0.4870863879131226}, {t -> 1.5916324293392732, u_1 -> 0.5134683753347972, u_0 -> 0.48611283008350625}, {t -> 1.616632429339273, u_1 -> 0.5145375144354848, u_0 -> 0.485062846937721}, {t -> 1.6416324293392732, u_1 -> 0.5156879599578637, u_0 -> 0.4839306863960819}, {t -> 1.6666324293392734, u_1 -> 0.5169259204927018, u_0 -> 0.4827101801642876}, {t -> 1.6916324293392733, u_1 -> 0.5182580688277237, u_0 -> 0.4813946938204789}, {t -> 1.7166324293392732, u_1 -> 0.5196915888428314, u_0 -> 0.47997707973604}, {t -> 1.741632429339273, u_1 -> 0.5212341762135957, u_0 -> 0.4784496774813457}, {t -> 1.7666324293392734, u_1 -> 0.5228940854897918, u_0 -> 0.4768042665581155}, {t -> 1.7916324293392734, u_1 -> 0.5246801102185698, u_0 -> 0.47503208571868405}, {t -> 1.8166324293392733, u_1 -> 0.526601560787805, u_0 -> 0.4731238545422467}, {t -> 1.8416324293392732, u_1 -> 0.5286684068520634, u_0 -> 0.47106963265892543}, {t -> 1.8666324293392735, u_1 -> 0.5308912597922492, u_0 -> 0.4688588367722776}, {t -> 1.8916324293392734, u_1 -> 0.5332813562811544, u_0 -> 0.4664802570620818}, {t -> 1.9166324293392734, u_1 -> 0.5358505345243048, u_0 -> 0.46392208090355025}, {t -> 1.9416324293392733, u_1 -> 0.5386113538478505, u_0 -> 0.46117177359732936}, {t -> 1.9666324293392736, u_1 -> 0.5415770790555462, u_0 -> 0.458216093992837}, {t -> 1.9916324293392735, u_1 -> 0.5447615608314176, u_0 -> 0.455041214069068}, {t -> 2.0166324293392734, u_1 -> 0.5481790221894702, u_0 -> 0.4516329324119207}, {t -> 2.0416324293392734, u_1 -> 0.5518443751552315, u_0 -> 0.44797635778869493}, {t -> 2.0666324293392737, u_1 -> 0.5557730172585872, u_0 -> 0.44405611262657957}, {t -> 2.0916324293392736, u_1 -> 0.5599802477028286, u_0 -> 0.4398569168055805}, {t -> 2.1166324293392735, u_1 -> 0.5644817066920329, u_0 -> 0.4353631484528587}, {t -> 2.1416324293392734, u_1 -> 0.5692932323300293, u_0 -> 0.4305589870757878}, {t -> 2.166632429339274, u_1 -> 0.5744299424532198, u_0 -> 0.42542933164860364}, {t -> 2.1916324293392737, u_1 -> 0.5799060626288048, u_0 -> 0.41995997264252755}, {t -> 2.2166324293392736, u_1 -> 0.5857348985090047, u_0 -> 0.41413761972427043}, {t -> 2.2416324293392735, u_1 -> 0.5919280659581138, u_0 -> 0.40795067158206944}, {t -> 2.266632429339274, u_1 -> 0.5984954288410894, u_0 -> 0.40138927817469067}, {t -> 2.291632429339274, u_1 -> 0.6054439005798903, u_0 -> 0.3944465390656203}, {t -> 2.3166324293392737, u_1 -> 0.6127771135162857, u_0 -> 0.3871188340681283}, {t -> 2.3416324293392736, u_1 -> 0.6204949660791302, u_0 -> 0.3794062760669221}, {t -> 2.366632429339274, u_1 -> 0.6285924842578156, u_0 -> 0.3713138494364053}, {t -> 2.391632429339274, u_1 -> 0.6370596507251592, u_0 -> 0.3628515809494264}, {t -> 2.416632429339274, u_1 -> 0.6458808186706757, u_0 -> 0.3540351258858296}, {t -> 2.4416324293392737, u_1 -> 0.6550340685337649, u_0 -> 0.3448864112665296}, {t -> 2.466632429339274, u_1 -> 0.664491037318395, u_0 -> 0.3354338065460766}, {t -> 2.491632429339274, u_1 -> 0.674217551308257, u_0 -> 0.3257114909693123}, {t -> 2.516632429339274, u_1 -> 0.6841732086718004, u_0 -> 0.3157598709539944}, {t -> 2.541632429339274, u_1 -> 0.6943124539447163, u_0 -> 0.30562450573783084}, {t -> 2.566632429339274, u_1 -> 0.7045849256001516, u_0 -> 0.2953557598589135}, {t -> 2.591632429339274, u_1 -> 0.7149373204335314, u_0 -> 0.2850069389740386}, {t -> 2.616632429339274, u_1 -> 0.7253139278365212, u_0 -> 0.27463375565504555}, {t -> 2.641632429339274, u_1 -> 0.7356587277897524, u_0 -> 0.26429223161549664}, {t -> 2.6666324293392742, u_1 -> 0.7459162612289203, u_0 -> 0.25403782744194664}, {t -> 2.691632429339274, u_1 -> 0.7560334702333101, u_0 -> 0.24392360259021792}, {t -> 2.716632429339274, u_1 -> 0.7659605816653309, u_0 -> 0.23399933184033897}, {t -> 2.741632429339274, u_1 -> 0.775652372106917, u_0 -> 0.22431024048179482}, {t -> 2.766632429339274, u_1 -> 0.7850687907387858, u_0 -> 0.21489638150062862}, {t -> 2.7916324293392742, u_1 -> 0.7941755697194912, u_0 -> 0.2057920252567519}, {t -> 2.816632429339274, u_1 -> 0.802944545042698, u_0 -> 0.19702533866281316}, {t -> 2.841632429339274, u_1 -> 0.8113532991808415, u_0 -> 0.1886187425042347}, {t -> 2.8666324293392744, u_1 -> 0.8193854137065762, u_0 -> 0.1805886588479707}, {t -> 2.8916324293392743, u_1 -> 0.8270300808590746, u_0 -> 0.17294589944060695}, {t -> 2.9166324293392742, u_1 -> 0.8342814592863735, u_0 -> 0.1656963099076223}, {t -> 2.941632429339274, u_1 -> 0.8411382756358299, u_0 -> 0.1588411681286115}, {t -> 2.966632429339274, u_1 -> 0.847603255775262, u_0 -> 0.15237775296493092}, {t -> 2.9916324293392744, u_1 -> 0.8536825029852936, u_0 -> 0.14629996601075188}, {t -> 3.0166324293392743, u_1 -> 0.8593849704850418, u_0 -> 0.14059885901953867}, {t -> 3.0416324293392742, u_1 -> 0.8647219176571909, u_0 -> 0.13526317762910312}, {t -> 3.0666324293392746, u_1 -> 0.8697064522462723, u_0 -> 0.1302798191210177}, {t -> 3.0916324293392745, u_1 -> 0.8743528695611857, u_0 -> 0.12563449315877645}, {t -> 3.1166324293392744, u_1 -> 0.8786764440872923, u_0 -> 0.12131193015539211}, {t -> 3.1416324293392743, u_1 -> 0.8826932669128822, u_0 -> 0.11729604383078046}, {t -> 3.1666324293392742, u_1 -> 0.8864196623661672, u_0 -> 0.11357051452410723}, {t -> 3.1916324293392746, u_1 -> 0.8898719813391287, u_0 -> 0.11011899585296193}, {t -> 3.2166324293392745, u_1 -> 0.8930664110324538, u_0 -> 0.10692530495128758}, {t -> 3.2416324293392744, u_1 -> 0.8960189406380671, u_0 -> 0.10397345678689474}, {t -> 3.266632429339275, u_1 -> 0.8987450692690863, u_0 -> 0.10124795620717413}, {t -> 3.2916324293392747, u_1 -> 0.9012598268777952, u_0 -> 0.09873377702796798}, {t -> 3.3166324293392746, u_1 -> 0.9035776009025225, u_0 -> 0.09641653537370715}, {t -> 3.3416324293392745, u_1 -> 0.9057121696681715, u_0 -> 0.09428245628647416}, {t -> 3.3666324293392744, u_1 -> 0.9076765939802169, u_0 -> 0.09231848212549788}, {t -> 3.391632429339275, u_1 -> 0.9094832744040429, u_0 -> 0.09051221530003163}, {t -> 3.4166324293392747, u_1 -> 0.911143878244104, u_0 -> 0.08885199128801223}, {t -> 3.4416324293392746, u_1 -> 0.9126693976571605, u_0 -> 0.08732682053528075}, {t -> 3.466632429339275, u_1 -> 0.9140701179605862, u_0 -> 0.08592642014937439}, {t -> 3.491632429339275, u_1 -> 0.9153556733699485, u_0 -> 0.08464115817390015}, {t -> 3.516632429339275, u_1 -> 0.9165350391226509, u_0 -> 0.08346206146961328}, {t -> 3.5416324293392747, u_1 -> 0.917616582883508, u_0 -> 0.08238076431981994}, {t -> 3.5666324293392746, u_1 -> 0.9186080753479019, u_0 -> 0.08138949783378283}, {t -> 3.591632429339275, u_1 -> 0.9195167322904134, u_0 -> 0.08048104790758509}, {t -> 3.616632429339275, u_1 -> 0.9203492260083773, u_0 -> 0.07964874378773737}, {t -> 3.641632429339275, u_1 -> 0.9211117431902516, u_0 -> 0.07888640021180669}, {t -> 3.666632429339275, u_1 -> 0.9218100001472155, u_0 -> 0.0781883021848316}, {t -> 3.691632429339275, u_1 -> 0.9224492718809596, u_0 -> 0.07754917591824537}, {t -> 3.716632429339275, u_1 -> 0.9230344242040407, u_0 -> 0.07696415671610442}, {t -> 3.741632429339275, u_1 -> 0.9235699429795039, u_0 -> 0.076428759744655}, {t -> 3.766632429339275, u_1 -> 0.9240599541955988, u_0 -> 0.07593885996059417}, {t -> 3.791632429339275, u_1 -> 0.9245082576713697, u_0 -> 0.07549065841471121}, {t -> 3.816632429339275, u_1 -> 0.9249183473210134, u_0 -> 0.07508066199203983}, {t -> 3.841632429339275, u_1 -> 0.9252934299995338, u_0 -> 0.07470566457017112}, {t -> 3.8666324293392753, u_1 -> 0.9256364585562876, u_0 -> 0.07436271397426757}, {t -> 3.8916324293392752, u_1 -> 0.925950135685368, u_0 -> 0.07404910812699567}, {t -> 3.916632429339275, u_1 -> 0.9262369462476997, u_0 -> 0.07376236273431275}, {t -> 3.941632429339275, u_1 -> 0.926499167384026, u_0 -> 0.07350020117469608}, {t -> 3.966632429339275, u_1 -> 0.9267388819672621, u_0 -> 0.07326054104982957}, {t -> 3.9916324293392753, u_1 -> 0.9269580130380641, u_0 -> 0.07304145975735657}, {t -> 5, u_1 -> 0.9269580130380641, u_0 -> 0.07304145975735657}]
Xhat_0: ((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1) - (2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
Xhat_1: ((2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2)) - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
plot R vs. t
plot a vs. a
