set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0, 1]
set_population_indices: [0]
set_population_indices: [0]
set_population_indices: [0]
set_population_indices: [0]
ad bindings: {K_0 -> 2, m_3 -> 1, c_0_1 -> e^(-3*(u_0 - 1)^2), r_1 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), c_2_1 -> e^(-3*(u_2 - 1)^2), K_1 -> 2, c_1_0 -> e^(-3*u_1^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, c_1_1 -> e^(-3*(u_1 - 1)^2), gamma -> 1, b_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, b_2 -> 1, m_1 -> 1, c_0_0 -> e^(-3*u_0^2), w_1 -> 1, b_3 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, r_0 -> 1, m_2 -> 1, w_0 -> 1, m_0 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
model bindings: {R_0 -> -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1 -> -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0 -> -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1 -> -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}
_early_bindings: {b_0 -> b(u_0), c_1_0 -> c_0(u_1), c_0_1 -> c_1(u_0), b_2 -> b(u_2), m_2 -> m(u_2), b_1 -> b(u_1), c_2_0 -> c_0(u_2), m_1 -> m(u_1), m_0 -> m(u_0), c_0_0 -> c_0(u_0), c_1_1 -> c_1(u_1), c_2_1 -> c_1(u_2)}
_late_bindings: {gamma -> 1, w_1 -> 1, b_3 -> 1, K_1 -> 2, b_0 -> 1, c_1_0 -> e^(-3*u_1^2), K_0 -> 2, c_0_1 -> e^(-3*(u_0 - 1)^2), r_0 -> 1, b_2 -> 1, r_1 -> 1, m_2 -> 1, b_1 -> 1, c_2_0 -> e^(-3*u_2^2), w_0 -> 1, m_1 -> 1, m_0 -> 1, m_3 -> 1, c_0_0 -> e^(-3*u_0^2), c_1_1 -> e^(-3*(u_1 - 1)^2), c_2_1 -> e^(-3*(u_2 - 1)^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), b() -> 1, m() -> 1, c_0(u_0) -> e^(-3*u_0^2)}
make LV model
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
aij_dict: {a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1}
set_population_indices: [0, 1]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
aij_dict: {a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1}
_A_bindings: {a_0_0 -> -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1 -> K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_1_1 -> -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_1_0 -> -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1 -> -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, k_0 -> K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0}
make LV adaptive dynamics
population vars [X_0, X_1]
population vars [X_0, X_1]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_0_1, a_2_0: a_0_0, k_2: k_0}
after those limits:
   1
  X_0
  X_1
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
set_population_indices: [0, 1, 2]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_1_1, a_2_0: a_1_0, k_2: k_1}
after those limits:
   1
  X_0
  X_1
Original pop-dyn system: 
\[\iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{dmath*}
\end{dgroup*}
\fi
\]
Extended pop-dyn system: 
\[\iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\end{dmath*}
\begin{dmath*}
\frac{dX_{2}}{dt} = {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{dmath*}
\end{dgroup*}
\fi
\]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{2}\to k_{0},{a}_{20}\to {a}_{00},{a}_{21}\to {a}_{01},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial {a}_{00}} = \lim_{k_{2}\to k_{0},{a}_{20}\to {a}_{00},{a}_{21}\to {a}_{01},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{01}} = \lim_{k_{2}\to k_{0},{a}_{20}\to {a}_{00},{a}_{21}\to {a}_{01},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial {a}_{00}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{01}} = X_{1} .
\end{align*}
 Original pop-dyn system: 
\[ \iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + k_{1}\right)} X_{1}
\end{dmath*}
\end{dgroup*}
\fi
 \]
 Extended pop-dyn system: 
\[ \iflatexml
\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{dX_{0}}{dt} = {\left(X_{0} {a}_{00} + X_{1} {a}_{01} + X_{2} {a}_{02} + k_{0}\right)} X_{0}\end{dmath*}
\begin{dmath*}
\frac{dX_{1}}{dt} = {\left(X_{0} {a}_{10} + X_{1} {a}_{11} + X_{2} {a}_{12} + k_{1}\right)} X_{1}\end{dmath*}
\begin{dmath*}
\frac{dX_{2}}{dt} = {\left(X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2}\right)} X_{2}
\end{dmath*}
\end{dgroup*}
\fi
 \]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} {a}_{20} + X_{1} {a}_{21} + X_{2} {a}_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{2}\to k_{1},{a}_{20}\to {a}_{10},{a}_{21}\to {a}_{11},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial {a}_{10}} = \lim_{k_{2}\to k_{1},{a}_{20}\to {a}_{10},{a}_{21}\to {a}_{11},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{11}} = \lim_{k_{2}\to k_{1},{a}_{20}\to {a}_{10},{a}_{21}\to {a}_{11},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial {a}_{10}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial {a}_{11}} = X_{1} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  {a}_{10}\\
  {a}_{11}\\
  {a}_{00}\\
  k_{1}\\
  {a}_{01}\\
  k_{0}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  \hat{X}_{0}\\
  1\\
  \hat{X}_{1}\\
  1
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{1} &\to \hat{X}_{1} \\
  X_{0} &\to \hat{X}_{0}
\end{align*} \]
 The adaptive dynamics comes out to 
\[ \iflatexml
\begin{align*}
\frac{d{a}_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma\\
\frac{d{a}_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{d{a}_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{d{a}_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma
\end{align*}
\else
\begin{dgroup*}
\begin{dmath*}
\frac{d{a}_{11}}{dt} = \hat{X}_{1}^{2} \gamma\end{dmath*}
\begin{dmath*}
\frac{dk_{1}}{dt} = \hat{X}_{1} \gamma\end{dmath*}
\begin{dmath*}
\frac{dk_{0}}{dt} = \hat{X}_{0} \gamma\end{dmath*}
\begin{dmath*}
\frac{d{a}_{10}}{dt} = \hat{X}_{0} \hat{X}_{1} \gamma\end{dmath*}
\begin{dmath*}
\frac{d{a}_{00}}{dt} = \hat{X}_{0}^{2} \gamma\end{dmath*}
\begin{dmath*}
\frac{d{a}_{01}}{dt} = \hat{X}_{0} \hat{X}_{1} \gamma
\end{dmath*}
\end{dgroup*}
\fi
 \]

make LV evolution bindings
printing things in LaTeX
plot k vs. t
plot a vs. t
plot X vs. t
[{u_0 -> 0.25, t -> 0.0}, {u_0 -> 0.265662419160928, t -> 0.025}, {u_0 -> 0.28226857468823563, t -> 0.05}, {u_0 -> 0.299872480583881, t -> 0.07500000000000001}, {u_0 -> 0.31845546337300656, t -> 0.1}, {u_0 -> 0.3378783170097277, t -> 0.125}, {u_0 -> 0.35782716115120883, t -> 0.15000000000000002}, {u_0 -> 0.37778695912223514, t -> 0.17500000000000002}, {u_0 -> 0.397079446841211, t -> 0.2}, {u_0 -> 0.4149928971417681, t -> 0.225}, {u_0 -> 0.4309549365679862, t -> 0.25}, {u_0 -> 0.4446570724884879, t -> 0.275}, {u_0 -> 0.45606814713196436, t -> 0.30000000000000004}, {u_0 -> 0.4653585625028991, t -> 0.325}, {u_0 -> 0.4728048107485359, t -> 0.35000000000000003}, {u_0 -> 0.4787100966112361, t -> 0.375}, {u_0 -> 0.48336269709711227, t -> 0.4}, {u_0 -> 0.4870127109134128, t -> 0.42500000000000004}, {u_0 -> 0.4898687841542706, t -> 0.45}, {u_0 -> 0.4921000188746971, t -> 0.47500000000000003}, {u_0 -> 0.49384140965791007, t -> 0.5}, {u_0 -> 0.4951996626892392, t -> 0.525}, {u_0 -> 0.4962587022793896, t -> 0.55}, {u_0 -> 0.49708426929797667, t -> 0.5750000000000001}, {u_0 -> 0.4977277443658491, t -> 0.6000000000000001}, {u_0 -> 0.49822924576908173, t -> 0.625}, {u_0 -> 0.49862007951586146, t -> 0.65}, {u_0 -> 0.4989246229040509, t -> 0.675}, {u_1 -> 0.4999246229040509, u_0 -> 0.4979246229040509, t -> 0.7166324302932131}, {u_1 -> 0.5000514524011572, u_0 -> 0.49789603227507934, t -> 0.7416324302932131}, {u_1 -> 0.5001820408422352, u_0 -> 0.49785919011783714, t -> 0.7666324302932132}, {u_1 -> 0.5003170601874902, u_0 -> 0.49781365660590055, t -> 0.7916324302932132}, {u_1 -> 0.5004569153973368, u_0 -> 0.4977591590013872, t -> 0.8166324302932132}, {u_1 -> 0.5006025213336409, u_0 -> 0.4976950562922373, t -> 0.8416324302932132}, {u_1 -> 0.5007541149022731, u_0 -> 0.49762114980909267, t -> 0.8666324302932132}, {u_1 -> 0.5009126565678792, u_0 -> 0.49753672516101727, t -> 0.8916324302932133}, {u_1 -> 0.501079004261035, u_0 -> 0.49744115037707753, t -> 0.9166324302932133}, {u_1 -> 0.5012539831487385, u_0 -> 0.49733373305642764, t -> 0.9416324302932133}, {u_1 -> 0.5014384153000225, u_0 -> 0.49721377508426223, t -> 0.9666324302932133}, {u_1 -> 0.501633143426393, u_0 -> 0.4970805849656037, t -> 0.9916324302932134}, {u_1 -> 0.5018392271709827, u_0 -> 0.49693322830591313, t -> 1.0166324302932135}, {u_1 -> 0.5020577160116757, u_0 -> 0.49677078209273823, t -> 1.0416324302932134}, {u_1 -> 0.5022897668260117, u_0 -> 0.49659221053913744, t -> 1.0666324302932133}, {u_1 -> 0.5025363172436528, u_0 -> 0.496396713032396, t -> 1.0916324302932134}, {u_1 -> 0.5027989944845356, u_0 -> 0.4961827492771099, t -> 1.1166324302932136}, {u_1 -> 0.5030789680430366, u_0 -> 0.49594927058424265, t -> 1.1416324302932135}, {u_1 -> 0.5033777636913137, u_0 -> 0.49569485213881265, t -> 1.1666324302932134}, {u_1 -> 0.5036969922942393, u_0 -> 0.4954179780424512, t -> 1.1916324302932135}, {u_1 -> 0.5040383706103321, u_0 -> 0.4951170194495474, t -> 1.2166324302932137}, {u_1 -> 0.5044037476944929, u_0 -> 0.4947902143262299, t -> 1.2416324302932136}, {u_1 -> 0.504795101720921, u_0 -> 0.49443567387057286, t -> 1.2666324302932135}, {u_1 -> 0.5052145530247191, u_0 -> 0.4940513561583016, t -> 1.2916324302932136}, {u_1 -> 0.5056643669558155, u_0 -> 0.4936350695844155, t -> 1.3166324302932138}, {u_1 -> 0.506147030054826, u_0 -> 0.4931844035930733, t -> 1.3416324302932137}, {u_1 -> 0.5066651694526109, u_0 -> 0.4926968020016388, t -> 1.3666324302932136}, {u_1 -> 0.5072215574740613, u_0 -> 0.49216955881251273, t -> 1.3916324302932137}, {u_1 -> 0.5078192308295169, u_0 -> 0.4915997010112776, t -> 1.4166324302932138}, {u_1 -> 0.508461544721556, u_0 -> 0.49098393496453785, t -> 1.4416324302932138}, {u_1 -> 0.5091519786891919, u_0 -> 0.4903188387649152, t -> 1.4666324302932137}, {u_1 -> 0.5098942002407876, u_0 -> 0.48960079919684074, t -> 1.4916324302932138}, {u_1 -> 0.5106924872624439, u_0 -> 0.4888255931288565, t -> 1.516632430293214}, {u_1 -> 0.511551124137755, u_0 -> 0.4879889859606134, t -> 1.5416324302932138}, {u_1 -> 0.5124747483644313, u_0 -> 0.4870863881248371, t -> 1.5666324302932138}, {u_1 -> 0.5134683751053253, u_0 -> 0.48611283031133945, t -> 1.5916324302932139}, {u_1 -> 0.5145375141886628, u_0 -> 0.48506284718296905, t -> 1.616632430293214}, {u_1 -> 0.5156879596910476, u_0 -> 0.48393068666138506, t -> 1.641632430293214}, {u_1 -> 0.5169259202031413, u_0 -> 0.4827101804524062, t -> 1.6666324302932138}, {u_1 -> 0.5182580685144527, u_0 -> 0.48139469413235825, t -> 1.691632430293214}, {u_1 -> 0.5196915885049206, u_0 -> 0.47997708007260415, t -> 1.716632430293214}, {u_1 -> 0.521234175850668, u_0 -> 0.47844967784298387, t -> 1.741632430293214}, {u_1 -> 0.5228940851022007, u_0 -> 0.4768042669445037, t -> 1.766632430293214}, {u_1 -> 0.5246801098021939, u_0 -> 0.4750320861339173, t -> 1.7916324302932143}, {u_1 -> 0.5266015603401659, u_0 -> 0.4731238549887923, t -> 1.8166324302932142}, {u_1 -> 0.5286684063712518, u_0 -> 0.4710696331386908, t -> 1.841632430293214}, {u_1 -> 0.5308912592763743, u_0 -> 0.46885883728715416, t -> 1.866632430293214}, {u_1 -> 0.5332813557248164, u_0 -> 0.4664802576174627, t -> 1.8916324302932144}, {u_1 -> 0.5358505339245822, u_0 -> 0.4639220815023529, t -> 1.9166324302932143}, {u_1 -> 0.5386113532038423, u_0 -> 0.4611717742404539, t -> 1.9416324302932142}, {u_1 -> 0.5415770783686382, u_0 -> 0.4582160946788999, t -> 1.966632430293214}, {u_1 -> 0.5447615600924215, u_0 -> 0.45504121480725357, t -> 1.9916324302932145}, {u_1 -> 0.5481790213928884, u_0 -> 0.4516329332077231, t -> 2.0166324302932144}, {u_1 -> 0.5518443743016189, u_0 -> 0.44797635864155794, t -> 2.0416324302932143}, {u_1 -> 0.555773016344445, u_0 -> 0.44405611354000063, t -> 2.066632430293214}, {u_1 -> 0.5599802467174501, u_0 -> 0.4398569177902633, t -> 2.0916324302932146}, {u_1 -> 0.5644817056365434, u_0 -> 0.43536314950767674, t -> 2.1166324302932145}, {u_1 -> 0.5692932312114606, u_0 -> 0.4305589881937094, t -> 2.1416324302932144}, {u_1 -> 0.5744299412596345, u_0 -> 0.42542933284156315, t -> 2.1666324302932143}, {u_1 -> 0.5799060613571719, u_0 -> 0.41995997391355455, t -> 2.1916324302932146}, {u_1 -> 0.5857348971539442, u_0 -> 0.4141376210787428, t -> 2.2166324302932146}, {u_1 -> 0.5919280645167427, u_0 -> 0.4079506730228687, t -> 2.2416324302932145}, {u_1 -> 0.5984954273174704, u_0 -> 0.4013892796977536, t -> 2.2666324302932144}, {u_1 -> 0.6054438989667561, u_0 -> 0.3944465406782122, t -> 2.2916324302932147}, {u_1 -> 0.6127771118163327, u_0 -> 0.387118835767552, t -> 2.3166324302932146}, {u_1 -> 0.6204949642931852, u_0 -> 0.37940627785234976, t -> 2.3416324302932146}, {u_1 -> 0.6285924823856549, u_0 -> 0.3713138513080594, t -> 2.3666324302932145}, {u_1 -> 0.6370596487713234, u_0 -> 0.362851582902766, t -> 2.391632430293215}, {u_1 -> 0.6458808166408765, u_0 -> 0.35403512791514236, t -> 2.4166324302932147}, {u_1 -> 0.6550340664294985, u_0 -> 0.3448864133703187, t -> 2.4416324302932146}, {u_1 -> 0.6644910351495442, u_0 -> 0.33543380871445905, t -> 2.4666324302932146}, {u_1 -> 0.6742175490831227, u_0 -> 0.3257114931939874, t -> 2.491632430293215}, {u_1 -> 0.6841732064019976, u_0 -> 0.31575987322334725, t -> 2.516632430293215}, {u_1 -> 0.6943124516385543, u_0 -> 0.3056245080435524, t -> 2.5416324302932147}, {u_1 -> 0.704584923271574, u_0 -> 0.2953557621870606, t -> 2.5666324302932146}, {u_1 -> 0.7149373180933533, u_0 -> 0.28500694131379656, t -> 2.591632430293215}, {u_1 -> 0.7253139254982907, u_0 -> 0.2746337579928668, t -> 2.616632430293215}, {u_1 -> 0.7356587254654928, u_0 -> 0.2642922339393585, t -> 2.641632430293215}, {u_1 -> 0.7459162589305084, u_0 -> 0.25403782973997313, t -> 2.6666324302932147}, {u_1 -> 0.7560334679724278, u_0 -> 0.24392360485072767, t -> 2.691632430293215}, {u_1 -> 0.7659605794521719, u_0 -> 0.23399933405313866, t -> 2.716632430293215}, {u_1 -> 0.7756523699508608, u_0 -> 0.22431024263750537, t -> 2.741632430293215}, {u_1 -> 0.7850687886486165, u_0 -> 0.2148963835904665, t -> 2.766632430293215}, {u_1 -> 0.7941755677010424, u_0 -> 0.20579202727488372, t -> 2.791632430293215}, {u_1 -> 0.8029445431038832, u_0 -> 0.19702534060132565, t -> 2.816632430293215}, {u_1 -> 0.8113532973256735, u_0 -> 0.1886187443591154, t -> 2.841632430293215}, {u_1 -> 0.8193854119374127, u_0 -> 0.1805886606168618, t -> 2.8666324302932154}, {u_1 -> 0.8270300791783549, u_0 -> 0.17294590112106872, t -> 2.8916324302932153}, {u_1 -> 0.8342814576946542, u_0 -> 0.16569631149909816, t -> 2.916632430293215}, {u_1 -> 0.8411382741329929, u_0 -> 0.15884116963121928, t -> 2.941632430293215}, {u_1 -> 0.8476032543602767, u_0 -> 0.15237775437970089, t -> 2.966632430293215}, {u_1 -> 0.8536825016564189, u_0 -> 0.14629996733942466, t -> 2.9916324302932154}, {u_1 -> 0.8593849692400042, u_0 -> 0.1405988602643874, t -> 3.0166324302932153}, {u_1 -> 0.8647219164931578, u_0 -> 0.13526317879295963, t -> 3.041632430293215}, {u_1 -> 0.8697064511608756, u_0 -> 0.13027982020624987, t -> 3.0666324302932155}, {u_1 -> 0.8743528685526794, u_0 -> 0.12563449416712982, t -> 3.0916324302932154}, {u_1 -> 0.8786764431491606, u_0 -> 0.12131193109338143, t -> 3.1166324302932154}, {u_1 -> 0.8826932660412729, u_0 -> 0.1172960447022575, t -> 3.1416324302932153}, {u_1 -> 0.8864196615576488, u_0 -> 0.113570515332503, t -> 3.166632430293215}, {u_1 -> 0.8898719805914281, u_0 -> 0.11011899660054907, t -> 3.1916324302932155}, {u_1 -> 0.8930664103406717, u_0 -> 0.10692530564296464, t -> 3.2166324302932154}, {u_1 -> 0.8960189399993339, u_0 -> 0.10397345742553071, t -> 3.2416324302932154}, {u_1 -> 0.8987450686792902, u_0 -> 0.10124795679688055, t -> 3.2666324302932157}, {u_1 -> 0.901259826334167, u_0 -> 0.09873377757151348, t -> 3.2916324302932156}, {u_1 -> 0.9035776004014554, u_0 -> 0.09641653587469805, t -> 3.3166324302932155}, {u_1 -> 0.9057121692071093, u_0 -> 0.09428245674746631, t -> 3.3416324302932154}, {u_1 -> 0.9076765935558966, u_0 -> 0.09231848254975376, t -> 3.3666324302932154}, {u_1 -> 0.9094832740140258, u_0 -> 0.09051221568998932, t -> 3.3916324302932157}, {u_1 -> 0.9111438778856186, u_0 -> 0.08885199164644307, t -> 3.4166324302932156}, {u_1 -> 0.9126693973279975, u_0 -> 0.08732682086439365, t -> 3.4416324302932155}, {u_1 -> 0.9140701176583612, u_0 -> 0.08592642045155324, t -> 3.466632430293216}, {u_1 -> 0.9153556730926783, u_0 -> 0.08464115845112805, t -> 3.491632430293216}, {u_1 -> 0.9165350388682999, u_0 -> 0.08346206172392549, t -> 3.5166324302932157}, {u_1 -> 0.9176165826503161, u_0 -> 0.08238076455297638, t -> 3.5416324302932156}, {u_1 -> 0.9186080751340985, u_0 -> 0.0813894980475538, t -> 3.5666324302932155}, {u_1 -> 0.9195167320944846, u_0 -> 0.08048104810348411, t -> 3.591632430293216}, {u_1 -> 0.920349225828967, u_0 -> 0.07964874396712036, t -> 3.616632430293216}, {u_1 -> 0.921111743025934, u_0 -> 0.07888640037609922, t -> 3.6416324302932157}, {u_1 -> 0.9218099999967585, u_0 -> 0.0781883023352656, t -> 3.666632430293216}, {u_1 -> 0.9224492717432355, u_0 -> 0.07754917605594845, t -> 3.691632430293216}, {u_1 -> 0.9230344240779751, u_0 -> 0.07696415684215085, t -> 3.716632430293216}, {u_1 -> 0.923569942864126, u_0 -> 0.07642875986001538, t -> 3.741632430293216}, {u_1 -> 0.9240599540900531, u_0 -> 0.07593886006612381, t -> 3.7666324302932157}, {u_1 -> 0.9245082575747678, u_0 -> 0.07549065851129845, t -> 3.791632430293216}, {u_1 -> 0.9249183472326911, u_0 -> 0.07508066208034875, t -> 3.816632430293216}, {u_1 -> 0.9252934299187564, u_0 -> 0.07470566465093627, t -> 3.841632430293216}, {u_1 -> 0.9256364584823854, u_0 -> 0.07436271404815852, t -> 3.8666324302932162}, {u_1 -> 0.9259501356178275, u_0 -> 0.074049108194526, t -> 3.891632430293216}, {u_1 -> 0.9262369461858828, u_0 -> 0.07376236279612036, t -> 3.916632430293216}, {u_1 -> 0.9264991673276385, u_0 -> 0.07350020123107508, t -> 3.941632430293216}, {u_1 -> 0.9267388819158016, u_0 -> 0.07326054110128223, t -> 3.966632430293216}, {u_1 -> 0.9269580129908671, u_0 -> 0.07304145980454631, t -> 3.9916324302932162}, {u_1 -> 0.9269580129908671, u_0 -> 0.07304145980454631, t -> 5}]
Xhat_0: ((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1) - (2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
Xhat_1: ((2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2)) - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
plot R vs. t
plot a vs. a
