ad bindings: {r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, c_2_0 -> e^(-3*u_2^2), w_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, K_1 -> 2, m_2 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, gamma -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_0_1 -> e^(-3*(u_0 - 1)^2), K_0 -> 2, m_1 -> 1, b_0 -> 1, b_1 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, m_3 -> 1, w_1 -> 1, r_0 -> 1, c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
model bindings: {R_0 -> -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1 -> -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0 -> -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1 -> -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}
_early_bindings: {c_0_1 -> c_1(u_0), c_0_0 -> c_0(u_0), c_1_0 -> c_0(u_1), m_0 -> m(u_0), m_1 -> m(u_1), b_0 -> b(u_0), c_2_0 -> c_0(u_2), b_2 -> b(u_2), c_1_1 -> c_1(u_1), b_1 -> b(u_1), m_2 -> m(u_2), c_2_1 -> c_1(u_2)}
_late_bindings: {c_0_1 -> e^(-3*(u_0 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, m_3 -> 1, m_1 -> 1, b_0 -> 1, c_2_0 -> e^(-3*u_2^2), w_1 -> 1, gamma -> 1, w_0 -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), b_1 -> 1, K_0 -> 2, r_0 -> 1, K_1 -> 2, m_2 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
make LV model
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
aij_dict: {a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1}
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
aij_dict: {a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1}
_A_bindings: {a_0_1 -> -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_0 -> -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_0 -> -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1 -> -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_0 -> K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, k_1 -> K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1}
make LV adaptive dynamics
population vars [X_1, X_0]
population vars [X_1, X_0]
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_0: a_1_0, a_2_1: a_1_1, k_2: k_1}
after those limits:
   1
  X_1
  X_0
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_0: a_0_0, a_2_1: a_0_1, k_2: k_0}
after those limits:
   1
  X_1
  X_0
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
Original pop-dyn system: 
\[\begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}
\end{align*}\]
Extended pop-dyn system: 
\[\begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*}\]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{2}\to k_{1},a_{21}\to a_{11},a_{20}\to a_{10},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{11}} = \lim_{k_{2}\to k_{1},a_{21}\to a_{11},a_{20}\to a_{10},X_{2}\to0}X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{10}} = \lim_{k_{2}\to k_{1},a_{21}\to a_{11},a_{20}\to a_{10},X_{2}\to0}X_{0} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{11}} = X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{10}} = X_{0} .
\end{align*}
 Original pop-dyn system: 
\[ \begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}
\end{align*} \]
 Extended pop-dyn system: 
\[ \begin{align*}
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*} \]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{2}\to k_{0},a_{21}\to a_{01},a_{20}\to a_{00},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{01}} = \lim_{k_{2}\to k_{0},a_{21}\to a_{01},a_{20}\to a_{00},X_{2}\to0}X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{00}} = \lim_{k_{2}\to k_{0},a_{21}\to a_{01},a_{20}\to a_{00},X_{2}\to0}X_{0} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{01}} = X_{1}\\
  \frac{\partial\mathscr I}{\partial a_{00}} = X_{0} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  a_{01}\\
  a_{10}\\
  a_{00}\\
  a_{11}\\
  k_{0}\\
  k_{1}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{1}\\
  \hat{X}_{0}\\
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  1\\
  1
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{1} &\to \hat{X}_{1} \\
  X_{0} &\to \hat{X}_{0}
\end{align*} \]
 The adaptive dynamics comes out to 
\[ \begin{align*}
\frac{da_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{da_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma
\end{align*} \]

make LV evolution bindings
printing things in LaTeX
plot k vs. t
plot a vs. t
plot X vs. t
[{t -> 0.0, u_0 -> 0.25}, {t -> 0.025, u_0 -> 0.2656624191609684}, {t -> 0.05, u_0 -> 0.28226857468826594}, {t -> 0.07500000000000001, u_0 -> 0.2998724805839155}, {t -> 0.1, u_0 -> 0.31845546337303626}, {t -> 0.125, u_0 -> 0.33787831700975796}, {t -> 0.15000000000000002, u_0 -> 0.357827161151234}, {t -> 0.17500000000000002, u_0 -> 0.37778695912227045}, {t -> 0.2, u_0 -> 0.39707944684124785}, {t -> 0.225, u_0 -> 0.4149928971417997}, {t -> 0.25, u_0 -> 0.43095493656803474}, {t -> 0.275, u_0 -> 0.44465707248856895}, {t -> 0.30000000000000004, u_0 -> 0.45606814713203486}, {t -> 0.325, u_0 -> 0.4653585625029541}, {t -> 0.35000000000000003, u_0 -> 0.4728048107485903}, {t -> 0.375, u_0 -> 0.47871009661126473}, {t -> 0.4, u_0 -> 0.4833626970971368}, {t -> 0.42500000000000004, u_0 -> 0.4870127109134322}, {t -> 0.45, u_0 -> 0.48986878415428714}, {t -> 0.47500000000000003, u_0 -> 0.49210001887470933}, {t -> 0.5, u_0 -> 0.4938414096579211}, {t -> 0.525, u_0 -> 0.49519966268924676}, {t -> 0.55, u_0 -> 0.4962587022793948}, {t -> 0.5750000000000001, u_0 -> 0.497084269297981}, {t -> 0.6000000000000001, u_0 -> 0.4977277443658527}, {t -> 0.625, u_0 -> 0.4982292457690847}, {t -> 0.65, u_0 -> 0.49862007951586373}, {t -> 0.675, u_0 -> 0.498924622904051}, {t -> 0.7166324293392724, u_1 -> 0.499924622904051, u_0 -> 0.497924622904051}, {t -> 0.7416324293392724, u_1 -> 0.5000514524044426, u_0 -> 0.49789603227295637}, {t -> 0.7666324293392724, u_1 -> 0.5001820408490615, u_0 -> 0.49785919011339475}, {t -> 0.7916324293392725, u_1 -> 0.5003170602020971, u_0 -> 0.4978136565957338}, {t -> 0.8166324293392725, u_1 -> 0.5004569153912841, u_0 -> 0.49775915900549855}, {t -> 0.8416324293392725, u_1 -> 0.5006025213694691, u_0 -> 0.4976950562658642}, {t -> 0.8666324293392725, u_1 -> 0.5007541149454647, u_0 -> 0.49762114977851873}, {t -> 0.8916324293392726, u_1 -> 0.5009126566082143, u_0 -> 0.49753672513143576}, {t -> 0.9166324293392726, u_1 -> 0.5010790042953003, u_0 -> 0.49744115034871067}, {t -> 0.9416324293392726, u_1 -> 0.5012539831803123, u_0 -> 0.4973337330310025}, {t -> 0.9666324293392726, u_1 -> 0.5014384153337882, u_0 -> 0.4972137750563132}, {t -> 0.9916324293392726, u_1 -> 0.5016331434657061, u_0 -> 0.4970805849313223}, {t -> 1.0166324293392726, u_1 -> 0.5018392272079382, u_0 -> 0.49693322827428354}, {t -> 1.0416324293392727, u_1 -> 0.5020577160531623, u_0 -> 0.4967707820563525}, {t -> 1.0666324293392728, u_1 -> 0.5022897668899678, u_0 -> 0.4965922104787405}, {t -> 1.0916324293392727, u_1 -> 0.5025363172927323, u_0 -> 0.4963967129878742}, {t -> 1.1166324293392726, u_1 -> 0.502798994536322, u_0 -> 0.496182749229788}, {t -> 1.1416324293392728, u_1 -> 0.503078968105651, u_0 -> 0.4959492705253906}, {t -> 1.166632429339273, u_1 -> 0.503377763758972, u_0 -> 0.4956948520744752}, {t -> 1.1916324293392728, u_1 -> 0.5036969923673515, u_0 -> 0.49541797797237225}, {t -> 1.2166324293392727, u_1 -> 0.5040383706883718, u_0 -> 0.4951170193747248}, {t -> 1.2416324293392729, u_1 -> 0.5044037477776872, u_0 -> 0.49479021424599207}, {t -> 1.266632429339273, u_1 -> 0.5047951018092087, u_0 -> 0.4944356737849982}, {t -> 1.291632429339273, u_1 -> 0.5052145531190643, u_0 -> 0.49405135606661266}, {t -> 1.3166324293392728, u_1 -> 0.5056643670565569, u_0 -> 0.49363506948637165}, {t -> 1.341632429339273, u_1 -> 0.5061470301604684, u_0 -> 0.49318440348998577}, {t -> 1.366632429339273, u_1 -> 0.5066651695656536, u_0 -> 0.4926968018910215}, {t -> 1.391632429339273, u_1 -> 0.5072215575997081, u_0 -> 0.49216955868920664}, {t -> 1.416632429339273, u_1 -> 0.5078192309624857, u_0 -> 0.4915997008805153}, {t -> 1.441632429339273, u_1 -> 0.5084615448625102, u_0 -> 0.49098393482566005}, {t -> 1.4666324293392732, u_1 -> 0.5091519788421676, u_0 -> 0.4903188386139246}, {t -> 1.491632429339273, u_1 -> 0.5098942004048843, u_0 -> 0.4896007990346384}, {t -> 1.516632429339273, u_1 -> 0.5106924874381484, u_0 -> 0.48882559295495437}, {t -> 1.5416324293392731, u_1 -> 0.5115511243263658, u_0 -> 0.4879889857737168}, {t -> 1.5666324293392733, u_1 -> 0.51247474857178, u_0 -> 0.48708638791914904}, {t -> 1.5916324293392732, u_1 -> 0.5134683753282694, u_0 -> 0.4861128300899882}, {t -> 1.616632429339273, u_1 -> 0.5145375144284681, u_0 -> 0.4850628469446934}, {t -> 1.6416324293392732, u_1 -> 0.51568795995028, u_0 -> 0.48393068640362275}, {t -> 1.6666324293392734, u_1 -> 0.516925920484468, u_0 -> 0.4827101801724804}, {t -> 1.6916324293392733, u_1 -> 0.5182580688188119, u_0 -> 0.48139469382935124}, {t -> 1.7166324293392732, u_1 -> 0.5196915888332165, u_0 -> 0.4799770797456165}, {t -> 1.741632429339273, u_1 -> 0.5212341762032706, u_0 -> 0.4784496774916338}, {t -> 1.7666324293392734, u_1 -> 0.5228940854787728, u_0 -> 0.47680426656909985}, {t -> 1.7916324293392734, u_1 -> 0.5246801102067337, u_0 -> 0.47503208573048705}, {t -> 1.8166324293392733, u_1 -> 0.5266015607750801, u_0 -> 0.4731238545549396}, {t -> 1.8416324293392732, u_1 -> 0.5286684068383967, u_0 -> 0.4710696326725613}, {t -> 1.8666324293392735, u_1 -> 0.5308912597775889, u_0 -> 0.46885883678690826}, {t -> 1.8916324293392734, u_1 -> 0.5332813562653399, u_0 -> 0.46648025707786783}, {t -> 1.9166324293392734, u_1 -> 0.5358505345072527, u_0 -> 0.463922080920575}, {t -> 1.9416324293392733, u_1 -> 0.5386113538295408, u_0 -> 0.46117177361561285}, {t -> 1.9666324293392736, u_1 -> 0.5415770790360305, u_0 -> 0.45821609401232777}, {t -> 1.9916324293392735, u_1 -> 0.5447615608104179, u_0 -> 0.45504121409004367}, {t -> 2.0166324293392734, u_1 -> 0.5481790221668239, u_0 -> 0.4516329324345438}, {t -> 2.0416324293392734, u_1 -> 0.5518443751309651, u_0 -> 0.44797635781293893}, {t -> 2.0666324293392737, u_1 -> 0.5557730172326013, u_0 -> 0.44405611265254386}, {t -> 2.0916324293392736, u_1 -> 0.559980247674799, u_0 -> 0.4398569168335891}, {t -> 2.1166324293392735, u_1 -> 0.564481706662004, u_0 -> 0.4353631484828672}, {t -> 2.1416324293392734, u_1 -> 0.5692932322982297, u_0 -> 0.430558987107568}, {t -> 2.166632429339274, u_1 -> 0.5744299424192874, u_0 -> 0.4254293316825173}, {t -> 2.1916324293392737, u_1 -> 0.5799060625926539, u_0 -> 0.41995997267866036}, {t -> 2.2166324293392736, u_1 -> 0.585734898470475, u_0 -> 0.41413761976278246}, {t -> 2.2416324293392735, u_1 -> 0.591928065917122, u_0 -> 0.40795067162304394}, {t -> 2.266632429339274, u_1 -> 0.5984954287977671, u_0 -> 0.40138927821799625}, {t -> 2.291632429339274, u_1 -> 0.6054439005340148, u_0 -> 0.39444653911147953}, {t -> 2.3166324293392737, u_1 -> 0.612777113467942, u_0 -> 0.3871188341164562}, {t -> 2.3416324293392736, u_1 -> 0.6204949660283424, u_0 -> 0.3794062761176944}, {t -> 2.366632429339274, u_1 -> 0.6285924842045725, u_0 -> 0.3713138494896332}, {t -> 2.391632429339274, u_1 -> 0.6370596506695941, u_0 -> 0.36285158100497655}, {t -> 2.416632429339274, u_1 -> 0.6458808186129552, u_0 -> 0.35403512594353564}, {t -> 2.4416324293392737, u_1 -> 0.6550340684739206, u_0 -> 0.34488641132635983}, {t -> 2.466632429339274, u_1 -> 0.664491037256715, u_0 -> 0.3354338066077426}, {t -> 2.491632429339274, u_1 -> 0.6742175512449771, u_0 -> 0.32571149103257846}, {t -> 2.516632429339274, u_1 -> 0.6841732086072556, u_0 -> 0.3157598710185255}, {t -> 2.541632429339274, u_1 -> 0.6943124538791364, u_0 -> 0.3056245058033973}, {t -> 2.566632429339274, u_1 -> 0.704584925533939, u_0 -> 0.29535575992511315}, {t -> 2.591632429339274, u_1 -> 0.7149373203669894, u_0 -> 0.28500693904056795}, {t -> 2.616632429339274, u_1 -> 0.7253139277700373, u_0 -> 0.2746337557215169}, {t -> 2.641632429339274, u_1 -> 0.7356587277236671, u_0 -> 0.2642922316815698}, {t -> 2.6666324293392742, u_1 -> 0.7459162611635703, u_0 -> 0.254037827507285}, {t -> 2.691632429339274, u_1 -> 0.7560334701690278, u_0 -> 0.24392360265448934}, {t -> 2.716632429339274, u_1 -> 0.7659605816024043, u_0 -> 0.23399933190325498}, {t -> 2.741632429339274, u_1 -> 0.7756523720456122, u_0 -> 0.2243102405430894}, {t -> 2.766632429339274, u_1 -> 0.7850687906793536, u_0 -> 0.21489638156005103}, {t -> 2.7916324293392742, u_1 -> 0.7941755696620943, u_0 -> 0.20579202531413937}, {t -> 2.816632429339274, u_1 -> 0.8029445449875673, u_0 -> 0.19702533871793496}, {t -> 2.841632429339274, u_1 -> 0.8113532991280902, u_0 -> 0.18861874255697764}, {t -> 2.8666324293392744, u_1 -> 0.8193854136562695, u_0 -> 0.18058865889826953}, {t -> 2.8916324293392743, u_1 -> 0.8270300808112832, u_0 -> 0.17294589948839084}, {t -> 2.9166324293392742, u_1 -> 0.8342814592411127, u_0 -> 0.1656963099528759}, {t -> 2.941632429339274, u_1 -> 0.8411382755930965, u_0 -> 0.15884116817133806}, {t -> 2.966632429339274, u_1 -> 0.8476032557350267, u_0 -> 0.1523777530051598}, {t -> 2.9916324293392744, u_1 -> 0.8536825029475069, u_0 -> 0.1462999660485326}, {t -> 3.0166324293392743, u_1 -> 0.8593849704496391, u_0 -> 0.14059885905493588}, {t -> 3.0416324293392742, u_1 -> 0.8647219176240915, u_0 -> 0.13526317766219742}, {t -> 3.0666324293392746, u_1 -> 0.8697064522154111, u_0 -> 0.13027981915187425}, {t -> 3.0916324293392745, u_1 -> 0.8743528695325172, u_0 -> 0.1256344931874405}, {t -> 3.1166324293392744, u_1 -> 0.8786764440606228, u_0 -> 0.12131193018205726}, {t -> 3.1416324293392743, u_1 -> 0.8826932668881017, u_0 -> 0.11729604385555682}, {t -> 3.1666324293392742, u_1 -> 0.886419662343179, u_0 -> 0.11357051454709156}, {t -> 3.1916324293392746, u_1 -> 0.8898719813178723, u_0 -> 0.11011899587421492}, {t -> 3.2166324293392745, u_1 -> 0.8930664110127862, u_0 -> 0.10692530497095203}, {t -> 3.2416324293392744, u_1 -> 0.8960189406199085, u_0 -> 0.10397345680505031}, {t -> 3.266632429339275, u_1 -> 0.898745069252318, u_0 -> 0.10124795622393962}, {t -> 3.2916324293392747, u_1 -> 0.9012598268623401, u_0 -> 0.09873377704342055}, {t -> 3.3166324293392746, u_1 -> 0.9035776008882767, u_0 -> 0.09641653538795056}, {t -> 3.3416324293392745, u_1 -> 0.9057121696550637, u_0 -> 0.09428245629957975}, {t -> 3.3666324293392744, u_1 -> 0.9076765939681534, u_0 -> 0.09231848213755953}, {t -> 3.391632429339275, u_1 -> 0.9094832743929548, u_0 -> 0.09051221531111787}, {t -> 3.4166324293392747, u_1 -> 0.9111438782339121, u_0 -> 0.0888519912982025}, {t -> 3.4416324293392746, u_1 -> 0.9126693976478023, u_0 -> 0.08732682054463728}, {t -> 3.466632429339275, u_1 -> 0.9140701179519938, u_0 -> 0.08592642015796538}, {t -> 3.491632429339275, u_1 -> 0.9153556733620657, u_0 -> 0.08464115818178164}, {t -> 3.516632429339275, u_1 -> 0.9165350391154196, u_0 -> 0.08346206147684339}, {t -> 3.5416324293392747, u_1 -> 0.9176165828768783, u_0 -> 0.08238076432644854}, {t -> 3.5666324293392746, u_1 -> 0.9186080753418233, u_0 -> 0.08138949783986048}, {t -> 3.591632429339275, u_1 -> 0.9195167322848429, u_0 -> 0.08048104791315469}, {t -> 3.616632429339275, u_1 -> 0.9203492260032768, u_0 -> 0.07964874379283722}, {t -> 3.641632429339275, u_1 -> 0.9211117431855801, u_0 -> 0.07888640021647755}, {t -> 3.666632429339275, u_1 -> 0.9218100001429381, u_0 -> 0.07818830218910848}, {t -> 3.691632429339275, u_1 -> 0.9224492718770443, u_0 -> 0.07754917592216028}, {t -> 3.716632429339275, u_1 -> 0.9230344242004569, u_0 -> 0.07696415671968794}, {t -> 3.741632429339275, u_1 -> 0.9235699429762239, u_0 -> 0.07642875974793474}, {t -> 3.766632429339275, u_1 -> 0.9240599541925983, u_0 -> 0.07593885996359435}, {t -> 3.791632429339275, u_1 -> 0.9245082576686234, u_0 -> 0.07549065841745731}, {t -> 3.816632429339275, u_1 -> 0.9249183473185026, u_0 -> 0.07508066199455048}, {t -> 3.841632429339275, u_1 -> 0.9252934299972375, u_0 -> 0.07470566457246729}, {t -> 3.8666324293392753, u_1 -> 0.9256364585541866, u_0 -> 0.07436271397636839}, {t -> 3.8916324293392752, u_1 -> 0.925950135683448, u_0 -> 0.07404910812891555}, {t -> 3.916632429339275, u_1 -> 0.9262369462459423, u_0 -> 0.07376236273607009}, {t -> 3.941632429339275, u_1 -> 0.9264991673824234, u_0 -> 0.07350020117629873}, {t -> 3.966632429339275, u_1 -> 0.9267388819657997, u_0 -> 0.07326054105129191}, {t -> 3.9916324293392753, u_1 -> 0.9269580130367224, u_0 -> 0.07304145975869819}, {t -> 5, u_1 -> 0.9269580130367224, u_0 -> 0.07304145975869819}]
Xhat_1: ((2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2)) - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
Xhat_0: ((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1) - (2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
plot R vs. t
plot a vs. a
