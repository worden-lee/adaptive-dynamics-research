ad bindings: {r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, R_0 -> -X_0*e^(-3*u_0^2) + 2, c_2_0 -> e^(-3*u_2^2), w_0 -> 1, Rhat_1 -> -Xhat_0*e^(-3*(u_0 - 1)^2) + 2, K_1 -> 2, m_2 -> 1, R_1 -> -X_0*e^(-3*(u_0 - 1)^2) + 2, gamma -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), c_0_1 -> e^(-3*(u_0 - 1)^2), K_0 -> 2, m_1 -> 1, b_0 -> 1, b_1 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), Rhat_0 -> -Xhat_0*e^(-3*u_0^2) + 2, m_3 -> 1, w_1 -> 1, r_0 -> 1, c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
model bindings: {R_0 -> -(X_0*c_0_0 + X_1*c_1_0 - K_0*r_0)/r_0, Rhat_1 -> -(Xhat_0*c_0_1 + Xhat_1*c_1_1 - K_1*r_1)/r_1, Rhat_0 -> -(Xhat_0*c_0_0 + Xhat_1*c_1_0 - K_0*r_0)/r_0, R_1 -> -(X_0*c_0_1 + X_1*c_1_1 - K_1*r_1)/r_1}
_early_bindings: {c_0_1 -> c_1(u_0), c_0_0 -> c_0(u_0), c_1_0 -> c_0(u_1), m_0 -> m(u_0), m_1 -> m(u_1), b_0 -> b(u_0), c_2_0 -> c_0(u_2), b_2 -> b(u_2), c_1_1 -> c_1(u_1), b_1 -> b(u_1), m_2 -> m(u_2), c_2_1 -> c_1(u_2)}
_late_bindings: {c_0_1 -> e^(-3*(u_0 - 1)^2), b_3 -> 1, c_0_0 -> e^(-3*u_0^2), r_1 -> 1, c_1_0 -> e^(-3*u_1^2), m_0 -> 1, m_3 -> 1, m_1 -> 1, b_0 -> 1, c_2_0 -> e^(-3*u_2^2), w_1 -> 1, gamma -> 1, w_0 -> 1, b_2 -> 1, c_1_1 -> e^(-3*(u_1 - 1)^2), b_1 -> 1, K_0 -> 2, r_0 -> 1, K_1 -> 2, m_2 -> 1, c_2_1 -> e^(-3*(u_2 - 1)^2), c_1(u_0) -> e^(-3*(u_0 - 1)^2), c_0(u_0) -> e^(-3*u_0^2), m() -> 1, b() -> 1}
make LV model
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
aij_dict: {a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0}
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
aij_dict: {a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0}
_A_bindings: {a_1_0 -> -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1 -> -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_1_1 -> -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_0 -> -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1 -> K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0 -> K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0}
make LV adaptive dynamics
population vars [X_0, X_1]
population vars [X_0, X_1]
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_0_1, a_2_0: a_0_0, k_2: k_0}
after those limits:
   1
  X_0
  X_1
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
Inferring LV coefficients from X_0 equation: K_0*X_0*b_0*c_0_0*w_0 - X_0^2*b_0*c_0_0^2*w_0/r_0 - X_0*X_1*b_0*c_0_0*c_1_0*w_0/r_0 - X_0*X_2*b_0*c_0_0*c_2_0*w_0/r_0 + K_1*X_0*b_0*c_0_1*w_1 - X_0^2*b_0*c_0_1^2*w_1/r_1 - X_0*X_1*b_0*c_0_1*c_1_1*w_1/r_1 - X_0*X_2*b_0*c_0_1*c_2_1*w_1/r_1 - X_0*b_0*m_0
a_0_1 : -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1
a_0_2 : -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1
k_0 : K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0
Inferring LV coefficients from X_1 equation: K_0*X_1*b_1*c_1_0*w_0 - X_0*X_1*b_1*c_0_0*c_1_0*w_0/r_0 - X_1^2*b_1*c_1_0^2*w_0/r_0 - X_1*X_2*b_1*c_1_0*c_2_0*w_0/r_0 + K_1*X_1*b_1*c_1_1*w_1 - X_0*X_1*b_1*c_0_1*c_1_1*w_1/r_1 - X_1^2*b_1*c_1_1^2*w_1/r_1 - X_1*X_2*b_1*c_1_1*c_2_1*w_1/r_1 - X_1*b_1*m_1
a_1_0 : -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1
a_1_2 : -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1
k_1 : K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1
Inferring LV coefficients from X_2 equation: K_0*X_2*b_2*c_2_0*w_0 - X_0*X_2*b_2*c_0_0*c_2_0*w_0/r_0 - X_1*X_2*b_2*c_1_0*c_2_0*w_0/r_0 - X_2^2*b_2*c_2_0^2*w_0/r_0 + K_1*X_2*b_2*c_2_1*w_1 - X_0*X_2*b_2*c_0_1*c_2_1*w_1/r_1 - X_1*X_2*b_2*c_1_1*c_2_1*w_1/r_1 - X_2^2*b_2*c_2_1^2*w_1/r_1 - X_2*b_2*m_2
a_2_0 : -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1
a_2_1 : -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1
k_2 : K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2
aij_dict: {k_2: K_0*b_2*c_2_0*w_0 + K_1*b_2*c_2_1*w_1 - b_2*m_2, a_1_0: -b_1*c_0_0*c_1_0*w_0/r_0 - b_1*c_0_1*c_1_1*w_1/r_1, a_0_1: -b_0*c_0_0*c_1_0*w_0/r_0 - b_0*c_0_1*c_1_1*w_1/r_1, a_2_1: -b_2*c_1_0*c_2_0*w_0/r_0 - b_2*c_1_1*c_2_1*w_1/r_1, a_1_1: -b_1*c_1_0^2*w_0/r_0 - b_1*c_1_1^2*w_1/r_1, a_0_0: -b_0*c_0_0^2*w_0/r_0 - b_0*c_0_1^2*w_1/r_1, k_1: K_0*b_1*c_1_0*w_0 + K_1*b_1*c_1_1*w_1 - b_1*m_1, k_0: K_0*b_0*c_0_0*w_0 + K_1*b_0*c_0_1*w_1 - b_0*m_0, a_1_2: -b_1*c_1_0*c_2_0*w_0/r_0 - b_1*c_1_1*c_2_1*w_1/r_1, a_2_2: -b_2*c_2_0^2*w_0/r_0 - b_2*c_2_1^2*w_1/r_1, a_0_2: -b_0*c_0_0*c_2_0*w_0/r_0 - b_0*c_0_1*c_2_1*w_1/r_1, a_2_0: -b_2*c_0_0*c_2_0*w_0/r_0 - b_2*c_0_1*c_2_1*w_1/r_1}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}

limit as {a_2_1: a_1_1, a_2_0: a_1_0, k_2: k_1}
after those limits:
   1
  X_0
  X_1
                                       1
limit as                                  _SAGE_VAR_X_2 -> 0
 -->                                        1
Original pop-dyn system: 
\[\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}
\end{align*}\]
Extended pop-dyn system: 
\[\begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*}\]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = \lim_{k_{2}\to k_{0},a_{20}\to a_{00},a_{21}\to a_{01},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{00}} = \lim_{k_{2}\to k_{0},a_{20}\to a_{00},a_{21}\to a_{01},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{01}} = \lim_{k_{2}\to k_{0},a_{20}\to a_{00},a_{21}\to a_{01},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{0}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{00}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{01}} = X_{1} .
\end{align*}
 Original pop-dyn system: 
\[ \begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + k_{1}\right)} X_{1}
\end{align*} \]
 Extended pop-dyn system: 
\[ \begin{align*}
\frac{dX_{0}}{dt} &= {\left(X_{0} a_{00} + X_{1} a_{01} + X_{2} a_{02} + k_{0}\right)} X_{0}\\
\frac{dX_{1}}{dt} &= {\left(X_{0} a_{10} + X_{1} a_{11} + X_{2} a_{12} + k_{1}\right)} X_{1}\\
\frac{dX_{2}}{dt} &= {\left(X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2}\right)} X_{2}
\end{align*} \]
 The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{2}}\frac{dX_{2}}{dt} &= X_{0} a_{20} + X_{1} a_{21} + X_{2} a_{22} + k_{2} 
\end{align*}
 And the invasion exponent is
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = \lim_{k_{2}\to k_{1},a_{20}\to a_{10},a_{21}\to a_{11},X_{2}\to0}1\\
  \frac{\partial\mathscr I}{\partial a_{10}} = \lim_{k_{2}\to k_{1},a_{20}\to a_{10},a_{21}\to a_{11},X_{2}\to0}X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{11}} = \lim_{k_{2}\to k_{1},a_{20}\to a_{10},a_{21}\to a_{11},X_{2}\to0}X_{1} .
\end{align*}
 Which comes out to
\begin{align*}
  \frac{\partial\mathscr I}{\partial k_{1}} = 1\\
  \frac{\partial\mathscr I}{\partial a_{10}} = X_{0}\\
  \frac{\partial\mathscr I}{\partial a_{11}} = X_{1} .
\end{align*}
 \[ \mathbf S \left(\begin{array}{c}
  a_{10}\\
  a_{01}\\
  a_{11}\\
  a_{00}\\
  k_{1}\\
  k_{0}
\end{array}\right) = \left(\begin{array}{c}
  \hat{X}_{0}\\
  \hat{X}_{1}\\
  \hat{X}_{1}\\
  \hat{X}_{0}\\
  1\\
  1
\end{array}\right) \]
 Equilibrium of the population dynamics: 
\[ \begin{align*}
  X_{1} &\to \hat{X}_{1} \\
  X_{0} &\to \hat{X}_{0}
\end{align*} \]
 The adaptive dynamics comes out to 
\[ \begin{align*}
\frac{da_{10}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{01}}{dt} &= \hat{X}_{0} \hat{X}_{1} \gamma\\
\frac{da_{11}}{dt} &= \hat{X}_{1}^{2} \gamma\\
\frac{da_{00}}{dt} &= \hat{X}_{0}^{2} \gamma\\
\frac{dk_{1}}{dt} &= \hat{X}_{1} \gamma\\
\frac{dk_{0}}{dt} &= \hat{X}_{0} \gamma
\end{align*} \]

make LV evolution bindings
hack A_ij: from (k_0(u_0), a_0_0(u_0, u_0), a_0_1(u_0, u_1))
to (k_0(u_0), a_0_0(u_0, u_x), a_0_1(u_0, u_1))
d1A: derivative of $\left(k_{0}\left(u_{0}\right),\,a_{0_{0}}\left(u_{0}, u_{x}\right),\,a_{0_{1}}\left(u_{0}, u_{1}\right)\right)$ wrt $\left(\begin{array}{c}
  u_{0}
\end{array}\right)$
is $\left(\begin{array}{r}
D[0]\left(k_{0}\right)\left(u_{0}\right) \\
D[0]\left(a_{0_{0}}\right)\left(u_{0}, u_{x}\right) \\
D[0]\left(a_{0_{1}}\right)\left(u_{0}, u_{1}\right)
\end{array}\right)$
; $\left(\begin{array}{r}
D[0]\left(k_{0}\right)\left(u_{0}\right) \\
D[0]\left(a_{0_{0}}\right)\left(u_{0}, u_{0}\right) \\
D[0]\left(a_{0_{1}}\right)\left(u_{0}, u_{1}\right)
\end{array}\right)$
: $\left(\begin{array}{r}
-12 \, {\left(u_{0} - 1\right)} e^{\left(-3 \, {\left(u_{0} - 1\right)}^{2}\right)} - 12 \, u_{0} e^{\left(-3 \, u_{0}^{2}\right)} \\
0 \\
6 \, {\left(u_{0} - 1\right)} e^{\left(-3 \, {\left(u_{0} - 1\right)}^{2} - 3 \, {\left(u_{1} - 1\right)}^{2}\right)} + 6 \, u_{0} e^{\left(-3 \, u_{0}^{2} - 3 \, u_{1}^{2}\right)}
\end{array}\right)$
S: (1, Xhat_0, Xhat_1)
hack A_ij: from (k_1(u_1), a_1_0(u_1, u_0), a_1_1(u_1, u_1))
to (k_1(u_1), a_1_0(u_1, u_0), a_1_1(u_1, u_x))
d1A: derivative of $\left(k_{1}\left(u_{1}\right),\,a_{1_{0}}\left(u_{1}, u_{0}\right),\,a_{1_{1}}\left(u_{1}, u_{x}\right)\right)$ wrt $\left(\begin{array}{c}
  u_{1}
\end{array}\right)$
is $\left(\begin{array}{r}
D[0]\left(k_{1}\right)\left(u_{1}\right) \\
D[0]\left(a_{1_{0}}\right)\left(u_{1}, u_{0}\right) \\
D[0]\left(a_{1_{1}}\right)\left(u_{1}, u_{x}\right)
\end{array}\right)$
; $\left(\begin{array}{r}
D[0]\left(k_{1}\right)\left(u_{1}\right) \\
D[0]\left(a_{1_{0}}\right)\left(u_{1}, u_{0}\right) \\
D[0]\left(a_{1_{1}}\right)\left(u_{1}, u_{1}\right)
\end{array}\right)$
: $\left(\begin{array}{r}
-12 \, {\left(u_{1} - 1\right)} e^{\left(-3 \, {\left(u_{1} - 1\right)}^{2}\right)} - 12 \, u_{1} e^{\left(-3 \, u_{1}^{2}\right)} \\
6 \, {\left(u_{1} - 1\right)} e^{\left(-3 \, {\left(u_{0} - 1\right)}^{2} - 3 \, {\left(u_{1} - 1\right)}^{2}\right)} + 6 \, u_{1} e^{\left(-3 \, u_{0}^{2} - 3 \, u_{1}^{2}\right)} \\
0
\end{array}\right)$
S: (1, Xhat_0, Xhat_1)
dudts: {0: (6*((u_0 - 1)*e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + u_0*e^(-3*u_0^2 - 3*u_1^2))*Xhat_0*Xhat_1*gamma - 12*((u_0 - 1)*e^(-3*(u_0 - 1)^2) + u_0*e^(-3*u_0^2))*Xhat_0*gamma), 1: (6*((u_1 - 1)*e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + u_1*e^(-3*u_0^2 - 3*u_1^2))*Xhat_0*Xhat_1*gamma - 12*((u_1 - 1)*e^(-3*(u_1 - 1)^2) + u_1*e^(-3*u_1^2))*Xhat_1*gamma)}
printing things in LaTeX
S: (1, Xhat_0, Xhat_1)
S: (1, Xhat_0, Xhat_1)
hack A_ij: from (k_0(u_0), a_0_0(u_0, u_0), a_0_1(u_0, u_1))
to (k_0(u_0), a_0_0(u_0, u_x), a_0_1(u_0, u_1))
d1A: derivative of $\left(k_{0}\left(u_{0}\right),\,a_{0_{0}}\left(u_{0}, u_{x}\right),\,a_{0_{1}}\left(u_{0}, u_{1}\right)\right)$ wrt $\left(\begin{array}{c}
  u_{0}
\end{array}\right)$
is $\left(\begin{array}{r}
D[0]\left(k_{0}\right)\left(u_{0}\right) \\
D[0]\left(a_{0_{0}}\right)\left(u_{0}, u_{x}\right) \\
D[0]\left(a_{0_{1}}\right)\left(u_{0}, u_{1}\right)
\end{array}\right)$
; $\left(\begin{array}{r}
D[0]\left(k_{0}\right)\left(u_{0}\right) \\
D[0]\left(a_{0_{0}}\right)\left(u_{0}, u_{0}\right) \\
D[0]\left(a_{0_{1}}\right)\left(u_{0}, u_{1}\right)
\end{array}\right)$
: $\left(\begin{array}{r}
-12 \, {\left(u_{0} - 1\right)} e^{\left(-3 \, {\left(u_{0} - 1\right)}^{2}\right)} - 12 \, u_{0} e^{\left(-3 \, u_{0}^{2}\right)} \\
0 \\
6 \, {\left(u_{0} - 1\right)} e^{\left(-3 \, {\left(u_{0} - 1\right)}^{2} - 3 \, {\left(u_{1} - 1\right)}^{2}\right)} + 6 \, u_{0} e^{\left(-3 \, u_{0}^{2} - 3 \, u_{1}^{2}\right)}
\end{array}\right)$
plot k vs. t
plot a vs. t
plot X vs. t
[{t -> 0.0, u_0 -> 0.25}, {t -> 0.025, u_0 -> 0.2656624191609684}, {t -> 0.05, u_0 -> 0.28226857468826594}, {t -> 0.07500000000000001, u_0 -> 0.2998724805839155}, {t -> 0.1, u_0 -> 0.31845546337303626}, {t -> 0.125, u_0 -> 0.33787831700975796}, {t -> 0.15000000000000002, u_0 -> 0.357827161151234}, {t -> 0.17500000000000002, u_0 -> 0.37778695912227045}, {t -> 0.2, u_0 -> 0.39707944684124785}, {t -> 0.225, u_0 -> 0.4149928971417997}, {t -> 0.25, u_0 -> 0.43095493656803474}, {t -> 0.275, u_0 -> 0.44465707248856895}, {t -> 0.30000000000000004, u_0 -> 0.45606814713203486}, {t -> 0.325, u_0 -> 0.4653585625029541}, {t -> 0.35000000000000003, u_0 -> 0.4728048107485903}, {t -> 0.375, u_0 -> 0.47871009661126473}, {t -> 0.4, u_0 -> 0.4833626970971368}, {t -> 0.42500000000000004, u_0 -> 0.4870127109134322}, {t -> 0.45, u_0 -> 0.48986878415428714}, {t -> 0.47500000000000003, u_0 -> 0.49210001887470933}, {t -> 0.5, u_0 -> 0.4938414096579211}, {t -> 0.525, u_0 -> 0.49519966268924676}, {t -> 0.55, u_0 -> 0.4962587022793948}, {t -> 0.5750000000000001, u_0 -> 0.497084269297981}, {t -> 0.6000000000000001, u_0 -> 0.4977277443658527}, {t -> 0.625, u_0 -> 0.4982292457690847}, {t -> 0.65, u_0 -> 0.49862007951586373}, {t -> 0.675, u_0 -> 0.498924622904051}, {t -> 0.7166324293392724, u_1 -> 0.499924622904051, u_0 -> 0.497924622904051}, {t -> 0.7416324293392724, u_1 -> 0.5000514524042806, u_0 -> 0.49789603227306206}, {t -> 0.7666324293392724, u_1 -> 0.5001820408487219, u_0 -> 0.49785919011361585}, {t -> 0.7916324293392725, u_1 -> 0.5003170602013706, u_0 -> 0.4978136565962413}, {t -> 0.8166324293392725, u_1 -> 0.5004569153915958, u_0 -> 0.4977591590052934}, {t -> 0.8416324293392725, u_1 -> 0.5006025213676909, u_0 -> 0.4976950562671834}, {t -> 0.8666324293392725, u_1 -> 0.5007541149433223, u_0 -> 0.49762114978004857}, {t -> 0.8916324293392726, u_1 -> 0.500912656606218, u_0 -> 0.497536725132916}, {t -> 0.9166324293392726, u_1 -> 0.5010790042936091, u_0 -> 0.4974411503501281}, {t -> 0.9416324293392726, u_1 -> 0.5012539831787551, u_0 -> 0.49733373303226985}, {t -> 0.9666324293392726, u_1 -> 0.5014384153321189, u_0 -> 0.4972137750577064}, {t -> 0.9916324293392726, u_1 -> 0.5016331434637574, u_0 -> 0.4970805849330331}, {t -> 1.0166324293392726, u_1 -> 0.5018392272061097, u_0 -> 0.49693322827585895}, {t -> 1.0416324293392727, u_1 -> 0.5020577160511053, u_0 -> 0.49677078205816827}, {t -> 1.0666324293392728, u_1 -> 0.5022897668867689, u_0 -> 0.4965922104817773}, {t -> 1.0916324293392727, u_1 -> 0.5025363172902949, u_0 -> 0.49639671299009924}, {t -> 1.1166324293392726, u_1 -> 0.5027989945337491, u_0 -> 0.4961827492321537}, {t -> 1.1416324293392728, u_1 -> 0.5030789681025296, u_0 -> 0.4959492705283402}, {t -> 1.166632429339273, u_1 -> 0.5033777637555985, u_0 -> 0.4956948520776988}, {t -> 1.1916324293392728, u_1 -> 0.5036969923637055, u_0 -> 0.4954179779758822}, {t -> 1.2166324293392727, u_1 -> 0.5040383706844805, u_0 -> 0.49511701937846947}, {t -> 1.2416324293392729, u_1 -> 0.5044037477735396, u_0 -> 0.49479021425000574}, {t -> 1.266632429339273, u_1 -> 0.5047951018048082, u_0 -> 0.49443567378927644}, {t -> 1.291632429339273, u_1 -> 0.5052145531143617, u_0 -> 0.49405135607119494}, {t -> 1.3166324293392728, u_1 -> 0.5056643670515357, u_0 -> 0.4936350694912693}, {t -> 1.341632429339273, u_1 -> 0.5061470301552061, u_0 -> 0.4931844034951308}, {t -> 1.366632429339273, u_1 -> 0.5066651695600215, u_0 -> 0.4926968018965421}, {t -> 1.391632429339273, u_1 -> 0.5072215575934385, u_0 -> 0.49216955869536866}, {t -> 1.416632429339273, u_1 -> 0.5078192309558548, u_0 -> 0.4915997008870453}, {t -> 1.441632429339273, u_1 -> 0.508461544855484, u_0 -> 0.49098393483259184}, {t -> 1.4666324293392732, u_1 -> 0.5091519788345371, u_0 -> 0.49031883862146514}, {t -> 1.491632429339273, u_1 -> 0.5098942003967016, u_0 -> 0.4896007990427355}, {t -> 1.516632429339273, u_1 -> 0.5106924874293871, u_0 -> 0.4888255929636345}, {t -> 1.5416324293392731, u_1 -> 0.5115511243169594, u_0 -> 0.487988985783046}, {t -> 1.5666324293392733, u_1 -> 0.5124747485614246, u_0 -> 0.4870863879294294}, {t -> 1.5916324293392732, u_1 -> 0.5134683753171371, u_0 -> 0.48611283010104844}, {t -> 1.616632429339273, u_1 -> 0.5145375144164966, u_0 -> 0.48506284695659535}, {t -> 1.6416324293392732, u_1 -> 0.5156879599373385, u_0 -> 0.4839306864164972}, {t -> 1.6666324293392734, u_1 -> 0.5169259204704186, u_0 -> 0.48271018018646583}, {t -> 1.6916324293392733, u_1 -> 0.5182580688036078, u_0 -> 0.48139469384449335}, {t -> 1.7166324293392732, u_1 -> 0.5196915888168143, u_0 -> 0.4799770797619587}, {t -> 1.741632429339273, u_1 -> 0.5212341761856555, u_0 -> 0.4784496775091917}, {t -> 1.7666324293392734, u_1 -> 0.5228940854599674, u_0 -> 0.4768042665878523}, {t -> 1.7916324293392734, u_1 -> 0.5246801101865328, u_0 -> 0.4750320857506378}, {t -> 1.8166324293392733, u_1 -> 0.5266015607533626, u_0 -> 0.47312385457660944}, {t -> 1.8416324293392732, u_1 -> 0.5286684068150709, u_0 -> 0.4710696326958416}, {t -> 1.8666324293392735, u_1 -> 0.5308912597525646, u_0 -> 0.46885883681188917}, {t -> 1.8916324293392734, u_1 -> 0.5332813562383486, u_0 -> 0.46648025710481733}, {t -> 1.9166324293392734, u_1 -> 0.5358505344781522, u_0 -> 0.4639220809496351}, {t -> 1.9416324293392733, u_1 -> 0.538611353798292, u_0 -> 0.46117177364682255}, {t -> 1.9666324293392736, u_1 -> 0.5415770790027109, u_0 -> 0.4582160940456097}, {t -> 1.9916324293392735, u_1 -> 0.5447615607745679, u_0 -> 0.45504121412585746}, {t -> 2.0166324293392734, u_1 -> 0.5481790221281716, u_0 -> 0.45163293247316133}, {t -> 2.0416324293392734, u_1 -> 0.5518443750895462, u_0 -> 0.4479763578543243}, {t -> 2.0666324293392737, u_1 -> 0.5557730171882466, u_0 -> 0.4440561126968666}, {t -> 2.0916324293392736, u_1 -> 0.5599802476269721, u_0 -> 0.4398569168813853}, {t -> 2.1166324293392735, u_1 -> 0.5644817066107696, u_0 -> 0.43536314853407204}, {t -> 2.1416324293392734, u_1 -> 0.5692932322439527, u_0 -> 0.4305589871618163}, {t -> 2.166632429339274, u_1 -> 0.57442994236137, u_0 -> 0.4254293317404067}, {t -> 2.1916324293392737, u_1 -> 0.5799060625309496, u_0 -> 0.41995997274033764}, {t -> 2.2166324293392736, u_1 -> 0.5857348984047166, u_0 -> 0.41413761982851455}, {t -> 2.2416324293392735, u_1 -> 0.5919280658471684, u_0 -> 0.4079506716929719}, {t -> 2.266632429339274, u_1 -> 0.5984954287238287, u_0 -> 0.4013892782919097}, {t -> 2.291632429339274, u_1 -> 0.6054439004557257, u_0 -> 0.39444653918974426}, {t -> 2.3166324293392737, u_1 -> 0.6127771133854397, u_0 -> 0.3871188341989345}, {t -> 2.3416324293392736, u_1 -> 0.6204949659416681, u_0 -> 0.37940627620434547}, {t -> 2.366632429339274, u_1 -> 0.6285924841137109, u_0 -> 0.371313849580472}, {t -> 2.391632429339274, u_1 -> 0.6370596505747693, u_0 -> 0.362851581099779}, {t -> 2.416632429339274, u_1 -> 0.6458808185144475, u_0 -> 0.3540351260420213}, {t -> 2.4416324293392737, u_1 -> 0.6550340683717937, u_0 -> 0.3448864114284649}, {t -> 2.466632429339274, u_1 -> 0.6644910371514547, u_0 -> 0.3354338067129815}, {t -> 2.491632429339274, u_1 -> 0.6742175511369859, u_0 -> 0.32571149114054876}, {t -> 2.516632429339274, u_1 -> 0.6841732084971013, u_0 -> 0.3157598711286595}, {t -> 2.541632429339274, u_1 -> 0.6943124537672166, u_0 -> 0.30562450591529716}, {t -> 2.566632429339274, u_1 -> 0.7045849254209353, u_0 -> 0.2953557600380974}, {t -> 2.591632429339274, u_1 -> 0.7149373202534232, u_0 -> 0.2850069391541151}, {t -> 2.616632429339274, u_1 -> 0.7253139276565681, u_0 -> 0.27463375583496763}, {t -> 2.641632429339274, u_1 -> 0.7356587276108768, u_0 -> 0.264292231794342}, {t -> 2.6666324293392742, u_1 -> 0.7459162610520346, u_0 -> 0.2540378276188033}, {t -> 2.691632429339274, u_1 -> 0.7560334700593133, u_0 -> 0.2439236027641866}, {t -> 2.716632429339274, u_1 -> 0.765960581495005, u_0 -> 0.23399933201063777}, {t -> 2.741632429339274, u_1 -> 0.7756523719409826, u_0 -> 0.22431024064770308}, {t -> 2.766632429339274, u_1 -> 0.7850687905779208, u_0 -> 0.21489638166146857}, {t -> 2.7916324293392742, u_1 -> 0.7941755695641386, u_0 -> 0.20579202541208041}, {t -> 2.816632429339274, u_1 -> 0.8029445448934773, u_0 -> 0.1970253388120107}, {t -> 2.841632429339274, u_1 -> 0.8113532990380603, u_0 -> 0.18861874264699405}, {t -> 2.8666324293392744, u_1 -> 0.8193854135704125, u_0 -> 0.18058865898411378}, {t -> 2.8916324293392743, u_1 -> 0.8270300807297186, u_0 -> 0.17294589956994322}, {t -> 2.9166324293392742, u_1 -> 0.8342814591638673, u_0 -> 0.16569631003010996}, {t -> 2.941632429339274, u_1 -> 0.8411382755201646, u_0 -> 0.15884116824425934}, {t -> 2.966632429339274, u_1 -> 0.8476032556663582, u_0 -> 0.15237775307381832}, {t -> 2.9916324293392744, u_1 -> 0.8536825028830173, u_0 -> 0.14629996611301294}, {t -> 3.0166324293392743, u_1 -> 0.8593849703892181, u_0 -> 0.1405988591153482}, {t -> 3.0416324293392742, u_1 -> 0.8647219175676015, u_0 -> 0.13526317771867924}, {t -> 3.0666324293392746, u_1 -> 0.8697064521627389, u_0 -> 0.13027981920453888}, {t -> 3.0916324293392745, u_1 -> 0.8743528694835816, u_0 -> 0.12563449323636916}, {t -> 3.1166324293392744, u_1 -> 0.878676444015101, u_0 -> 0.12131193022757264}, {t -> 3.1416324293392743, u_1 -> 0.8826932668458063, u_0 -> 0.11729604389784636}, {t -> 3.1666324293392742, u_1 -> 0.8864196623039441, u_0 -> 0.11357051458632109}, {t -> 3.1916324293392746, u_1 -> 0.8898719812815905, u_0 -> 0.11011899591049167}, {t -> 3.2166324293392745, u_1 -> 0.893066410979217, u_0 -> 0.10692530500451647}, {t -> 3.2416324293392744, u_1 -> 0.8960189405889143, u_0 -> 0.1039734568360402}, {t -> 3.266632429339275, u_1 -> 0.8987450692236978, u_0 -> 0.10124795625255592}, {t -> 3.2916324293392747, u_1 -> 0.9012598268359606, u_0 -> 0.09873377706979643}, {t -> 3.3166324293392746, u_1 -> 0.9035776008639621, u_0 -> 0.09641653541226196}, {t -> 3.3416324293392745, u_1 -> 0.9057121696326909, u_0 -> 0.09428245632194966}, {t -> 3.3666324293392744, u_1 -> 0.907676593947563, u_0 -> 0.09231848215814714}, {t -> 3.391632429339275, u_1 -> 0.9094832743740292, u_0 -> 0.09051221533004089}, {t -> 3.4166324293392747, u_1 -> 0.9111438782165163, u_0 -> 0.08885199131559586}, {t -> 3.4416324293392746, u_1 -> 0.9126693976318297, u_0 -> 0.0873268205606078}, {t -> 3.466632429339275, u_1 -> 0.9140701179373282, u_0 -> 0.08592642017262905}, {t -> 3.491632429339275, u_1 -> 0.9153556733486111, u_0 -> 0.08464115819523445}, {t -> 3.516632429339275, u_1 -> 0.9165350391030771, u_0 -> 0.08346206148918427}, {t -> 3.5416324293392747, u_1 -> 0.9176165828655626, u_0 -> 0.08238076433776274}, {t -> 3.5666324293392746, u_1 -> 0.9186080753314483, u_0 -> 0.08138949785023411}, {t -> 3.591632429339275, u_1 -> 0.9195167322753353, u_0 -> 0.08048104792266109}, {t -> 3.616632429339275, u_1 -> 0.9203492259945709, u_0 -> 0.07964874380154195}, {t -> 3.641632429339275, u_1 -> 0.9211117431776066, u_0 -> 0.07888640022445002}, {t -> 3.666632429339275, u_1 -> 0.9218100001356372, u_0 -> 0.07818830219640846}, {t -> 3.691632429339275, u_1 -> 0.9224492718703611, u_0 -> 0.07754917592884249}, {t -> 3.716632429339275, u_1 -> 0.9230344241943392, u_0 -> 0.07696415672580455}, {t -> 3.741632429339275, u_1 -> 0.9235699429706248, u_0 -> 0.07642875975353285}, {t -> 3.766632429339275, u_1 -> 0.9240599541874764, u_0 -> 0.07593885996871534}, {t -> 3.791632429339275, u_1 -> 0.9245082576639354, u_0 -> 0.07549065842214445}, {t -> 3.816632429339275, u_1 -> 0.9249183473142165, u_0 -> 0.07508066199883578}, {t -> 3.841632429339275, u_1 -> 0.9252934299933174, u_0 -> 0.07470566457638654}, {t -> 3.8666324293392753, u_1 -> 0.9256364585506001, u_0 -> 0.07436271397995413}, {t -> 3.8916324293392752, u_1 -> 0.9259501356801703, u_0 -> 0.07404910813219255}, {t -> 3.916632429339275, u_1 -> 0.9262369462429422, u_0 -> 0.07376236273906954}, {t -> 3.941632429339275, u_1 -> 0.926499167379687, u_0 -> 0.07350020117903441}, {t -> 3.966632429339275, u_1 -> 0.9267388819633026, u_0 -> 0.07326054105378835}, {t -> 3.9916324293392753, u_1 -> 0.9269580130344318, u_0 -> 0.07304145976098815}, {t -> 5, u_1 -> 0.9269580130344318, u_0 -> 0.07304145976098815}]
Xhat_0: ((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1) - (2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
Xhat_1: ((2*e^(-3*(u_0 - 1)^2) + 2*e^(-3*u_0^2) - 1)*(e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2)) - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(2*e^(-3*(u_1 - 1)^2) + 2*e^(-3*u_1^2) - 1))/((e^(-3*(u_0 - 1)^2 - 3*(u_1 - 1)^2) + e^(-3*u_0^2 - 3*u_1^2))^2 - (e^(-6*(u_0 - 1)^2) + e^(-6*u_0^2))*(e^(-6*(u_1 - 1)^2) + e^(-6*u_1^2)))
plot R vs. t
plot a vs. a
