# This file was *autogenerated* from the file maclev-1-2-popdyn.sage
from sage.all_cmdline import *   # import sage library
_sage_const_30 = Integer(30); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4)# requires: maclev_1_2_defs.py
# requires: $(SageDynamics)/dynamicalsystems.py maclevmodels.py
# requires: $(SageAdaptiveDynamics)/adaptivedynamics.py
# produces: maclev-1-2-popdyn.sage.out.tex maclev-1-2-popdyn.sobj
# produces: maclev-1-2-popdyn.png maclev-1-2-r-zngis.png maclev-1-2-c-vs-u.png 
from maclev_1_2_defs import *

print 'start'
sys.stdout.flush()

ltx = latex_output( 'maclev-1-2-popdyn.sage.out.tex' )

ltx.write( 'The Mac-Lev model in generic form: ' )
ltx.write_block( maclev )

ltx.write( 'The Mac-Lev model with $b, m$, and $c$ bound to functions of $u$:\n' )
ltx.write_block( maclev.bind( ad_bindings ) )

rescomp_initial_system = maclev._rescomp_model.bind( ad_bindings + numeric_params + initial_conditions )
rescomp_initial_system.plot_R_ZNGIs( filename='maclev-1-2-r-zngis.png', figsize=(_sage_const_4 ,_sage_const_4 ), ymin=_sage_const_0 , ymax=_sage_const_4 , xmin=_sage_const_0 , xmax=_sage_const_4  )

print 'plot c vs u' 
sys.stdout.flush()

c_curve = plot( c_func( _sage_const_0 , _sage_const_0  ), (u_0, _sage_const_0 , _sage_const_1 ) )
c_curve += plot( c_func( _sage_const_1 , _sage_const_1  ), (u_1, _sage_const_0 , _sage_const_1 ), color="green" )
c_curve += point( initial_conditions( vector( [ u_0, c_func( _sage_const_0 , _sage_const_0  ) ] ) ), color='blue', size=_sage_const_30  )
c_curve += point( initial_conditions( vector( [ u_0, c_func( _sage_const_0 , _sage_const_1  ) ] ) ), color='blue', size=_sage_const_30  )
c_curve.axes_labels( [ '$u$', '$c_i(u)$' ] )
c_curve.save( 'maclev-1-2-c-vs-u.png', figsize=(_sage_const_4 ,_sage_const_4 ), ymin=_sage_const_0  )

ltx.close()

save_session('maclev-1-2-popdyn')
