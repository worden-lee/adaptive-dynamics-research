ad bindings: {gamma -> 1, m -> 1, r -> 1, {}}
model bindings: {m -> 1, r -> 1, {}}
_early_bindings: {, {}}
_late_bindings: {, {}}
make LV model
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
r_0_R_1 : 1
aij_dict: {a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_0: 0, a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), r_0_R_0: 1, r_0_R_1: 1, a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_R_1_0_R_0: -1, a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), r_0_P_1: -1, a_0_P_0_0_P_1: 0, a_0_R_0_0_R_1: -1, a_0_P_1_0_P_0: 0, a_0_R_0_0_R_0: -1, a_0_P_1_0_P_1: 0, a_0_R_1_0_R_1: -1, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1), a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0)}
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
r_0_R_1 : 1
aij_dict: {a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_0: 0, a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), r_0_R_0: 1, r_0_R_1: 1, a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_R_1_0_R_0: -1, a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), r_0_P_1: -1, a_0_P_0_0_P_1: 0, a_0_R_0_0_R_1: -1, a_0_P_1_0_P_0: 0, a_0_R_0_0_R_0: -1, a_0_P_1_0_P_1: 0, a_0_R_1_0_R_1: -1, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1), a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0)}
_A_bindings: {a_0_P_1_0_R_1 -> k*f(u_0_P_1, u_0_R_1), a_0_R_1_0_P_0 -> -f(u_0_P_0, u_0_R_1), a_0_R_0_0_P_0 -> -f(u_0_P_0, u_0_R_0), a_0_R_0_0_P_1 -> -f(u_0_P_1, u_0_R_0), a_0_R_1_0_R_0 -> -1, r_0_R_1 -> 1, a_0_R_0_0_R_1 -> -1, a_0_P_1_0_P_0 -> 0, a_0_R_1_0_R_1 -> -1, a_0_P_1_0_R_0 -> k*f(u_0_P_1, u_0_R_0), a_0_P_0_0_P_0 -> 0, r_0_R_0 -> 1, r_0_P_1 -> -1, a_0_P_0_0_R_1 -> k*f(u_0_P_0, u_0_R_1), a_0_R_0_0_R_0 -> -1, a_0_P_0_0_P_1 -> 0, a_0_P_0_0_R_0 -> k*f(u_0_P_0, u_0_R_0), a_0_P_1_0_P_1 -> 0, r_0_P_0 -> -1, a_0_R_1_0_P_1 -> -f(u_0_P_1, u_0_R_1), {}}
make LV adaptive dynamics
population vars [X_0_R_0, X_0_P_1, X_0_P_0, X_0_R_1]
population vars [X_0_R_0, X_0_P_1, X_0_P_0, X_0_R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_0, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_0, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 - X_0_R_0*X_1_R_0 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_R_0 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) + X_0_P_1*X_1_R_0*k*f(u_0_P_1, u_1_R_0) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_R_0 : k*f(u_0_P_1, u_1_R_0)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) + X_0_P_0*X_1_R_0*k*f(u_0_P_0, u_1_R_0) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_R_0 : k*f(u_0_P_0, u_1_R_0)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 - X_0_R_1*X_1_R_0 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_R_0 : -1
r_0_R_1 : 1
Inferring LV coefficients from X_1_R_0 equation: -X_0_P_0*X_1_R_0*f(u_0_P_0, u_1_R_0) - X_0_P_1*X_1_R_0*f(u_0_P_1, u_1_R_0) - X_0_R_0*X_1_R_0 - X_0_R_1*X_1_R_0 - X_1_R_0^2 + X_1_R_0
a_1_R_0_0_R_0 : -1
a_1_R_0_0_P_1 : -f(u_0_P_1, u_1_R_0)
a_1_R_0_0_P_0 : -f(u_0_P_0, u_1_R_0)
a_1_R_0_0_R_1 : -1
r_1_R_0 : 1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_P_0_1_R_0: k*f(u_0_P_0, u_1_R_0), a_1_R_0_0_R_0: -1, a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_R_1_0_R_0: -1, a_0_R_1_1_R_0: -1, r_0_P_1: -1, r_1_R_0: 1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), a_0_R_0_1_R_0: -1, a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_P_1_1_R_0: k*f(u_0_P_1, u_1_R_0), a_0_P_0_0_P_1: 0, a_1_R_0_0_R_1: -1, a_0_P_1_0_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_1_R_0_0_P_0: -f(u_0_P_0, u_1_R_0), r_0_R_1: 1, a_0_R_1_0_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_1_R_0_0_P_1: -f(u_0_P_1, u_1_R_0), a_1_R_0_1_R_0: -1, a_0_P_1_0_P_1: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1R_{0}}}\frac{dX_{1R_{0}}}{dt} &= X_{0P_{0}} a_{1R_{0}0P_{0}} + X_{0P_{1}} a_{1R_{0}0P_{1}} + X_{0R_{0}} a_{1R_{0}0R_{0}} + X_{0R_{1}} a_{1R_{0}0R_{1}} + X_{1R_{0}} a_{1R_{0}1R_{0}} + r_{1R_{0}} 
\end{align*}

limit as {a_1_R_0_0_P_1: a_0_R_0_0_P_1, a_1_R_0_0_R_0: a_0_R_0_0_R_0, r_1_R_0: r_0_R_0, a_1_R_0_0_P_0: a_0_R_0_0_P_0, a_1_R_0_0_R_1: a_0_R_0_0_R_1}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_1, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_1, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0*X_1_P_1*f(u_1_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_P_1 : -f(u_1_P_1, u_0_R_0)
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_P_1 : 0
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_P_1 : 0
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_1*X_1_P_1*f(u_1_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_P_1 : -f(u_1_P_1, u_0_R_1)
r_0_R_1 : 1
Inferring LV coefficients from X_1_P_1 equation: X_0_R_0*X_1_P_1*k*f(u_1_P_1, u_0_R_0) + X_0_R_1*X_1_P_1*k*f(u_1_P_1, u_0_R_1) - X_1_P_1
a_1_P_1_0_R_0 : k*f(u_1_P_1, u_0_R_0)
a_1_P_1_0_P_1 : 0
a_1_P_1_0_P_0 : 0
a_1_P_1_0_R_1 : k*f(u_1_P_1, u_0_R_1)
r_1_P_1 : -1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_1_P_1_0_R_0: k*f(u_1_P_1, u_0_R_0), a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_P_1_1_P_1: 0, a_0_R_1_0_R_0: -1, r_0_P_1: -1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_P_0_1_P_1: 0, a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), a_1_P_1_0_P_0: 0, a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_1: 0, a_0_P_1_0_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), r_0_R_1: 1, a_1_P_1_0_P_1: 0, a_0_R_1_0_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_0_R_0_1_P_1: -f(u_1_P_1, u_0_R_0), r_1_P_1: -1, a_1_P_1_1_P_1: 0, a_0_R_1_1_P_1: -f(u_1_P_1, u_0_R_1), a_1_P_1_0_R_1: k*f(u_1_P_1, u_0_R_1), a_0_P_1_0_P_1: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1P_{1}}}\frac{dX_{1P_{1}}}{dt} &= X_{0P_{0}} a_{1P_{1}0P_{0}} + X_{0P_{1}} a_{1P_{1}0P_{1}} + X_{0R_{0}} a_{1P_{1}0R_{0}} + X_{0R_{1}} a_{1P_{1}0R_{1}} + X_{1P_{1}} a_{1P_{1}1P_{1}} + r_{1P_{1}} 
\end{align*}

limit as {a_1_P_1_0_R_1: a_0_P_1_0_R_1, a_1_P_1_0_P_1: a_0_P_1_0_P_1, a_1_P_1_0_R_0: a_0_P_1_0_R_0, r_1_P_1: r_0_P_1, a_1_P_1_0_P_0: a_0_P_1_0_P_0}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_0, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_0, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0*X_1_P_0*f(u_1_P_0, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_P_0 : -f(u_1_P_0, u_0_R_0)
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_P_0 : 0
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_P_0 : 0
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_1*X_1_P_0*f(u_1_P_0, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_P_0 : -f(u_1_P_0, u_0_R_1)
r_0_R_1 : 1
Inferring LV coefficients from X_1_P_0 equation: X_0_R_0*X_1_P_0*k*f(u_1_P_0, u_0_R_0) + X_0_R_1*X_1_P_0*k*f(u_1_P_0, u_0_R_1) - X_1_P_0
a_1_P_0_0_R_0 : k*f(u_1_P_0, u_0_R_0)
a_1_P_0_0_P_1 : 0
a_1_P_0_0_P_0 : 0
a_1_P_0_0_R_1 : k*f(u_1_P_0, u_0_R_1)
r_1_P_0 : -1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_1_P_0_0_P_1: 0, a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_R_1_0_R_0: -1, r_0_P_1: -1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_R_1_1_P_0: -f(u_1_P_0, u_0_R_1), a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), r_1_P_0: -1, a_1_P_0_0_R_1: k*f(u_1_P_0, u_0_R_1), a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_R_0_1_P_0: -f(u_1_P_0, u_0_R_0), a_0_P_0_0_P_1: 0, a_0_P_1_0_P_0: 0, a_0_P_1_1_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_1_P_0_0_R_0: k*f(u_1_P_0, u_0_R_0), r_0_R_1: 1, a_1_P_0_0_P_0: 0, a_0_R_1_0_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_0_P_0_1_P_0: 0, a_0_P_1_0_P_1: 0, a_1_P_0_1_P_0: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1P_{0}}}\frac{dX_{1P_{0}}}{dt} &= X_{0P_{0}} a_{1P_{0}0P_{0}} + X_{0P_{1}} a_{1P_{0}0P_{1}} + X_{0R_{0}} a_{1P_{0}0R_{0}} + X_{0R_{1}} a_{1P_{0}0R_{1}} + X_{1P_{0}} a_{1P_{0}1P_{0}} + r_{1P_{0}} 
\end{align*}

limit as {r_1_P_0: r_0_P_0, a_1_P_0_0_P_1: a_0_P_0_0_P_1, a_1_P_0_0_R_1: a_0_P_0_0_R_1, a_1_P_0_0_P_0: a_0_P_0_0_P_0, a_1_P_0_0_R_0: a_0_P_0_0_R_0}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_1, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_1, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 - X_0_R_0*X_1_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_R_1 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) + X_0_P_1*X_1_R_1*k*f(u_0_P_1, u_1_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_R_1 : k*f(u_0_P_1, u_1_R_1)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) + X_0_P_0*X_1_R_1*k*f(u_0_P_0, u_1_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_R_1 : k*f(u_0_P_0, u_1_R_1)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 - X_0_R_1*X_1_R_1 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_R_1 : -1
r_0_R_1 : 1
Inferring LV coefficients from X_1_R_1 equation: -X_0_P_0*X_1_R_1*f(u_0_P_0, u_1_R_1) - X_0_P_1*X_1_R_1*f(u_0_P_1, u_1_R_1) - X_0_R_0*X_1_R_1 - X_0_R_1*X_1_R_1 - X_1_R_1^2 + X_1_R_1
a_1_R_1_0_R_0 : -1
a_1_R_1_0_P_1 : -f(u_0_P_1, u_1_R_1)
a_1_R_1_0_P_0 : -f(u_0_P_0, u_1_R_1)
a_1_R_1_0_R_1 : -1
r_1_R_1 : 1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_R_1_0_R_0: -1, r_0_P_1: -1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), a_1_R_1_0_P_0: -f(u_0_P_0, u_1_R_1), r_1_R_1: 1, a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_1: 0, a_0_P_1_0_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_1_R_1_1_R_1: -1, a_0_P_1_1_R_1: k*f(u_0_P_1, u_1_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_1_R_1_0_P_1: -f(u_0_P_1, u_1_R_1), r_0_R_1: 1, a_0_P_0_1_R_1: k*f(u_0_P_0, u_1_R_1), a_0_R_1_0_R_1: -1, a_0_R_1_1_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_1_R_1_0_R_0: -1, a_1_R_1_0_R_1: -1, a_0_R_0_1_R_1: -1, a_0_P_1_0_P_1: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1R_{1}}}\frac{dX_{1R_{1}}}{dt} &= X_{0P_{0}} a_{1R_{1}0P_{0}} + X_{0P_{1}} a_{1R_{1}0P_{1}} + X_{0R_{0}} a_{1R_{1}0R_{0}} + X_{0R_{1}} a_{1R_{1}0R_{1}} + X_{1R_{1}} a_{1R_{1}1R_{1}} + r_{1R_{1}} 
\end{align*}

limit as {a_1_R_1_0_R_1: a_0_R_1_0_R_1, a_1_R_1_0_P_1: a_0_R_1_0_P_1, a_1_R_1_0_R_0: a_0_R_1_0_R_0, r_1_R_1: r_0_R_1, a_1_R_1_0_P_0: a_0_R_1_0_P_0}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
make LV evolution bindings
(a_0_P_1_0_R_1, (u_0_P_1, u_0_R_1) |--> k*f(u_0_P_1, u_0_R_1)) as tuple:expr?
(a_0_P_1_0_R_1, (u_0_P_1, u_0_R_1) |--> k*f(u_0_P_1, u_0_R_1)) as expr:function?
{('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)): (u_0_P_1, u_0_R_1) |--> k*f(u_0_P_1, u_0_R_1)}
(a_0_R_1_0_P_0, (u_0_R_1, u_0_P_0) |--> -f(u_0_P_0, u_0_R_1)) as tuple:expr?
(a_0_R_1_0_P_0, (u_0_R_1, u_0_P_0) |--> -f(u_0_P_0, u_0_R_1)) as expr:function?
{('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)): (u_0_R_1, u_0_P_0) |--> -f(u_0_P_0, u_0_R_1)}
(a_0_P_0_0_R_0, (u_0_P_0, u_0_R_0) |--> k*f(u_0_P_0, u_0_R_0)) as tuple:expr?
(a_0_P_0_0_R_0, (u_0_P_0, u_0_R_0) |--> k*f(u_0_P_0, u_0_R_0)) as expr:function?
{('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)): (u_0_P_0, u_0_R_0) |--> k*f(u_0_P_0, u_0_R_0)}
(r_0_R_0, u_0_R_0 |--> 1) as tuple:expr?
(r_0_R_0, u_0_R_0 |--> 1) as expr:function?
{('r_0_R_0', (u_0_R_0,)): u_0_R_0 |--> 1}
(a_0_R_0_0_P_0, (u_0_R_0, u_0_P_0) |--> -f(u_0_P_0, u_0_R_0)) as tuple:expr?
(a_0_R_0_0_P_0, (u_0_R_0, u_0_P_0) |--> -f(u_0_P_0, u_0_R_0)) as expr:function?
{('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)): (u_0_R_0, u_0_P_0) |--> -f(u_0_P_0, u_0_R_0)}
(r_0_R_1, u_0_R_1 |--> 1) as tuple:expr?
(r_0_R_1, u_0_R_1 |--> 1) as expr:function?
{('r_0_R_1', (u_0_R_1,)): u_0_R_1 |--> 1}
(a_0_R_0_0_P_1, (u_0_R_0, u_0_P_1) |--> -f(u_0_P_1, u_0_R_0)) as tuple:expr?
(a_0_R_0_0_P_1, (u_0_R_0, u_0_P_1) |--> -f(u_0_P_1, u_0_R_0)) as expr:function?
{('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)): (u_0_R_0, u_0_P_1) |--> -f(u_0_P_1, u_0_R_0)}
(a_0_P_0_0_R_1, (u_0_P_0, u_0_R_1) |--> k*f(u_0_P_0, u_0_R_1)) as tuple:expr?
(a_0_P_0_0_R_1, (u_0_P_0, u_0_R_1) |--> k*f(u_0_P_0, u_0_R_1)) as expr:function?
{('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)): (u_0_P_0, u_0_R_1) |--> k*f(u_0_P_0, u_0_R_1)}
(a_0_R_1_0_R_0, (u_0_R_1, u_0_R_0) |--> -1) as tuple:expr?
(a_0_R_1_0_R_0, (u_0_R_1, u_0_R_0) |--> -1) as expr:function?
{('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)): (u_0_R_1, u_0_R_0) |--> -1}
(a_0_P_0_0_P_0, (u_0_P_0, u_0_P_0) |--> 0) as tuple:expr?
(a_0_P_0_0_P_0, (u_0_P_0, u_0_P_0) |--> 0) as expr:function?
{('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)): (u_0_P_0, u_0_P_0) |--> 0}
(r_0_P_1, u_0_P_1 |--> -1) as tuple:expr?
(r_0_P_1, u_0_P_1 |--> -1) as expr:function?
{('r_0_P_1', (u_0_P_1,)): u_0_P_1 |--> -1}
(a_0_P_0_0_P_1, (u_0_P_0, u_0_P_1) |--> 0) as tuple:expr?
(a_0_P_0_0_P_1, (u_0_P_0, u_0_P_1) |--> 0) as expr:function?
{('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)): (u_0_P_0, u_0_P_1) |--> 0}
(a_0_R_0_0_R_1, (u_0_R_0, u_0_R_1) |--> -1) as tuple:expr?
(a_0_R_0_0_R_1, (u_0_R_0, u_0_R_1) |--> -1) as expr:function?
{('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)): (u_0_R_0, u_0_R_1) |--> -1}
(a_0_P_1_0_P_0, (u_0_P_1, u_0_P_0) |--> 0) as tuple:expr?
(a_0_P_1_0_P_0, (u_0_P_1, u_0_P_0) |--> 0) as expr:function?
{('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)): (u_0_P_1, u_0_P_0) |--> 0}
(a_0_R_0_0_R_0, (u_0_R_0, u_0_R_0) |--> -1) as tuple:expr?
(a_0_R_0_0_R_0, (u_0_R_0, u_0_R_0) |--> -1) as expr:function?
{('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)): (u_0_R_0, u_0_R_0) |--> -1}
(a_0_P_1_0_P_1, (u_0_P_1, u_0_P_1) |--> 0) as tuple:expr?
(a_0_P_1_0_P_1, (u_0_P_1, u_0_P_1) |--> 0) as expr:function?
{('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)): (u_0_P_1, u_0_P_1) |--> 0}
(a_0_R_1_0_R_1, (u_0_R_1, u_0_R_1) |--> -1) as tuple:expr?
(a_0_R_1_0_R_1, (u_0_R_1, u_0_R_1) |--> -1) as expr:function?
{('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)): (u_0_R_1, u_0_R_1) |--> -1}
(r_0_P_0, u_0_P_0 |--> -1) as tuple:expr?
(r_0_P_0, u_0_P_0 |--> -1) as expr:function?
{('r_0_P_0', (u_0_P_0,)): u_0_P_0 |--> -1}
(a_0_R_1_0_P_1, (u_0_R_1, u_0_P_1) |--> -f(u_0_P_1, u_0_R_1)) as tuple:expr?
(a_0_R_1_0_P_1, (u_0_R_1, u_0_P_1) |--> -f(u_0_P_1, u_0_R_1)) as expr:function?
{('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)): (u_0_R_1, u_0_P_1) |--> -f(u_0_P_1, u_0_R_1)}
(a_0_P_1_0_R_0, (u_0_P_1, u_0_R_0) |--> k*f(u_0_P_1, u_0_R_0)) as tuple:expr?
(a_0_P_1_0_R_0, (u_0_P_1, u_0_R_0) |--> k*f(u_0_P_1, u_0_R_0)) as expr:function?
{('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)): (u_0_P_1, u_0_R_0) |--> k*f(u_0_P_1, u_0_R_0)}
ad bindings: {Xhat_0_R_1 -> -10/9*(cos(-u_0_P_0 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0))/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)), Xhat_0_R_0 -> 10/9*(cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)), m -> 1, Xhat_0_P_0 -> 1/9*((9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_1)^2 + (9*cos(-u_0_P_1 + u_0_R_0)^2 - cos(-u_0_P_1 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 - ((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) + (9*cos(-u_0_P_0 + u_0_R_0) - 2)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)), gamma -> 1, Xhat_0_P_1 -> 1/9*((9*cos(-u_0_P_1 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1)^2 - cos(-u_0_P_0 + u_0_R_0)^2 - ((9*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) - 2*cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) + cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + (9*cos(-u_0_P_0 + u_0_R_0)^2 - (9*cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_0 + u_0_R_1) - cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1))/((cos(-u_0_P_1 + u_0_R_0)^2 + 2*cos(-u_0_P_1 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1)^2 + (cos(-u_0_P_0 + u_0_R_0)^2 + 2*cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_1)^2 + cos(-u_0_P_0 + u_0_R_0)^2 - 2*((cos(-u_0_P_0 + u_0_R_0) - 1)*cos(-u_0_P_1 + u_0_R_0) - cos(-u_0_P_1 + u_0_R_0)^2 + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_0 + u_0_R_1) - 2*cos(-u_0_P_0 + u_0_R_0)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_1 + u_0_R_0)^2 + 2*(cos(-u_0_P_0 + u_0_R_0)^2 - ((cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_0 + u_0_R_1) - (cos(-u_0_P_0 + u_0_R_0) + 1)*cos(-u_0_P_1 + u_0_R_0) + cos(-u_0_P_0 + u_0_R_0))*cos(-u_0_P_1 + u_0_R_1)), k -> 9/10, r -> 1, {f(u,v) -> cos(u - v) + 1}}
model bindings: {m -> 1, r -> 1, {}}
_early_bindings: {, {}}
_late_bindings: {, {}}
make LV model
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
r_0_R_1 : 1
aij_dict: {a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_0: 0, a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), r_0_R_0: 1, r_0_R_1: 1, a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_R_1_0_R_0: -1, a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), r_0_P_1: -1, a_0_P_0_0_P_1: 0, a_0_R_0_0_R_1: -1, a_0_P_1_0_P_0: 0, a_0_R_0_0_R_0: -1, a_0_P_1_0_P_1: 0, a_0_R_1_0_R_1: -1, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1), a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0)}
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
r_0_R_1 : 1
aij_dict: {a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_0: 0, a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), r_0_R_0: 1, r_0_R_1: 1, a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_R_1_0_R_0: -1, a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), r_0_P_1: -1, a_0_P_0_0_P_1: 0, a_0_R_0_0_R_1: -1, a_0_P_1_0_P_0: 0, a_0_R_0_0_R_0: -1, a_0_P_1_0_P_1: 0, a_0_R_1_0_R_1: -1, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1), a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0)}
_A_bindings: {a_0_P_1_0_R_1 -> k*f(u_0_P_1, u_0_R_1), a_0_R_1_0_P_0 -> -f(u_0_P_0, u_0_R_1), a_0_R_0_0_P_0 -> -f(u_0_P_0, u_0_R_0), a_0_R_0_0_P_1 -> -f(u_0_P_1, u_0_R_0), a_0_R_1_0_R_0 -> -1, r_0_R_1 -> 1, a_0_R_0_0_R_1 -> -1, a_0_P_1_0_P_0 -> 0, a_0_R_1_0_R_1 -> -1, a_0_P_1_0_R_0 -> k*f(u_0_P_1, u_0_R_0), a_0_P_0_0_P_0 -> 0, r_0_R_0 -> 1, r_0_P_1 -> -1, a_0_P_0_0_R_1 -> k*f(u_0_P_0, u_0_R_1), a_0_R_0_0_R_0 -> -1, a_0_P_0_0_P_1 -> 0, a_0_P_0_0_R_0 -> k*f(u_0_P_0, u_0_R_0), a_0_P_1_0_P_1 -> 0, r_0_P_0 -> -1, a_0_R_1_0_P_1 -> -f(u_0_P_1, u_0_R_1), {}}
make LV adaptive dynamics
population vars [X_0_R_0, X_0_P_1, X_0_P_0, X_0_R_1]
population vars [X_0_R_0, X_0_P_1, X_0_P_0, X_0_R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_0, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_0, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 - X_0_R_0*X_1_R_0 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_R_0 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) + X_0_P_1*X_1_R_0*k*f(u_0_P_1, u_1_R_0) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_R_0 : k*f(u_0_P_1, u_1_R_0)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) + X_0_P_0*X_1_R_0*k*f(u_0_P_0, u_1_R_0) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_R_0 : k*f(u_0_P_0, u_1_R_0)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 - X_0_R_1*X_1_R_0 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_R_0 : -1
r_0_R_1 : 1
Inferring LV coefficients from X_1_R_0 equation: -X_0_P_0*X_1_R_0*f(u_0_P_0, u_1_R_0) - X_0_P_1*X_1_R_0*f(u_0_P_1, u_1_R_0) - X_0_R_0*X_1_R_0 - X_0_R_1*X_1_R_0 - X_1_R_0^2 + X_1_R_0
a_1_R_0_0_R_0 : -1
a_1_R_0_0_P_1 : -f(u_0_P_1, u_1_R_0)
a_1_R_0_0_P_0 : -f(u_0_P_0, u_1_R_0)
a_1_R_0_0_R_1 : -1
r_1_R_0 : 1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_P_0_1_R_0: k*f(u_0_P_0, u_1_R_0), a_1_R_0_0_R_0: -1, a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_R_1_0_R_0: -1, a_0_R_1_1_R_0: -1, r_0_P_1: -1, r_1_R_0: 1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), a_0_R_0_1_R_0: -1, a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_P_1_1_R_0: k*f(u_0_P_1, u_1_R_0), a_0_P_0_0_P_1: 0, a_1_R_0_0_R_1: -1, a_0_P_1_0_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_1_R_0_0_P_0: -f(u_0_P_0, u_1_R_0), r_0_R_1: 1, a_0_R_1_0_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_1_R_0_0_P_1: -f(u_0_P_1, u_1_R_0), a_1_R_0_1_R_0: -1, a_0_P_1_0_P_1: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1R_{0}}}\frac{dX_{1R_{0}}}{dt} &= X_{0P_{0}} a_{1R_{0}0P_{0}} + X_{0P_{1}} a_{1R_{0}0P_{1}} + X_{0R_{0}} a_{1R_{0}0R_{0}} + X_{0R_{1}} a_{1R_{0}0R_{1}} + X_{1R_{0}} a_{1R_{0}1R_{0}} + r_{1R_{0}} 
\end{align*}

limit as {a_1_R_0_0_P_1: a_0_R_0_0_P_1, a_1_R_0_0_R_0: a_0_R_0_0_R_0, r_1_R_0: r_0_R_0, a_1_R_0_0_P_0: a_0_R_0_0_P_0, a_1_R_0_0_R_1: a_0_R_0_0_R_1}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_1, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_1, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0*X_1_P_1*f(u_1_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_P_1 : -f(u_1_P_1, u_0_R_0)
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_P_1 : 0
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_P_1 : 0
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_1*X_1_P_1*f(u_1_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_P_1 : -f(u_1_P_1, u_0_R_1)
r_0_R_1 : 1
Inferring LV coefficients from X_1_P_1 equation: X_0_R_0*X_1_P_1*k*f(u_1_P_1, u_0_R_0) + X_0_R_1*X_1_P_1*k*f(u_1_P_1, u_0_R_1) - X_1_P_1
a_1_P_1_0_R_0 : k*f(u_1_P_1, u_0_R_0)
a_1_P_1_0_P_1 : 0
a_1_P_1_0_P_0 : 0
a_1_P_1_0_R_1 : k*f(u_1_P_1, u_0_R_1)
r_1_P_1 : -1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_1_P_1_0_R_0: k*f(u_1_P_1, u_0_R_0), a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_P_1_1_P_1: 0, a_0_R_1_0_R_0: -1, r_0_P_1: -1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_P_0_1_P_1: 0, a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), a_1_P_1_0_P_0: 0, a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_1: 0, a_0_P_1_0_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), r_0_R_1: 1, a_1_P_1_0_P_1: 0, a_0_R_1_0_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_0_R_0_1_P_1: -f(u_1_P_1, u_0_R_0), r_1_P_1: -1, a_1_P_1_1_P_1: 0, a_0_R_1_1_P_1: -f(u_1_P_1, u_0_R_1), a_1_P_1_0_R_1: k*f(u_1_P_1, u_0_R_1), a_0_P_1_0_P_1: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1P_{1}}}\frac{dX_{1P_{1}}}{dt} &= X_{0P_{0}} a_{1P_{1}0P_{0}} + X_{0P_{1}} a_{1P_{1}0P_{1}} + X_{0R_{0}} a_{1P_{1}0R_{0}} + X_{0R_{1}} a_{1P_{1}0R_{1}} + X_{1P_{1}} a_{1P_{1}1P_{1}} + r_{1P_{1}} 
\end{align*}

limit as {a_1_P_1_0_R_1: a_0_P_1_0_R_1, a_1_P_1_0_P_1: a_0_P_1_0_P_1, a_1_P_1_0_R_0: a_0_P_1_0_R_0, r_1_P_1: r_0_P_1, a_1_P_1_0_P_0: a_0_P_1_0_P_0}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_0, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (P_0, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0*X_1_P_0*f(u_1_P_0, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_P_0 : -f(u_1_P_0, u_0_R_0)
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_P_0 : 0
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_P_0 : 0
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_1*X_1_P_0*f(u_1_P_0, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_P_0 : -f(u_1_P_0, u_0_R_1)
r_0_R_1 : 1
Inferring LV coefficients from X_1_P_0 equation: X_0_R_0*X_1_P_0*k*f(u_1_P_0, u_0_R_0) + X_0_R_1*X_1_P_0*k*f(u_1_P_0, u_0_R_1) - X_1_P_0
a_1_P_0_0_R_0 : k*f(u_1_P_0, u_0_R_0)
a_1_P_0_0_P_1 : 0
a_1_P_0_0_P_0 : 0
a_1_P_0_0_R_1 : k*f(u_1_P_0, u_0_R_1)
r_1_P_0 : -1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_1_P_0_0_P_1: 0, a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_R_1_0_R_0: -1, r_0_P_1: -1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_R_1_1_P_0: -f(u_1_P_0, u_0_R_1), a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), r_1_P_0: -1, a_1_P_0_0_R_1: k*f(u_1_P_0, u_0_R_1), a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_R_0_1_P_0: -f(u_1_P_0, u_0_R_0), a_0_P_0_0_P_1: 0, a_0_P_1_0_P_0: 0, a_0_P_1_1_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_1_P_0_0_R_0: k*f(u_1_P_0, u_0_R_0), r_0_R_1: 1, a_1_P_0_0_P_0: 0, a_0_R_1_0_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_0_P_0_1_P_0: 0, a_0_P_1_0_P_1: 0, a_1_P_0_1_P_0: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1P_{0}}}\frac{dX_{1P_{0}}}{dt} &= X_{0P_{0}} a_{1P_{0}0P_{0}} + X_{0P_{1}} a_{1P_{0}0P_{1}} + X_{0R_{0}} a_{1P_{0}0R_{0}} + X_{0R_{1}} a_{1P_{0}0R_{1}} + X_{1P_{0}} a_{1P_{0}1P_{0}} + r_{1P_{0}} 
\end{align*}

limit as {r_1_P_0: r_0_P_0, a_1_P_0_0_P_1: a_0_P_0_0_P_1, a_1_P_0_0_R_1: a_0_P_0_0_R_1, a_1_P_0_0_P_0: a_0_P_0_0_P_0, a_1_P_0_0_R_0: a_0_P_0_0_R_0}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_1, 1)]
basal: [R_0, R_1]
set_population_indices: [(R_0, 0), (P_1, 0), (P_0, 0), (R_1, 0), (R_1, 1)]
Inferring LV coefficients from X_0_R_0 equation: -X_0_P_0*X_0_R_0*f(u_0_P_0, u_0_R_0) - X_0_P_1*X_0_R_0*f(u_0_P_1, u_0_R_0) - X_0_R_0^2 - X_0_R_0*X_0_R_1 - X_0_R_0*X_1_R_1 + X_0_R_0
a_0_R_0_0_P_1 : -f(u_0_P_1, u_0_R_0)
a_0_R_0_0_P_0 : -f(u_0_P_0, u_0_R_0)
a_0_R_0_0_R_1 : -1
a_0_R_0_1_R_1 : -1
r_0_R_0 : 1
Inferring LV coefficients from X_0_P_1 equation: X_0_P_1*X_0_R_0*k*f(u_0_P_1, u_0_R_0) + X_0_P_1*X_0_R_1*k*f(u_0_P_1, u_0_R_1) + X_0_P_1*X_1_R_1*k*f(u_0_P_1, u_1_R_1) - X_0_P_1
a_0_P_1_0_R_0 : k*f(u_0_P_1, u_0_R_0)
a_0_P_1_0_P_0 : 0
a_0_P_1_0_R_1 : k*f(u_0_P_1, u_0_R_1)
a_0_P_1_1_R_1 : k*f(u_0_P_1, u_1_R_1)
r_0_P_1 : -1
Inferring LV coefficients from X_0_P_0 equation: X_0_P_0*X_0_R_0*k*f(u_0_P_0, u_0_R_0) + X_0_P_0*X_0_R_1*k*f(u_0_P_0, u_0_R_1) + X_0_P_0*X_1_R_1*k*f(u_0_P_0, u_1_R_1) - X_0_P_0
a_0_P_0_0_R_0 : k*f(u_0_P_0, u_0_R_0)
a_0_P_0_0_P_1 : 0
a_0_P_0_0_R_1 : k*f(u_0_P_0, u_0_R_1)
a_0_P_0_1_R_1 : k*f(u_0_P_0, u_1_R_1)
r_0_P_0 : -1
Inferring LV coefficients from X_0_R_1 equation: -X_0_P_0*X_0_R_1*f(u_0_P_0, u_0_R_1) - X_0_P_1*X_0_R_1*f(u_0_P_1, u_0_R_1) - X_0_R_0*X_0_R_1 - X_0_R_1^2 - X_0_R_1*X_1_R_1 + X_0_R_1
a_0_R_1_0_R_0 : -1
a_0_R_1_0_P_1 : -f(u_0_P_1, u_0_R_1)
a_0_R_1_0_P_0 : -f(u_0_P_0, u_0_R_1)
a_0_R_1_1_R_1 : -1
r_0_R_1 : 1
Inferring LV coefficients from X_1_R_1 equation: -X_0_P_0*X_1_R_1*f(u_0_P_0, u_1_R_1) - X_0_P_1*X_1_R_1*f(u_0_P_1, u_1_R_1) - X_0_R_0*X_1_R_1 - X_0_R_1*X_1_R_1 - X_1_R_1^2 + X_1_R_1
a_1_R_1_0_R_0 : -1
a_1_R_1_0_P_1 : -f(u_0_P_1, u_1_R_1)
a_1_R_1_0_P_0 : -f(u_0_P_0, u_1_R_1)
a_1_R_1_0_R_1 : -1
r_1_R_1 : 1
aij_dict: {a_0_R_1_0_P_0: -f(u_0_P_0, u_0_R_1), a_0_R_0_0_P_0: -f(u_0_P_0, u_0_R_0), a_0_P_0_0_R_0: k*f(u_0_P_0, u_0_R_0), a_0_R_1_0_R_0: -1, r_0_P_1: -1, a_0_R_0_0_R_1: -1, a_0_R_0_0_R_0: -1, a_0_P_1_0_R_0: k*f(u_0_P_1, u_0_R_0), a_1_R_1_0_P_0: -f(u_0_P_0, u_1_R_1), r_1_R_1: 1, a_0_P_0_0_R_1: k*f(u_0_P_0, u_0_R_1), a_0_P_0_0_P_1: 0, a_0_P_1_0_P_0: 0, a_0_P_1_0_R_1: k*f(u_0_P_1, u_0_R_1), a_1_R_1_1_R_1: -1, a_0_P_1_1_R_1: k*f(u_0_P_1, u_1_R_1), a_0_R_0_0_P_1: -f(u_0_P_1, u_0_R_0), a_1_R_1_0_P_1: -f(u_0_P_1, u_1_R_1), r_0_R_1: 1, a_0_P_0_1_R_1: k*f(u_0_P_0, u_1_R_1), a_0_R_1_0_R_1: -1, a_0_R_1_1_R_1: -1, a_0_P_0_0_P_0: 0, r_0_R_0: 1, a_1_R_1_0_R_0: -1, a_1_R_1_0_R_1: -1, a_0_R_0_1_R_1: -1, a_0_P_1_0_P_1: 0, r_0_P_0: -1, a_0_R_1_0_P_1: -f(u_0_P_1, u_0_R_1)}
The invasion rate for mutant population is:
\begin{align*}
  \mathscr I = \frac{1}{X_{1R_{1}}}\frac{dX_{1R_{1}}}{dt} &= X_{0P_{0}} a_{1R_{1}0P_{0}} + X_{0P_{1}} a_{1R_{1}0P_{1}} + X_{0R_{0}} a_{1R_{1}0R_{0}} + X_{0R_{1}} a_{1R_{1}0R_{1}} + X_{1R_{1}} a_{1R_{1}1R_{1}} + r_{1R_{1}} 
\end{align*}

limit as {a_1_R_1_0_R_1: a_0_R_1_0_R_1, a_1_R_1_0_P_1: a_0_R_1_0_P_1, a_1_R_1_0_R_0: a_0_R_1_0_R_0, r_1_R_1: r_0_R_1, a_1_R_1_0_P_0: a_0_R_1_0_P_0}
after those limits:
   1
  X_0_R_0
  X_0_P_1
  X_0_P_0
  X_0_R_1
make LV evolution bindings
(('f', (u, v)), cos(u - v) + 1) as tuple:expr?
{('f', (u, v)): cos(u - v) + 1}
(a_0_P_1_0_R_1, (u_0_P_1, u_0_R_1) |--> 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10) as tuple:expr?
(a_0_P_1_0_R_1, (u_0_P_1, u_0_R_1) |--> 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10) as expr:function?
{('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)): (u_0_P_1, u_0_R_1) |--> 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10}
(a_0_R_1_0_P_0, (u_0_R_1, u_0_P_0) |--> -cos(u_0_P_0 - u_0_R_1) - 1) as tuple:expr?
(a_0_R_1_0_P_0, (u_0_R_1, u_0_P_0) |--> -cos(u_0_P_0 - u_0_R_1) - 1) as expr:function?
{('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)): (u_0_R_1, u_0_P_0) |--> -cos(u_0_P_0 - u_0_R_1) - 1}
(a_0_P_0_0_R_0, (u_0_P_0, u_0_R_0) |--> 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10) as tuple:expr?
(a_0_P_0_0_R_0, (u_0_P_0, u_0_R_0) |--> 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10) as expr:function?
{('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)): (u_0_P_0, u_0_R_0) |--> 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10}
(r_0_R_0, u_0_R_0 |--> 1) as tuple:expr?
(r_0_R_0, u_0_R_0 |--> 1) as expr:function?
{('r_0_R_0', (u_0_R_0,)): u_0_R_0 |--> 1}
(a_0_R_0_0_P_0, (u_0_R_0, u_0_P_0) |--> -cos(u_0_P_0 - u_0_R_0) - 1) as tuple:expr?
(a_0_R_0_0_P_0, (u_0_R_0, u_0_P_0) |--> -cos(u_0_P_0 - u_0_R_0) - 1) as expr:function?
{('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)): (u_0_R_0, u_0_P_0) |--> -cos(u_0_P_0 - u_0_R_0) - 1}
(r_0_R_1, u_0_R_1 |--> 1) as tuple:expr?
(r_0_R_1, u_0_R_1 |--> 1) as expr:function?
{('r_0_R_1', (u_0_R_1,)): u_0_R_1 |--> 1}
(a_0_R_0_0_P_1, (u_0_R_0, u_0_P_1) |--> -cos(u_0_P_1 - u_0_R_0) - 1) as tuple:expr?
(a_0_R_0_0_P_1, (u_0_R_0, u_0_P_1) |--> -cos(u_0_P_1 - u_0_R_0) - 1) as expr:function?
{('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)): (u_0_R_0, u_0_P_1) |--> -cos(u_0_P_1 - u_0_R_0) - 1}
(a_0_P_0_0_R_1, (u_0_P_0, u_0_R_1) |--> 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10) as tuple:expr?
(a_0_P_0_0_R_1, (u_0_P_0, u_0_R_1) |--> 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10) as expr:function?
{('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)): (u_0_P_0, u_0_R_1) |--> 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10}
(a_0_R_1_0_R_0, (u_0_R_1, u_0_R_0) |--> -1) as tuple:expr?
(a_0_R_1_0_R_0, (u_0_R_1, u_0_R_0) |--> -1) as expr:function?
{('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)): (u_0_R_1, u_0_R_0) |--> -1}
(a_0_P_0_0_P_0, (u_0_P_0, u_0_P_0) |--> 0) as tuple:expr?
(a_0_P_0_0_P_0, (u_0_P_0, u_0_P_0) |--> 0) as expr:function?
{('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)): (u_0_P_0, u_0_P_0) |--> 0}
(r_0_P_1, u_0_P_1 |--> -1) as tuple:expr?
(r_0_P_1, u_0_P_1 |--> -1) as expr:function?
{('r_0_P_1', (u_0_P_1,)): u_0_P_1 |--> -1}
(a_0_P_0_0_P_1, (u_0_P_0, u_0_P_1) |--> 0) as tuple:expr?
(a_0_P_0_0_P_1, (u_0_P_0, u_0_P_1) |--> 0) as expr:function?
{('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)): (u_0_P_0, u_0_P_1) |--> 0}
(a_0_R_0_0_R_1, (u_0_R_0, u_0_R_1) |--> -1) as tuple:expr?
(a_0_R_0_0_R_1, (u_0_R_0, u_0_R_1) |--> -1) as expr:function?
{('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)): (u_0_R_0, u_0_R_1) |--> -1}
(a_0_P_1_0_P_0, (u_0_P_1, u_0_P_0) |--> 0) as tuple:expr?
(a_0_P_1_0_P_0, (u_0_P_1, u_0_P_0) |--> 0) as expr:function?
{('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)): (u_0_P_1, u_0_P_0) |--> 0}
(a_0_R_0_0_R_0, (u_0_R_0, u_0_R_0) |--> -1) as tuple:expr?
(a_0_R_0_0_R_0, (u_0_R_0, u_0_R_0) |--> -1) as expr:function?
{('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)): (u_0_R_0, u_0_R_0) |--> -1}
(a_0_P_1_0_P_1, (u_0_P_1, u_0_P_1) |--> 0) as tuple:expr?
(a_0_P_1_0_P_1, (u_0_P_1, u_0_P_1) |--> 0) as expr:function?
{('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)): (u_0_P_1, u_0_P_1) |--> 0}
(a_0_R_1_0_R_1, (u_0_R_1, u_0_R_1) |--> -1) as tuple:expr?
(a_0_R_1_0_R_1, (u_0_R_1, u_0_R_1) |--> -1) as expr:function?
{('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)): (u_0_R_1, u_0_R_1) |--> -1}
(r_0_P_0, u_0_P_0 |--> -1) as tuple:expr?
(r_0_P_0, u_0_P_0 |--> -1) as expr:function?
{('r_0_P_0', (u_0_P_0,)): u_0_P_0 |--> -1}
(a_0_R_1_0_P_1, (u_0_R_1, u_0_P_1) |--> -cos(u_0_P_1 - u_0_R_1) - 1) as tuple:expr?
(a_0_R_1_0_P_1, (u_0_R_1, u_0_P_1) |--> -cos(u_0_P_1 - u_0_R_1) - 1) as expr:function?
{('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)): (u_0_R_1, u_0_P_1) |--> -cos(u_0_P_1 - u_0_R_1) - 1}
(a_0_P_1_0_R_0, (u_0_P_1, u_0_R_0) |--> 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10) as tuple:expr?
(a_0_P_1_0_R_0, (u_0_P_1, u_0_R_0) |--> 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10) as expr:function?
{('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)): (u_0_P_1, u_0_R_0) |--> 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10}
(('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)), (u_0_R_0, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)): (u_0_R_0, u_0_R_1) |--> -1}
(('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)), -cos(u_0_P_0 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)): -cos(u_0_P_0 - u_0_R_0) - 1}
(('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)), (u_0_P_1, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)): (u_0_P_1, u_0_P_0) |--> 0}
(('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)), (u_0_P_0, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)): (u_0_P_0, u_0_P_0) |--> 0}
(('r_0_P_0', (u_0_P_0,)), u_0_P_0 |--> -1) as tuple:expr?
{('r_0_P_0', (u_0_P_0,)): u_0_P_0 |--> -1}
(('r_0_R_1', (u_0_R_1,)), u_0_R_1 |--> 1) as tuple:expr?
{('r_0_R_1', (u_0_R_1,)): u_0_R_1 |--> 1}
(('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)), (u_0_R_1, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)): (u_0_R_1, u_0_R_1) |--> -1}
(('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)), 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)): 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10}
(('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)), 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)): 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10}
(('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)), 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)): 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10}
(('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)), (u_0_P_0, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)): (u_0_P_0, u_0_P_1) |--> 0}
(('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)), -cos(u_0_P_0 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)): -cos(u_0_P_0 - u_0_R_1) - 1}
(('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)), -cos(u_0_P_1 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)): -cos(u_0_P_1 - u_0_R_1) - 1}
(('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)), (u_0_R_1, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)): (u_0_R_1, u_0_R_0) |--> -1}
(('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)), (u_0_R_0, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)): (u_0_R_0, u_0_R_0) |--> -1}
(('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)), (u_0_P_1, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)): (u_0_P_1, u_0_P_1) |--> 0}
(('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)), 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)): 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10}
(('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)), -cos(u_0_P_1 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)): -cos(u_0_P_1 - u_0_R_0) - 1}
(('r_0_P_1', (u_0_P_1,)), u_0_P_1 |--> -1) as tuple:expr?
{('r_0_P_1', (u_0_P_1,)): u_0_P_1 |--> -1}
(('r_0_R_0', (u_0_R_0,)), u_0_R_0 |--> 1) as tuple:expr?
{('r_0_R_0', (u_0_R_0,)): u_0_R_0 |--> 1}
(('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)), (u_0_P_1, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)): (u_0_P_1, u_0_P_1) |--> 0}
(('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)), -cos(u_0_P_0 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)): -cos(u_0_P_0 - u_0_R_1) - 1}
(('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)), (u_0_R_0, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)): (u_0_R_0, u_0_R_1) |--> -1}
(('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)), -cos(u_0_P_0 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)): -cos(u_0_P_0 - u_0_R_0) - 1}
(('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)), -cos(u_0_P_1 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)): -cos(u_0_P_1 - u_0_R_1) - 1}
(('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)), (u_0_P_1, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)): (u_0_P_1, u_0_P_0) |--> 0}
(('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)), (u_0_P_0, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)): (u_0_P_0, u_0_P_0) |--> 0}
(('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)), (u_0_P_0, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)): (u_0_P_0, u_0_P_1) |--> 0}
(('r_0_P_0', (u_0_P_0,)), u_0_P_0 |--> -1) as tuple:expr?
{('r_0_P_0', (u_0_P_0,)): u_0_P_0 |--> -1}
(('r_0_P_1', (u_0_P_1,)), u_0_P_1 |--> -1) as tuple:expr?
{('r_0_P_1', (u_0_P_1,)): u_0_P_1 |--> -1}
(('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)), 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)): 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10}
(('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)), (u_0_R_0, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)): (u_0_R_0, u_0_R_0) |--> -1}
(('r_0_R_1', (u_0_R_1,)), u_0_R_1 |--> 1) as tuple:expr?
{('r_0_R_1', (u_0_R_1,)): u_0_R_1 |--> 1}
(('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)), -cos(u_0_P_1 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)): -cos(u_0_P_1 - u_0_R_0) - 1}
(('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)), (u_0_R_1, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)): (u_0_R_1, u_0_R_1) |--> -1}
(('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)), 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)): 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10}
(('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)), 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)): 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10}
(('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)), (u_0_R_1, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)): (u_0_R_1, u_0_R_0) |--> -1}
(('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)), 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)): 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10}
(('r_0_R_0', (u_0_R_0,)), u_0_R_0 |--> 1) as tuple:expr?
{('r_0_R_0', (u_0_R_0,)): u_0_R_0 |--> 1}
A: (-1, -1)
S: (0.139111289632134, 0.139111289632134)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (-1.99280863585387, 1.79352777226848)
S: (0.0493994257763976, 0.139111289632134)
D: ((Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0), 81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0))
D: (0.000184785019613828, 0.000119716725657138)
I: (-9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0))
I: (-0.000133018584063486, -0.000166306517652445)
dAdt: (0.0000517664355503417, -0.0000465897919953075)
A: (-1.99955003374899, 1.79959503037409)
S: (0.172768342439991, 0.139111289632134)
D: ((Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0), 81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0))
D: (0.0000463003666774572, -0.000104909487646122)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0))
I: (0.000116566097384580, -0.0000416703300097115)
dAdt: (0.000162866464062037, -0.000146579817655833)
A: (-1, -1)
S: (0.416986163120088, 0.139111289632134)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (1.79352777226848, -1.99280863585387)
S: (0.139111289632134, 0.0493994257763976)
D: (81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0), (Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0))
D: (0.000119716725657138, 0.000184785019613828)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0), -9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0))
I: (-0.000166306517652445, -0.000133018584063486)
dAdt: (-0.0000465897919953075, 0.0000517664355503417)
A: (0, 0)
S: (0.0493994257763976, 0.0493994257763976)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (0, 0)
S: (0.172768342439991, 0.0493994257763976)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (1.79982000599992, -1.99980000666658)
S: (0.416986163120088, 0.0493994257763976)
D: (81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), (Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
D: (0.0000199994215147672, -0.0000925312931058545)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), -9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
I: (0.0000832781637952690, -0.0000222215794608525)
dAdt: (0.000103277585310036, -0.000114752872566707)
A: (1.79959503037409, -1.99955003374899)
S: (0.139111289632134, 0.172768342439991)
D: (81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0), (Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0))
D: (-0.000104909487646122, 0.0000463003666774572)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0))
I: (-0.0000416703300097115, 0.000116566097384580)
dAdt: (-0.000146579817655833, 0.000162866464062037)
A: (0, 0)
S: (0.0493994257763976, 0.172768342439991)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (0, 0)
S: (0.172768342439991, 0.172768342439991)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (1.79779590022795, -1.99755100025328)
S: (0.416986163120088, 0.172768342439991)
D: (81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), (Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
D: (0.000244625634817084, 0.000323616679396172)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
I: (-0.000291255011456555, -0.000271806260907872)
dAdt: (-0.0000466293766394706, 0.0000518104184883007)
A: (-1, -1)
S: (0.139111289632134, 0.416986163120088)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (-1.99980000666658, 1.79982000599992)
S: (0.0493994257763976, 0.416986163120088)
D: ((Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), 81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
D: (-0.0000925312931058545, 0.0000199994215147672)
I: (-9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), -9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
I: (-0.0000222215794608525, 0.0000832781637952690)
dAdt: (-0.000114752872566707, 0.000103277585310036)
A: (-1.99755100025328, 1.79779590022795)
S: (0.172768342439991, 0.416986163120088)
D: ((Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), 81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
D: (0.000323616679396172, 0.000244625634817084)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), -9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
I: (-0.000271806260907872, -0.000291255011456555)
dAdt: (0.0000518104184883007, -0.0000466293766394706)
A: (-1, -1)
S: (0.416986163120088, 0.416986163120088)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
(('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)), (u_0_R_0, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)): (u_0_R_0, u_0_R_1) |--> -1}
(('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)), -cos(u_0_P_0 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)): -cos(u_0_P_0 - u_0_R_0) - 1}
(('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)), (u_0_P_1, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)): (u_0_P_1, u_0_P_0) |--> 0}
(('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)), (u_0_P_0, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)): (u_0_P_0, u_0_P_0) |--> 0}
(('r_0_P_0', (u_0_P_0,)), u_0_P_0 |--> -1) as tuple:expr?
{('r_0_P_0', (u_0_P_0,)): u_0_P_0 |--> -1}
(('r_0_R_1', (u_0_R_1,)), u_0_R_1 |--> 1) as tuple:expr?
{('r_0_R_1', (u_0_R_1,)): u_0_R_1 |--> 1}
(('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)), (u_0_R_1, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)): (u_0_R_1, u_0_R_1) |--> -1}
(('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)), 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)): 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10}
(('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)), 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)): 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10}
(('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)), 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)): 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10}
(('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)), (u_0_P_0, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)): (u_0_P_0, u_0_P_1) |--> 0}
(('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)), -cos(u_0_P_0 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)): -cos(u_0_P_0 - u_0_R_1) - 1}
(('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)), -cos(u_0_P_1 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)): -cos(u_0_P_1 - u_0_R_1) - 1}
(('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)), (u_0_R_1, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)): (u_0_R_1, u_0_R_0) |--> -1}
(('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)), (u_0_R_0, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)): (u_0_R_0, u_0_R_0) |--> -1}
(('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)), (u_0_P_1, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)): (u_0_P_1, u_0_P_1) |--> 0}
(('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)), 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)): 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10}
(('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)), -cos(u_0_P_1 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)): -cos(u_0_P_1 - u_0_R_0) - 1}
(('r_0_P_1', (u_0_P_1,)), u_0_P_1 |--> -1) as tuple:expr?
{('r_0_P_1', (u_0_P_1,)): u_0_P_1 |--> -1}
(('r_0_R_0', (u_0_R_0,)), u_0_R_0 |--> 1) as tuple:expr?
{('r_0_R_0', (u_0_R_0,)): u_0_R_0 |--> 1}
(('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)), (u_0_P_1, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_1', (u_0_P_1, u_0_P_1)): (u_0_P_1, u_0_P_1) |--> 0}
(('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)), -cos(u_0_P_0 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_0', (u_0_R_1, u_0_P_0)): -cos(u_0_P_0 - u_0_R_1) - 1}
(('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)), (u_0_R_0, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_1', (u_0_R_0, u_0_R_1)): (u_0_R_0, u_0_R_1) |--> -1}
(('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)), -cos(u_0_P_0 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_0', (u_0_R_0, u_0_P_0)): -cos(u_0_P_0 - u_0_R_0) - 1}
(('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)), -cos(u_0_P_1 - u_0_R_1) - 1) as tuple:expr?
{('a_0_R_1_0_P_1', (u_0_R_1, u_0_P_1)): -cos(u_0_P_1 - u_0_R_1) - 1}
(('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)), (u_0_P_1, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_1_0_P_0', (u_0_P_1, u_0_P_0)): (u_0_P_1, u_0_P_0) |--> 0}
(('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)), (u_0_P_0, u_0_P_0) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_0', (u_0_P_0, u_0_P_0)): (u_0_P_0, u_0_P_0) |--> 0}
(('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)), (u_0_P_0, u_0_P_1) |--> 0) as tuple:expr?
{('a_0_P_0_0_P_1', (u_0_P_0, u_0_P_1)): (u_0_P_0, u_0_P_1) |--> 0}
(('r_0_P_0', (u_0_P_0,)), u_0_P_0 |--> -1) as tuple:expr?
{('r_0_P_0', (u_0_P_0,)): u_0_P_0 |--> -1}
(('r_0_P_1', (u_0_P_1,)), u_0_P_1 |--> -1) as tuple:expr?
{('r_0_P_1', (u_0_P_1,)): u_0_P_1 |--> -1}
(('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)), 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_1', (u_0_P_0, u_0_R_1)): 9/10*cos(u_0_P_0 - u_0_R_1) + 9/10}
(('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)), (u_0_R_0, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_0_0_R_0', (u_0_R_0, u_0_R_0)): (u_0_R_0, u_0_R_0) |--> -1}
(('r_0_R_1', (u_0_R_1,)), u_0_R_1 |--> 1) as tuple:expr?
{('r_0_R_1', (u_0_R_1,)): u_0_R_1 |--> 1}
(('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)), -cos(u_0_P_1 - u_0_R_0) - 1) as tuple:expr?
{('a_0_R_0_0_P_1', (u_0_R_0, u_0_P_1)): -cos(u_0_P_1 - u_0_R_0) - 1}
(('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)), (u_0_R_1, u_0_R_1) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_1', (u_0_R_1, u_0_R_1)): (u_0_R_1, u_0_R_1) |--> -1}
(('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)), 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_0', (u_0_P_1, u_0_R_0)): 9/10*cos(u_0_P_1 - u_0_R_0) + 9/10}
(('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)), 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10) as tuple:expr?
{('a_0_P_1_0_R_1', (u_0_P_1, u_0_R_1)): 9/10*cos(u_0_P_1 - u_0_R_1) + 9/10}
(('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)), (u_0_R_1, u_0_R_0) |--> -1) as tuple:expr?
{('a_0_R_1_0_R_0', (u_0_R_1, u_0_R_0)): (u_0_R_1, u_0_R_0) |--> -1}
(('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)), 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10) as tuple:expr?
{('a_0_P_0_0_R_0', (u_0_P_0, u_0_R_0)): 9/10*cos(u_0_P_0 - u_0_R_0) + 9/10}
(('r_0_R_0', (u_0_R_0,)), u_0_R_0 |--> 1) as tuple:expr?
{('r_0_R_0', (u_0_R_0,)): u_0_R_0 |--> 1}
A: (-1, -1)
S: (0.139111289632134, 0.139111289632134)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (-1.99280863585387, 1.79352777226848)
S: (0.0493994257763976, 0.139111289632134)
D: ((Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0), 81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0))
D: (0.000184785019613828, 0.000119716725657138)
I: (-9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0))
I: (-0.000133018584063486, -0.000166306517652445)
dAdt: (0.0000517664355503417, -0.0000465897919953075)
A: (-1.99955003374899, 1.79959503037409)
S: (0.172768342439991, 0.139111289632134)
D: ((Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0), 81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0))
D: (0.0000463003666774572, -0.000104909487646122)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0))
I: (0.000116566097384580, -0.0000416703300097115)
dAdt: (0.000162866464062037, -0.000146579817655833)
A: (-1, -1)
S: (0.416986163120088, 0.139111289632134)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (1.79352777226848, -1.99280863585387)
S: (0.139111289632134, 0.0493994257763976)
D: (81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0), (Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0))
D: (0.000119716725657138, 0.000184785019613828)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_1 - u_0_R_0), -9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_0))
I: (-0.000166306517652445, -0.000133018584063486)
dAdt: (-0.0000465897919953075, 0.0000517664355503417)
A: (0, 0)
S: (0.0493994257763976, 0.0493994257763976)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (0, 0)
S: (0.172768342439991, 0.0493994257763976)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (1.79982000599992, -1.99980000666658)
S: (0.416986163120088, 0.0493994257763976)
D: (81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), (Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
D: (0.0000199994215147672, -0.0000925312931058545)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), -9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
I: (0.0000832781637952690, -0.0000222215794608525)
dAdt: (0.000103277585310036, -0.000114752872566707)
A: (1.79959503037409, -1.99955003374899)
S: (0.139111289632134, 0.172768342439991)
D: (81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0), (Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0))
D: (-0.000104909487646122, 0.0000463003666774572)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0))*sin(u_0_P_0 - u_0_R_0), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_0))
I: (-0.0000416703300097115, 0.000116566097384580)
dAdt: (-0.000146579817655833, 0.000162866464062037)
A: (0, 0)
S: (0.0493994257763976, 0.172768342439991)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (0, 0)
S: (0.172768342439991, 0.172768342439991)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (1.79779590022795, -1.99755100025328)
S: (0.416986163120088, 0.172768342439991)
D: (81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), (Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
D: (0.000244625634817084, 0.000323616679396172)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), -9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
I: (-0.000291255011456555, -0.000271806260907872)
dAdt: (-0.0000466293766394706, 0.0000518104184883007)
A: (-1, -1)
S: (0.139111289632134, 0.416986163120088)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
A: (-1.99980000666658, 1.79982000599992)
S: (0.0493994257763976, 0.416986163120088)
D: ((Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), 81/100*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
D: (-0.0000925312931058545, 0.0000199994215147672)
I: (-9/10*(Xhat_0_P_1*Xhat_0_R_0*gamma*sin(u_0_P_1 - u_0_R_0) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1), -9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_1 - u_0_R_1))
I: (-0.0000222215794608525, 0.0000832781637952690)
dAdt: (-0.000114752872566707, 0.000103277585310036)
A: (-1.99755100025328, 1.79779590022795)
S: (0.172768342439991, 0.416986163120088)
D: ((Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), 81/100*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
D: (0.000323616679396172, 0.000244625634817084)
I: (-9/10*(Xhat_0_P_0*Xhat_0_R_0*gamma*sin(u_0_P_0 - u_0_R_0) + Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1), -9/10*(Xhat_0_P_0*Xhat_0_R_1*gamma*sin(u_0_P_0 - u_0_R_1) + Xhat_0_P_1*Xhat_0_R_1*gamma*sin(u_0_P_1 - u_0_R_1))*sin(u_0_P_0 - u_0_R_1))
I: (-0.000271806260907872, -0.000291255011456555)
dAdt: (0.0000518104184883007, -0.0000466293766394706)
A: (-1, -1)
S: (0.416986163120088, 0.416986163120088)
D: (0, 0)
D: (0, 0)
I: (0, 0)
I: (0, 0)
dAdt: (0, 0)
